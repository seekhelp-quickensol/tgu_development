<?phpif(!defined('BASEPATH')) exit("direct access not allowed");class Separate_student_controller extends CI_Controller{        public function __construct(){		parent::__construct();		$this->is_logged();		$this->check_access();	}	public function is_logged(){		if($this->session->userdata('admin_id') == ""){			redirect('erp-access');		}	}	public function check_access(){		if($this->session->userdata('admin_id') != "1"){			$access = $this->Setting_model->get_user_privilege_link();			if(!in_array($this->uri->segment(1),$access)){				$this->session->set_flashdata('message','Sorry! You dont have access to this module!');				redirect(base_url());			}		}	}    public function addmission_form(){        $this->form_validation->set_rules("student_name","name","required");        if($this->form_validation->run()==FALSE){           if(!empty($this->uri->segment(2))){            $data['student'] = $this->Separate_student_model->get_student_addmission_data();           }			$data['course'] = $this->Course_model->get_all_course_stream_relation_sep();			$data['session'] = $this->Student_model->get_all_session();			$data["centers"] = $this->Separate_student_model->get_all_centers();			$data['country'] = $this->Admin_model->get_all_country();            $this->load->view("admin/separate_student_addmission_form",$data);        }else{        	$document ='';						if($_FILES['document']['name'] !=""){				$document = $this->Digitalocean_model->upload_photo($filename="document",$path="images/separate_student/"); 				 				/*$config = array(					'upload_path' 	=> "images/separate_student",					'allowed_types' => "*",					'encrypt_name' => TRUE,				);							$this->upload->initialize($config);				if($this->upload->do_upload('document')){					$data = $this->upload->data();									$document = $data['file_name'];					}*/			}else{				$document = $this->input->post("old_document");			}			 			$photo ='';			if($_FILES['photo']['name'] !=""){				$photo = $this->Digitalocean_model->upload_photo($filename="photo",$path="images/separate_student/photo/"); 				/*$config = array(					'upload_path' 	=> "images/separate_student",					'allowed_types' => "*",					'encrypt_name' => TRUE,				);							$this->upload->initialize($config);				if($this->upload->do_upload('document')){					$data = $this->upload->data();									$document = $data['file_name'];					}*/			}else{				$photo = $this->input->post("old_photo");			}        	$identity_file ='';			if($_FILES['identity_file']['name'] !=""){				$identity_file = $this->Digitalocean_model->upload_photo($filename="identity_file",$path="images/separate_student/"); 				/*$config = array(					'upload_path' 	=> "images/separate_student",					'allowed_types' => "*",					'encrypt_name' => TRUE,				);							$this->upload->initialize($config);				if($this->upload->do_upload('identity_file')){					$data = $this->upload->data();									$identity_file = $data['file_name'];					}*/			}else{				$identity_file = $this->input->post("old_identity_file");			}					// echo"<pre>";			// print_r($FILES);			// print_r($_POST);			//$multiple_document = array();			// if(isset($_FILES['other_document_file']) && $_FILES['other_document_file']['name'] != ""){			// 	$files = $_FILES;			// 	$cpt = count($_FILES['other_document_file']['name']);			// 	for($i=0; $i<$cpt; $i++){			// 		$_FILES['userfile']['name']= $files['other_document_file']['name'][$i];			// 		$_FILES['userfile']['type']= $files['other_document_file']['type'][$i];			// 		$_FILES['userfile']['tmp_name']= $files['other_document_file']['tmp_name'][$i];			// 		$_FILES['userfile']['error']= $files['other_document_file']['error'][$i];			// 		$_FILES['userfile']['size']= $files['other_document_file']['size'][$i];			// 		$this->load->library('upload');			// 		$this->upload->initialize($this->set_upload_other_documents_multiple_options());			// 		if(!$this->upload->do_upload()){			// 			$error = array('error' => $this->upload->display_errors());			// 			echo $this->upload->display_errors();			// 		}else{			// 			$all_file = $this->upload->data();			// 			$multiple_document[] = $all_file['file_name'];				// 		}				// 	}			// }			///$multiple_document=implode(',',$multiple_document);			$signature ='';			if($_FILES['signature']['name'] !=""){				$signature = $this->Digitalocean_model->upload_photo($filename="signature",$path="images/separate_student/signature/"); 				/*$config = array(					'upload_path' 	=> "images/separate_student",					'allowed_types' => "*",					'encrypt_name' => TRUE,				);							$this->upload->initialize($config);				if($this->upload->do_upload('identity_file')){					$data = $this->upload->data();									$identity_file = $data['file_name'];					}*/			}else{				$signature = $this->input->post("old_signature");			}			            $responce = $this->Separate_student_model->set_addmission_form($document,$identity_file,$photo,$signature);            if($responce){                $this->session->set_flashdata('success','Addmission done successfully');            }else{                $this->session->set_flashdata('success','updation done successfully');            }			redirect("student_addmission_form");        }    }    public function set_upload_other_documents_multiple_options() {		$config = array();		$config ['upload_path'] = 'images/separate_student';		$config ['allowed_types'] = '*';		$config ['encrypt_name'] = true;		return $config;	}    public function print_sep_id(){ 		$student_id = $this->uri->segment(2);        $data["student_profile"] = $this->Separate_student_model->get_sep_id_student($student_id);        $this->load->view('admin/separate_id',$data);    }    public function enrolled_student_list(){		if($this->input->post('activate') == "activate"){			$this->Separate_student_model->all_activate_center_wise_separate();			$this->session->set_flashdata('success','Addmission activated successfully');			redirect($_SERVER['HTTP_REFERER']);		}		if($this->input->post('hold') == "hold"){			$this->Separate_student_model->all_hold_center_wise_separate();			$this->session->set_flashdata('success','Addmission hold successfully');			redirect($_SERVER['HTTP_REFERER']);		}		$data["centers"] = $this->Admin_model->get_center_data_for_dropdown();		$data['session'] = $this->Student_model->get_all_session_list();        $this->load->view("admin/enrolled_student_list",$data);    }	public function cancel_blended_student_list(){		if($this->input->post('activate') == "activate"){			$this->Separate_student_model->all_activate_center_wise_separate();			$this->session->set_flashdata('success','Addmission activated successfully');			redirect($_SERVER['HTTP_REFERER']);		}		if($this->input->post('hold') == "hold"){			$this->Separate_student_model->all_hold_center_wise_separate();			$this->session->set_flashdata('success','Addmission hold successfully');			redirect($_SERVER['HTTP_REFERER']);		}		$data["centers"] = $this->Admin_model->get_center_data_for_dropdown();		$data['session'] = $this->Student_model->get_all_session_list();        $this->load->view("admin/cancel_blended_student_list",$data);    }	public function manage_separate_student_result(){		$data['subject'] = array();		if($this->input->post('show_subject') == "Show Subject"){			$data['subject'] = $this->Separate_student_model->get_result_subject();			$data['course_stream'] = $this->Separate_student_model->get_result_student();			// $data['exam_form'] = $this->Exam_model->get_student_exam_form_status(); 			// $data['student_exam_status'] = $this->Exam_model->get_exam_status();  		}		if($this->input->post('add_result') == "Add Result"){ 			$result = $this->Separate_student_model->set_result();			if($result){				$this->session->set_flashdata('success','Result added successfull');			}else{				$this->session->set_flashdata('message','Result already created');			} 			redirect('manage_separate_student_result');		}		$this->load->view('admin/manage_separate_student_result',$data);	}	public function search_separate_student_result(){		$data['result'] = array();		if($this->input->post('search') == "Search"){			$data['result'] = $this->Separate_student_model->get_search_result();			// echo "<pre>";print_r($this->input->post('year'));exit;			$data['exam_setup'] = $this->Separate_student_model->get_exam_setup($this->input->post('month'),$this->input->post('year'));			// echo "<pre>";print_r($data['exam_setup']);exit;		}		if($this->input->post('activate_separate_marksheet_bulk') == "Activate Marksheet"){			$this->Separate_student_model->seprate_bulk_marksheet_activation(); 			$this->session->set_flashdata('success','Marksheet activated successfull');			redirect('search_separate_student_result');		}		$data['course'] = $this->Web_model->get_all_course_stream_relation();		$this->load->view('admin/separate_student_search_result',$data);	}	public function inactivate_results(){		$this->Separate_student_model->inactivate_results();		$this->session->set_flashdata('success','Result inactivated successfull');		redirect($_SERVER['HTTP_REFERER']);	}	public function activate_results(){		$this->Separate_student_model->activate_results();		$this->session->set_flashdata('success','Result activated successfull');		redirect($_SERVER['HTTP_REFERER']);	}	public function generate_marksheet(){		$data['single_result'] = $this->Separate_student_model->get_single_result();		$data['course_stream'] = $this->Separate_student_model->get_marksheet_student();		$data['signature'] = $this->Separate_student_model->get_all_signature();		// print_r($data['course_stream']);exit;		$this->form_validation->set_rules('result_declare_date','result date','required');		if($this->form_validation->run() === FALSE){		    			$this->load->view('admin/generate_separate_studentmarksheet',$data);		}else{			$result = $this->Separate_student_model->generate_marksheet();			if($result == "0"){				$this->session->set_flashdata('success','Marksheet generated successfull!');			}else{				$this->session->set_flashdata('success','Marksheet updated successfull!');			}			redirect($_SERVER['HTTP_REFERER']);		}	}	public function update_result(){		$data['result'] = $this->Separate_student_model->get_single_result(); 		$this->form_validation->set_rules('comboMonth','month','required');		if($this->form_validation->run() === FALSE){			$this->load->view('admin/update_separate_student_result',$data);		}else{			$result = $this->Separate_student_model->update_result();			$this->session->set_flashdata('success','Result updated successfull');			redirect('search_separate_student_result');		}	}	public function delete_result(){		$this->Separate_student_model->delete_result();		$this->session->set_flashdata('success','Result deleted successfull');		redirect($_SERVER['HTTP_REFERER']);	}		public function activate_all_separate_student_results(){		$this->Separate_student_model->activate_all_separate_student_results();		$this->session->set_flashdata('success','All Results activated successfull');		redirect($_SERVER["HTTP_REFERER"]);	}	public function deactivate_all_separate_student_results(){		$this->Separate_student_model->deactivate_all_separate_student_results();		$this->session->set_flashdata('success','All Results deactivated successfull');		redirect($_SERVER["HTTP_REFERER"]);	}		public function separate_student_generated_results(){		$this->load->view("admin/separate_student_generated_results");	}		public function manage_separate_student_account(){		$this->form_validation->set_rules("separate_student_id","student","required");		if($this->form_validation->run() === FALSE){			$data["student"] = $this->Separate_student_model->get_student_addmission_data();			$data["account"] = $this->Separate_student_model->get_separate_student_account_details();			if(!empty($this->uri->segment(3))){				$data["single"] = $this->Separate_student_model->get_separate_student_fees_for_edit();			}			$this->load->view("admin/manage_separate_student_account",$data);		}else{			$res = $this->Separate_student_model->set_separate_student_account();			if($res == "saved"){				$this->session->set_flashdata('success','Saved successfull');			}else{				$this->session->set_flashdata('success','Updated successfull');			}			redirect("manage_separate_student_account/".$this->input->post("separate_student_id"));		}	}		public function separate_student_re_registration(){		$this->form_validation->set_rules("year_sem","year sem","required");		if($this->form_validation->run() === FALSE){			$data["student"] = $this->Separate_student_model->get_student_addmission_data();			$this->load->view("admin/separate_student_re_registration",$data);		}else{			$this->Separate_student_model->separate_student_re_registration();			$this->session->set_flashdata('success','Re registration  successfull');			redirect("enrolled_student_list");		}	}				public function search_marksheet(){		$data['marksheet'] = array();		if($this->input->post('search') == "Search"){			$data['marksheet'] = $this->Separate_student_model->get_search_markheet(); 		}		if($this->input->post('send_btn') == "send_btn"){			$this->Separate_student_model->set_for_print_marksheet(); 			$this->session->set_flashdata('success','Marksheet successfully send for print');			redirect('separate_student_search_marksheet');		} 		$data['course'] = $this->Web_model->get_all_course_stream_relation();		$this->load->view('admin/separate_student_search_marksheet',$data);	}	public function create_duplicate_marksheet_blended(){		$this->form_validation->set_rules('student_name','student name','required');		if($this->form_validation->run() === FALSE){			$data['student'] = $this->Separate_student_model->get_single_blended_marksheet_for_duplicate();			// $data['document'] = $this->Separate_student_model->get_documents();			// echo "<pre>";print_r($data['student']);exit;			$this->load->view('admin/create_duplicate_marksheet_blended',$data);		}else{			$document ='';			if($_FILES['document']['name'] !=""){				$document = $this->Digitalocean_model->upload_photo($filename="document",$path="images/duplicate_marksheet_document/");				/*$tmp = explode('.', $_FILES['userfile']['name']);				$ext = end($tmp);				$config = array(					'upload_path' 	=> "uploads/csv/",					'allowed_types' => "csv",					'encrypt_name' 	=> TRUE,				);				$this->upload->initialize($config);				if($this->upload->do_upload('userfile')){					$data = $this->upload->data();					$photo = $data['file_name'];				}else{					$error = array('error' => $this->upload->display_errors());					$this->upload->display_errors();					$this->session->set_flashdata('message','Please upload only .csv file');					redirect($_SERVER['HTTP_REFERER']);				}*/			}			$this->Separate_student_model->set_duplicate_marksheet($document);			$this->session->set_flashdata('success','Duplicate marksheet created successfully!');			redirect('duplicate_marksheet_blended');		}	}	public function blended_student_activity(){		if($this->input->post('update_remark') == "update_remark"){			if(!empty($_FILES["userfile"]['name'][0]) && $_FILES["userfile"]['name'][0] != ""){				$fileName = $this->Digitalocean_model->upload_photo_multiple($filename="userfile",$path="student_remark_document/");			}else{				$fileName = $this->input->post('edit_file');			} 			$this->Separate_student_model->update_activity_remark($fileName);			$this->session->set_flashdata('success','Remark updated successfully!');			redirect($_SERVER['HTTP_REFERER']);		}		$this->form_validation->set_rules('remark','remark','required');		if($this->form_validation->run() === FALSE){			$data['activity'] = $this->Separate_student_model->get_student_all_activities();			$data['student'] = $this->Student_model->get_single_student();			$this->load->view('admin/student_activity_blended',$data);		}else{			$fileName = $this->Digitalocean_model->upload_photo_multiple($filename="userfile",$path="student_remark_document/");			$this->Separate_student_model->set_student_special_remark($fileName);			$this->session->set_flashdata('success','Remark added successfully!');			redirect($_SERVER['HTTP_REFERER']);		}	}	public function duplicate_marksheet_blended(){		$data['marksheet'] = array();		if($this->input->post('search') == "Search"){			$data['marksheet'] = $this->Separate_student_model->get_all_duplicate_marksheet();		}		if($this->input->post('send_btn') == "send_btn"){			$this->Separate_student_model->set_for_print_marksheet_duplicate(); 			$this->session->set_flashdata('success','Marksheet successfully send for print');			redirect('duplicate_marksheet_blended');		} 		$data['course'] = $this->Web_model->get_all_course_stream_relation();		$this->load->view('admin/search_marksheet_duplicate',$data);	} 	public function print_duplicate_inner_marksheet_blended(){		$data['marksheet'] = $this->Separate_student_model->get_single_marksheet($this->uri->segment(2)); 		// echo "<pre>";print_r($data['marksheet']);exit;		$data['signature'] = $this->Setting_model->get_all_signature();		$this->load->view('admin/SimpleFunctions');		$this->load->view('marksheet/print_duplicate_inner_marksheet_blended',$data);	}	public function print_inner_marksheet(){		$data['marksheet'] = $this->Separate_student_model->get_single_marksheet($this->uri->segment(2));  		$data['signature'] = $this->Separate_student_model->get_all_signature();		$this->load->view('admin/SimpleFunctions');		$this->load->view('marksheet/separate_student_marksheet',$data);	}	public function edit_marksheet(){		$data['marksheet'] = $this->Separate_student_model->get_single_marksheet($this->uri->segment(2));		$data['signature'] = $this->Separate_student_model->get_all_signature();		$this->form_validation->set_rules('result_declare_date','result date','required');		if($this->form_validation->run() === FALSE){			$this->load->view('admin/edit_separate_student_marksheet',$data);		}else{			$result = $this->Separate_student_model->edit_marksheet();			$this->session->set_flashdata('success','Marksheet updated successfull!');			redirect('separate_student_search_marksheet');		}	}		public function delete_marksheet(){		$this->Separate_student_model->delete_marksheet();		$this->session->set_flashdata('success','Marksheet deleted successfull!');		redirect($_SERVER['HTTP_REFERER']);	}		//seperate student marksheet dispatch list	public function separate_marksheet_print_dispatch_list(){		if($this->input->post('send_btn') == "send_btn"){			$this->Separate_student_model->remove_from_dispatch();			redirect('separate_marksheet_print_dispatch_list');		}		$data['dispatched_marksheets'] = $this->Separate_student_model->get_dispatched_marksheets();		// echo "<pre>";		// print_r($data['dispatched_marksheets']);exit();		$this->load->view("admin/separate_marksheet_dispatch_list",$data);	}	public function generated_results_excel(){		if($this->input->post('send_btn') == "send_btn"){			$this->Separate_student_model->set_for_print_marksheet();			redirect('generated_separate_student_results_excel');		}		$data["all_data"] = array();		//if(!empty($_POST)){			$data["all_data"] = $this->Separate_student_model->generated_results_excel();		//}		// $this->load->view("admin/generated_results_excel_separate",$data);		$this->load->view("admin/generated_results_excel",$data);	} 	public function generated_pre_student_results_excel(){		if($this->input->post('send_btn') == "send_btn"){			$this->Separate_student_model->set_for_print_marksheet();			redirect('generated_pre_student_results_excel');		}		$data["all_data"] = array();		$data["all_data"] = $this->Separate_student_model->generated_pre_results_excel();		$this->load->view("admin/generated_pre_student_results_excel_separate",$data);		}	public function separate_abstract_report_list(){		$this->load->view("admin/separate_abstract_report_list");	}	public function separate_progress_report_list(){		$this->load->view("admin/separate_progress_report_list");	}	public function hold_separate_login(){		$this->Separate_student_model->hold_separate_login();		$this->session->set_flashdata('success','Record update successfully');		redirect($_SERVER['HTTP_REFERER']);	}	public function activate_separate_login(){		$this->Separate_student_model->activate_separate_login();		$this->session->set_flashdata('success','Record update successfully');		redirect($_SERVER['HTTP_REFERER']);	} 	public function hold_separate_login_single(){		$this->Separate_student_model->hold_separate_login_single();		$this->session->set_flashdata('success','Record update successfully');		redirect($_SERVER['HTTP_REFERER']);	}	public function activate_separate_login_single(){		$this->Separate_student_model->activate_separate_login_single();		$this->session->set_flashdata('success','Record update successfully');		redirect($_SERVER['HTTP_REFERER']);	}	public function activate_separate_hallticket(){		$data["students"] = $this->Separate_student_model->get_sep_id_student();		if(!empty($data['students'])){			// $data['exam_setup'] =$this->get_hallticket_setup($_GET['exam_month'],$_GET['exam_year']);			$data['exam_setup'] = isset($_GET['exam_month']) && isset($_GET['exam_year']) ? $this->get_hallticket_setup($_GET['exam_month'],$_GET['exam_year']) : null;		}		$this->load->view('admin/separate_hallticket',$data);	}	public function get_hallticket_setup($exam_month,$exam_year){		// echo "<pre>";print_r($_GET['exam_month']);exit;		$this->db->select('tbl_exam_setup.*,tbl_signature.name as signature_name,tbl_signature.signature,tbl_signature.dispalay_signature');		$this->db->where('tbl_exam_setup.status','1');		$this->db->where('tbl_exam_setup.student_type','1');		$this->db->where('tbl_exam_setup.is_deleted','0');		$this->db->where('tbl_exam_setup.month', $exam_month); 		$this->db->where('tbl_exam_setup.year', $exam_year);		$this->db->join("tbl_signature","tbl_signature.id = tbl_exam_setup.signature",'left');		$result = $this->db->get('tbl_exam_setup');		return  $result->row();		// echo "<pre>";print_r($result);exit;		// echo "<pre>";print_r($data['exam_setup']);exit;	}		}?>