<?php defined('BASEPATH') OR exit('No direct script access allowed');class Payment_controller extends CI_Controller {
	public function direct_pay(){		$this->form_validation->set_rules('name','name','required');		if($this->form_validation->run() === FALSE){			$data['head'] = $this->Web_model->get_payment_head();			$this->load->view('payment/direct_pay',$data);		}else{			/*$secret = '6LfinagZAAAAAIHQBJ71QUzeozbrTEjDeGl2E0E3';			$verifyResponse = file_get_contents('https://www.google.com/recaptcha/api/siteverify?secret='.$secret.'&response='.$_POST['g-recaptcha-response']);			$responseData = json_decode($verifyResponse);			if($responseData->success){			}*/			$this->Payment_model->set_direct_payment();		}	}	public function direct_payment(){		$data['payment'] = $this->Payment_model->get_direct_payment();		/*$freecharge_data = $this->payvia_freecharge($data['payment']);		$data['req'] = $freecharge_data;		$data['checksum'] = $this->generateChecksumForJson ( json_decode ( json_encode ( $data['req'] ), JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE ), "67726486-8226-41d2-a062-93702cc630ba" );*/		$this->load->view('payment/direct_payment',$data);	}	public function payvia_freecharge($data){		$req = new stdClass();		$otp = rand ( 10000 , 99999 );		$req->merchantTxnId = "TGU_FC_PYMT_".$otp.$data->id;		$req->amount = $data->amount.".00";		$req->currency = "INR";		$req->furl = base_url().'failed_freecharge?id='.$data->id;		$req->surl = base_url().'success_freecharge?id='.$data->id;		$req->email = $data->email;		$req->mobile = $data->mobile_number;		$req->customerName = $data->name;		$req->channel = "WEB";		$req->merchantId = "YpvEjekeEmpXRq";		$req->customNote = "PAID VIA FREECHARGE";		return (array)$req;	}	public function direct_ccavRequestHandler(){		$this->load->view('payment/direct_ccavRequestHandler');	}	public function direct_ccavResponseHandler(){		$this->load->view('payment/direct_ccavResponseHandler');	}		public function admission_payment(){  
		$data['student'] = $this->Web_model->get_admission_challan_student(); 
		$data['fees'] = $this->Web_model->get_admission_challan_student_fees(); 		$data['fee_details'] = array(			'id' 			=> $data['student']->id,			'email' 		=> $data['student']->email,			'mobile' 		=> $data['student']->mobile,			'student_name' 	=> $data['student']->student_name,			'total_fees' 	=> $data['fees']->total_fees,		);		$freecharge_data = $this->payvia_freecharge_admission($data['fee_details']);		$data['req'] = $freecharge_data;		$data['checksum'] = $this->generateChecksumForJson ( json_decode ( json_encode ( $data['req'] ), JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE ), "67726486-8226-41d2-a062-93702cc630ba" );		 		$this->load->view('payment/admission_payment',$data);	}	public function payvia_freecharge_admission($data){		$req = new stdClass();		$otp = rand ( 10000 , 99999 );		$req->merchantTxnId = "TGU_FC_PYMT_".$otp.$data['id'];		$req->amount = $data['total_fees'].".00";		//$req->amount = number_format(1,2);		$req->currency = "INR";		$req->furl = base_url().'admission_freecharge?id='.$data['id'];		$req->surl = base_url().'admission_freecharge?id='.$data['id'];		$req->email = $data['email'];		$req->mobile = $data['mobile'];		$req->customerName = $data['student_name'];		$req->channel = "WEB";		$req->merchantId = "YpvEjekeEmpXRq";		$req->customNote = "PAID VIA FREECHARGE";		return (array)$req;	}	public function admission_freecharge(){		// "Array ( [success_freecharge] => [id] => 1 [txnId] => YpvEjekeEmpXRq_iTEST1_***sdsds%1244_1 [merchantTxnId] => iTEST1_***sdsds%1244 [amount] => 1.00 [merchantName] => [merchantLogo] => [metadata] => [status] => COMPLETED [authCode] => [checksum] => 97516f64cbd2006283f7f762879e6db1eb8b96cecf764848efabbcb0b9f84a66 ) "		$data['student_data'] = $this->Payment_model->update_admission_payment();		$this->load->view('payment/admission_receipt_freecharge',$data);	}		public function admission_ccavRequestHandler(){		$this->load->view('payment/admission_ccavRequestHandler');	}	public function admission_ccavResponseHandler(){		$this->load->view('payment/admission_ccavResponseHandler');	}	public function re_registration_ccavResponseHandler(){		$this->load->view('payment/re_registration_ccavResponseHandler');	}			public function phd_registration_payment(){		$data['payment'] = $this->Payment_model->get_phd_registration_fees();		// $this->load->view('web/header');		$this->load->view('payment/direct_pay_for_phd_registration',$data);		// $this->load->view('web/footer');	}	public function phd_registration_payment_freecharge(){		$data['payment'] = $this->Payment_model->get_phd_registration_fees();		/*$freecharge_data = $this->payvia_freecharge_registration_phd($data['payment']);		$data['req'] = $freecharge_data;		$data['checksum'] = $this->generateChecksumForJson ( json_decode ( json_encode ( $data['req'] ), JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE ), "67726486-8226-41d2-a062-93702cc630ba" );*/				$this->load->view('web/header');		$this->load->view('payment/phd_registration_payment_freecharge',$data);		$this->load->view('web/footer');	}	public function payvia_freecharge_registration_phd($data){		$otp = rand ( 10000 , 99999 ); 		$req = new stdClass();		$req->merchantTxnId = "TGU_FC_PYMT_".$otp.$data->id;		$req->amount = $data->amount.".00";		//$req->amount = number_format(1,2);		$req->currency = "INR";		$req->furl = base_url().'phd_registration_freecharge?id='.$data->id;		$req->surl = base_url().'phd_registration_freecharge?id='.$data->id;		$req->email = $data->email_id;		$req->mobile = $data->mobile_number;		$req->customerName = $data->student_name;		$req->channel = "WEB";		$req->merchantId = "YpvEjekeEmpXRq";		$req->customNote = "PAID VIA FREECHARGE";		return (array)$req;	}	public function phd_registration_freecharge(){		$data['result'] = $this->Payment_model->update_phd_payment();		$this->load->view('payment/phd_registration_freecharge',$data);	}	public function direct_ccavRequestHandler_phd(){		$this->load->view('payment/direct_ccavRequestHandler_phd');	}	public function direct_ccavResponseHandler_phd(){		$this->load->view('payment/direct_ccavResponseHandler_phd');	}					public function failed_freecharge(){		$this->session->set_flashdata('message','Payment Failed, Please try again.');		redirect(base_url());	}	public function success_freecharge(){		// "Array ( [success_freecharge] => [id] => 1 [txnId] => YpvEjekeEmpXRq_iTEST1_***sdsds%1244_1 [merchantTxnId] => iTEST1_***sdsds%1244 [amount] => 1.00 [merchantName] => [merchantLogo] => [metadata] => [status] => COMPLETED [authCode] => [checksum] => 97516f64cbd2006283f7f762879e6db1eb8b96cecf764848efabbcb0b9f84a66 ) "		$data['result'] = $this->Payment_model->update_freecharge_txn();		$this->load->view('payment/direct_freecharge_receipt',$data);	}		public function generateChecksumForJson($json_decode, $merchantKey){        $sanitizedInput = $this->sanitizeInput($json_decode, $merchantKey);        $serializedObj = $sanitizedInput . $merchantKey;        return $this->calculateChecksum($serializedObj);    }    public function calculateChecksum($serializedObj){        $checksum = hash('sha256', $serializedObj, false);        return $checksum;    }    public function recur_ksort(&$array){        foreach ($array as & $value){            if (is_array($value)) $this->recur_ksort($value);        }        return ksort($array);    }    public function sanitizeInput(array $json_decode, $merchantKey){        $reqWithoutNull = array_filter($json_decode, function ($k){            if (is_null($k)){                return false;            }            if (is_array($k)){                return true;            }            return !(trim($k) == "");        });        $this->recur_ksort($reqWithoutNull);        $flags = JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE;        return json_encode($reqWithoutNull, $flags);    } 	public function make_exam_payment(){		// if ($data['fees'] !== null) {		// 	$id = $data['fees']->id;		// } else {		// 	$id = null; 		// }		$data['student'] = $this->Web_model->get_examination_student_details_payment(base64_decode($this->uri->segment(3)));		// print_r($data['student'] );exit();		$data['fees'] = $this->Web_model->get_examination_form_fees_details();				$freecharge_data = $this->payvia_freecharge_examination($data['fees'],$data['student']);		$data['req'] = $freecharge_data;		$data['checksum'] = $this->generateChecksumForJson ( json_decode ( json_encode ( $data['req'] ), JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE ), "67726486-8226-41d2-a062-93702cc630ba" );		$this->load->view('payment/make_exam_payment',$data);	}	public function pay_re_appear(){  
		$data['student'] = $this->Web_model->get_re_appear_examination_student();  
		//$freecharge_data = $this->payvia_freecharge_examination($data['student'],$data['student']);  
		//$data['req'] = $freecharge_data; 
		//$data['checksum'] = $this->generateChecksumForJson ( json_decode ( json_encode ( $data['req'] ), JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE ), "67726486-8226-41d2-a062-93702cc630ba" );  		$this->load->view('payment/pay_re_appear',$data);	}	public function re_appear_exam_payment_ccavRequestHandler(){		$this->load->view('payment/re_appear_exam_payment_ccavRequestHandler');	}	public function re_appear_exam_payment_ccavResponseHandler(){		$this->load->view('payment/re_appear_exam_payment_ccavResponseHandler');	}	public function payvia_freecharge_examination($data,$student){		$otp = rand ( 10000 , 99999 ); 		$req = new stdClass();		$req->merchantTxnId = "BTU_FC_PYMT_".$otp.$data->id;		$req->amount = $data->total_fees.".00";		//$req->amount = number_format(1,2);		$req->currency = "INR";		$req->furl = base_url().'examination_freecharge?id='.$data->id;		$req->surl = base_url().'examination_freecharge?id='.$data->id;		$req->email = $student->email;		$req->mobile = $student->mobile;		$req->customerName = $student->student_name;		$req->channel = "WEB";		$req->merchantId = "YpvEjekeEmpXRq";		$req->customNote = "PAID VIA FREECHARGE";		return (array)$req;	}	public function examination_freecharge(){		$data['result'] = $this->Payment_model->update_exam_payment();		$this->load->view('payment/examination_freecharge',$data);	}		//7-8-2021	public function phd_course_work_payment(){		$data['payment'] = $this->Web_model->get_phd_course_work_student_data();				/*$data['payment_details'] = array(			'id' 			=> $data['course_work_data']->id,			'email' 		=> $data['course_work_data']->email,			'mobile' 		=> $data['course_work_data']->mobile,			'student_name' 	=> $data['course_work_data']->student_name,			'total_fees' 	=> $data['course_work_data']->payment_ammount,		);		$freecharge_data = $this->payvia_freecharge_phd_course_work_payment($data['payment_details']);		$data['req'] = $freecharge_data;		$data['checksum'] = $this->generateChecksumForJson ( json_decode ( json_encode ( $data['req'] ), JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE ), "67726486-8226-41d2-a062-93702cc630ba" );*/		 		$this->load->view('payment/phd_course_work_payment',$data);	}		public function payvia_freecharge_phd_course_work_payment($data){		$req = new stdClass();		$otp = rand ( 10000 , 99999 );		$req->merchantTxnId = "BTU_FC_PYMT_".$otp.$data['id'];		$req->amount = $data['total_fees'].".00";		// $req->amount = "1.00";		//$req->amount = number_format(1,2);		$req->currency = "INR";		$req->furl = base_url().'phd_course_work_freecharge?id='.$data['id'];		$req->surl = base_url().'phd_course_work_freecharge?id='.$data['id'];		$req->email = $data['email'];		$req->mobile = $data['mobile'];		$req->customerName = $data['student_name'];		$req->channel = "WEB";		$req->merchantId = "YpvEjekeEmpXRq";		$req->customNote = "PAID VIA FREECHARGE";		return (array)$req;	}		public function phd_course_work_freecharge(){		// "Array ( [success_freecharge] => [id] => 1 [txnId] => YpvEjekeEmpXRq_iTEST1_***sdsds%1244_1 [merchantTxnId] => iTEST1_***sdsds%1244 [amount] => 1.00 [merchantName] => [merchantLogo] => [metadata] => [status] => COMPLETED [authCode] => [checksum] => 97516f64cbd2006283f7f762879e6db1eb8b96cecf764848efabbcb0b9f84a66 ) "		$data['student_data'] = $this->Payment_model->update_phd_course_work_payment();		$this->load->view('payment/phd_course_work_receipt_freecharge',$data);	}			// for document verification 	public function document_verification_payment(){		$data['payment_details'] = $this->Web_model->get_document_verification_student_data();		/*		$data['payment_details'] = array(			'id' 			=> $data['payment_details']->id,			'email' 		=> $data['payment_details']->email,			'mobile' 		=> $data['payment_details']->mobile_number,			'student_name' 	=> $data['payment_details']->student_name,			'total_fees' 	=> $data['payment_details']->amount,		);		$freecharge_data = $this->payvia_freecharge_document_verification_payment($data['payment_details']);		$data['req'] = $freecharge_data;		$data['checksum'] = $this->generateChecksumForJson ( json_decode ( json_encode ( $data['req'] ), JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE ), "67726486-8226-41d2-a062-93702cc630ba" );		 */		$this->load->view('payment/document_verification_payment',$data);	}		public function payvia_freecharge_document_verification_payment($data){		$req = new stdClass();		$otp = rand ( 10000 , 99999 );		$req->merchantTxnId = "BTU_FC_PYMT_".$otp.$data['id'];		$req->amount = $data['total_fees'].".00";// 		$req->amount = "1.00";		//$req->amount = number_format(1,2);		$req->currency = "INR";		$req->furl = base_url().'document_verification_freecharge?id='.$data['id'];		$req->surl = base_url().'document_verification_freecharge?id='.$data['id'];		$req->email = $data['email'];		$req->mobile = $data['mobile'];		$req->customerName = $data['student_name'];		$req->channel = "WEB";		$req->merchantId = "YpvEjekeEmpXRq";		$req->customNote = "PAID VIA FREECHARGE";		return (array)$req;	}	public function document_verification_freecharge(){		// "Array ( [success_freecharge] => [id] => 1 [txnId] => YpvEjekeEmpXRq_iTEST1_***sdsds%1244_1 [merchantTxnId] => iTEST1_***sdsds%1244 [amount] => 1.00 [merchantName] => [merchantLogo] => [metadata] => [status] => COMPLETED [authCode] => [checksum] => 97516f64cbd2006283f7f762879e6db1eb8b96cecf764848efabbcb0b9f84a66 ) "		$data['student_data'] = $this->Payment_model->update_document_verification_payment();		$this->load->view('payment/document_verification_receipt_freecharge',$data);	}	// document verification  ends here//	public function course_work_ccavRequestHandler(){		$this->load->view('payment/course_work_ccavRequestHandler');	}	public function course_work_ccavResponseHandler(){		$this->load->view('payment/course_work_ccavResponseHandler');	}	public function exam_payment_ccavRequestHandler(){		$this->load->view('payment/exam_payment_ccavRequestHandler');	}	public function exam_payment_ccavResponseHandler(){		$this->load->view('payment/exam_payment_ccavResponseHandler');	}	public function document_verification_ccavRequestHandler(){		$this->load->view('payment/document_verification_ccavRequestHandler');	}	public function document_verification_ccavResponseHandler(){		$this->load->view('payment/document_verification_ccavResponseHandler');	}	public function make_center_payment(){		$data['center_data'] = $this->Payment_model->get_center_payment_details();		$this->load->view('payment/make_center_payment',$data);	}	public function make_center_payment_foreegin(){		$data['center_data'] = $this->Payment_model->get_center_payment_details();		$this->load->view('payment/make_center_payment',$data);	}	public function make_center_payment_foregin(){		$data['center_data'] = $this->Payment_model->get_center_payment_details();		$this->load->view('payment/make_center_payment_foregin',$data);	} 	public function center_payment_ccavRequestHandler(){		$this->load->view('payment/center_payment_ccavRequestHandler');	}	public function center_payment_ccavResponseHandler(){		$this->load->view('payment/center_payment_ccavResponseHandler');	}	public function center_payment_ccavRequestHandler_foregin(){		$this->load->view('payment/center_payment_ccavRequestHandler_foregin');	}	public function center_payment_ccavResponseHandler_foregin(){		$this->load->view('payment/center_payment_ccavResponseHandler_foregin');	}	public function re_evaluation_payment_ccavRequestHandler(){		$this->load->view('payment/re_evaluation_payment_ccavRequestHandler');	}		public function re_evaluation_payment_ccavResponseHandler(){		$this->load->view('payment/re_evaluation_payment_ccavResponseHandler');	}  
}