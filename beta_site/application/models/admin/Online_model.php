<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed'); class Online_model extends CI_Model { 	public function set_topic(){ 		$data = array(			'course_id' 		=> $this->input->post('course_name'),			'stream_id' 		=> $this->input->post('stream'),			'year_sem' 			=> $this->input->post('year_sem'),			'topic_name_show' 	=> $this->input->post('topic_name_show'),			'topic_name' 		=> $this->input->post('topic_name'),			'topic_info' 		=> $this->input->post('topic_info'), 		);		if($this->input->post('id') == ""){			$date = array(				'created_on' => date("Y-m-d H:i:s")			);			$new_arr = array_merge($data,$date);			$this->db->insert('tbl_course_topic',$new_arr);				return 0;		}else{			$this->db->where('id',$this->input->post('id'));			$this->db->update('tbl_course_topic',$data);			return 1;		}	}	public function get_all_topic_ajax($length,$start,$search){		$this->db->select('tbl_course_topic.*,tbl_course.course_name,tbl_stream.stream_name');		if($search !=""){			$this->db->group_start();			$this->db->or_like('tbl_course_topic.topic_name_show',$search); 			$this->db->or_like('tbl_course.course_name',$search); 			$this->db->or_like('tbl_stream.stream_name',$search); 			$this->db->or_like('tbl_course_topic.topic_name_show',$search); 			$this->db->or_like('tbl_course_topic.topic_name',$search); 			$this->db->group_end();		}		$this->db->where('tbl_course_topic.is_deleted','0');		$this->db->join('tbl_course','tbl_course.id = tbl_course_topic.course_id');		$this->db->join('tbl_stream','tbl_stream.id = tbl_course_topic.stream_id');		$this->db->order_by('tbl_course.course_name','ASC');		$this->db->limit($length,$start);		$result = $this->db->get('tbl_course_topic');		return $result->result();	}	public function get_all_topic_ajax_count($search){		$this->db->select('tbl_course_topic.*,tbl_course.course_name,tbl_stream.stream_name');		if($search !=""){			$this->db->group_start();			$this->db->or_like('tbl_course_topic.topic_name_show',$search); 			$this->db->or_like('tbl_course.course_name',$search); 			$this->db->or_like('tbl_stream.stream_name',$search); 			$this->db->or_like('tbl_course_topic.topic_name_show',$search); 			$this->db->or_like('tbl_course_topic.topic_name',$search); 			$this->db->group_end();		}		$this->db->where('tbl_course_topic.is_deleted','0');		$this->db->join('tbl_course','tbl_course.id = tbl_course_topic.course_id');		$this->db->join('tbl_stream','tbl_stream.id = tbl_course_topic.stream_id');		$result = $this->db->get('tbl_course_topic');		return $result->num_rows();	}	public function get_single_topic(){		$this->db->where('id',$this->uri->segment(2));		$result = $this->db->get('tbl_course_topic');		return $result->row();	}	public function get_selected_stream($course){		$this->db->select('tbl_stream.*');		$this->db->where('tbl_course_stream_relation.course',$course);		$this->db->join('tbl_stream','tbl_stream.id = tbl_course_stream_relation.stream');		$result = $this->db->get('tbl_course_stream_relation');		return $result->result();	}	public function set_topic_file(){		$photo ='';		if($_FILES['userfile']['name'] !=""){			$photo = $this->Digitalocean_model->upload_photo($filename="userfile",$path="uploads/topic/");		}else{			$photo = $this->input->post('old_file');		}		$data = array(			'topic_id' 	=> $this->input->post('topic_id'),			'title' 	=> $this->input->post('title'),			'file' 		=> $photo, 		);		if($this->input->post('id') == ""){			$date = array(				'created_on' => date("Y-m-d H:i:s")			);			$new_arr = array_merge($data,$date);			$this->db->insert('tbl_topic_pdf',$new_arr);			return 0;		}else{			$this->db->where('id',$this->input->post('id'));			$this->db->update('tbl_topic_pdf',$data);			return 1;		}	}	public function get_all_topic_file_ajax($length,$start,$search){		if($search !=""){			$this->db->group_start();			$this->db->or_like('tbl_topic_pdf.title',$search);   			$this->db->group_end();		}		$this->db->where('is_deleted','0'); 		$this->db->order_by('id','DESC');		$this->db->limit($length,$start);		$result = $this->db->get('tbl_topic_pdf');		return $result->result();	}	public function get_all_topic_file_ajax_count($search){		if($search !=""){			$this->db->group_start();			$this->db->or_like('tbl_topic_pdf.title',$search);   			$this->db->group_end();		}		$this->db->where('is_deleted','0'); 		$result = $this->db->get('tbl_topic_pdf');		return $result->num_rows();	}	public function get_single_topic_file(){		$this->db->where('id',$this->uri->segment(3));		$this->db->where('is_deleted','0');		$this->db->order_by('id','DESC');		$result = $this->db->get('tbl_topic_pdf');		return $result->row();	}	public function set_topic_video(){		$photo ='';		if($_FILES['userfile']['name'] !=""){			$photo = $this->Digitalocean_model->upload_photo($filename="userfile",$path="uploads/topic/");		}else{			$photo = $this->input->post('old_file');		}		$data = array(			'topic_id' 	=> $this->input->post('topic_id'),			'title' 	=> $this->input->post('title'),			'file' 		=> $photo, 		);		if($this->input->post('id') == ""){			$date = array(				'created_on' => date("Y-m-d H:i:s")			);			$new_arr = array_merge($data,$date);			$this->db->insert('tbl_topic_video',$new_arr);			return 0;		}else{			$this->db->where('id',$this->input->post('id'));			$this->db->update('tbl_topic_video',$data);			return 1;		}	}	public function get_single_topic_video(){		$this->db->where('id',$this->uri->segment(3));		$this->db->where('is_deleted','0');		$this->db->order_by('id','DESC');		$result = $this->db->get('tbl_topic_video');		return $result->row();	}	public function get_all_topic_video_ajax($length,$start,$search){		if($search !=""){			$this->db->group_start();			$this->db->or_like('tbl_topic_video.title',$search);   			$this->db->group_end();		}		$this->db->where('is_deleted','0'); 		$this->db->order_by('id','DESC');		$this->db->limit($length,$start);		$result = $this->db->get('tbl_topic_video');		return $result->result();	}	public function get_all_topic_video_ajax_count($search){		if($search !=""){			$this->db->group_start();			$this->db->or_like('tbl_topic_video.title',$search);   			$this->db->group_end();		}		$this->db->where('is_deleted','0'); 		$result = $this->db->get('tbl_topic_video');		return $result->num_rows();	}	public function set_exam_name(){ 		$data = array(			'course_id' 	=> $this->input->post('course_name'),			'stream_id' 	=> $this->input->post('stream'), 			'year_sem' 		=> $this->input->post('year_sem'), 			'exam_name' 	=> $this->input->post('exam_name'), 			'exam_date' 	=> date("Y-m-d",strtotime($this->input->post('exam_date'))), 			'start_time' 	=> $this->input->post('start_time'), 			'end_time' 		=> $this->input->post('end_time'), 			'total_marks' 	=> $this->input->post('total_marks'), 			'exam_description' => $this->input->post('exam_description'), 		);		if($this->input->post('id') == ""){			$date = array(				'created_on' => date("Y-m-d H:i:s")			);			$new_arr = array_merge($data,$date);			$this->db->insert('tbl_yearly_exam',$new_arr); 			return 0;		}else{			$this->db->where('id',$this->input->post('id'));			$this->db->update('tbl_yearly_exam',$data);			return 1;		}	}	public function get_all_created_exam_ajax($length,$start,$search){		$this->db->select('tbl_yearly_exam.*,tbl_course.course_name,tbl_stream.stream_name,tbl_employees.first_name,tbl_employees.last_name');		if($search !=""){			$this->db->group_start();			$this->db->or_like('tbl_yearly_exam.exam_name',$search); 			$this->db->or_like('tbl_course.course_name',$search); 			$this->db->or_like('tbl_stream.stream_name',$search);    			$this->db->or_like('tbl_employees.first_name',$search);    			$this->db->or_like('tbl_employees.last_name',$search);    			$this->db->or_like('tbl_yearly_exam.year_sem',$search); 			$this->db->or_like('tbl_yearly_exam.total_marks',$search); 			$this->db->group_end();		}		$this->db->where('tbl_yearly_exam.is_deleted','0');		if($this->input->post('start_date') != ""){			$this->db->where('tbl_yearly_exam.exam_date >=',date("Y-m-d",strtotime($this->input->post('start_date'))));		}		if($this->input->post('end_date') != ""){			$this->db->where('tbl_yearly_exam.exam_date <=',date("Y-m-d",strtotime($this->input->post('end_date'))));		}		$this->db->join('tbl_course','tbl_course.id = tbl_yearly_exam.course_id');		$this->db->join('tbl_stream','tbl_stream.id = tbl_yearly_exam.stream_id');		$this->db->join('tbl_employees','tbl_employees.id = tbl_yearly_exam.created_by','left');		$this->db->order_by('tbl_yearly_exam.id','DESC');		$this->db->limit($length,$start);		$result = $this->db->get('tbl_yearly_exam');		return $result->result();	}	public function get_all_created_exam_ajax_count($search){		$this->db->select('tbl_yearly_exam.*,tbl_course.course_name,tbl_stream.stream_name,tbl_employees.first_name,tbl_employees.last_name');		if($search !=""){			$this->db->group_start();			$this->db->or_like('tbl_yearly_exam.exam_name',$search); 			$this->db->or_like('tbl_course.course_name',$search); 			$this->db->or_like('tbl_stream.stream_name',$search); 			$this->db->or_like('tbl_employees.first_name',$search);    			$this->db->or_like('tbl_employees.last_name',$search); 							$this->db->or_like('tbl_yearly_exam.year_sem',$search); 			$this->db->or_like('tbl_yearly_exam.total_marks',$search); 						$this->db->group_end();		}		$this->db->where('tbl_yearly_exam.is_deleted','0');		$this->db->join('tbl_course','tbl_course.id = tbl_yearly_exam.course_id');		$this->db->join('tbl_stream','tbl_stream.id = tbl_yearly_exam.stream_id');		$this->db->join('tbl_employees','tbl_employees.id = tbl_yearly_exam.created_by','left');		$result = $this->db->get('tbl_yearly_exam');		return $result->num_rows();	}	public function get_single_exam_name(){		$this->db->where('is_deleted','0');		$this->db->where('id',$this->uri->segment(2));		$result = $this->db->get('tbl_yearly_exam');		return $result->row();	}	public function set_question_data(){ 		$data = array(			'exam_id'           => $this->input->post('exam_id'),			'paper_set'       	=> $this->input->post('paper_set'),			'question_type'     => $this->input->post('question_type'),		);		$date=array('created_on'=>date('Y-m-d H:i:s'));		$newData=array_merge($data,$date);		$result=$this->db->insert('tbl_question_data',$newData);		if($result){			$insertId = $this->db->insert_id();        	return $insertId;		}else{			return 0;		}	}	public function get_question_info(){		$this->db->select('tbl_question_data.*,tbl_course.course_name,tbl_yearly_exam.exam_name');		$this->db->where('tbl_question_data.is_deleted','0');		$this->db->where('tbl_question_data.id',$this->uri->segment(2));		$this->db->join('tbl_yearly_exam','tbl_yearly_exam.id = tbl_question_data.exam_id');		$this->db->join('tbl_course','tbl_course.id = tbl_yearly_exam.course_id'); 		$result=$this->db->get('tbl_question_data');		$result=$result->row();		return $result; 	}	public function add_mcq_question(){		$number_of_questions=$this->input->post('number_of_questions'); 		for($i=1;$i<=$number_of_questions;$i++){			$data["exam_id"] 		= $this->input->post('exam_id');			$data["paper_set"] 		= $this->input->post('paper_set');			$data["question"]   	= $this->input->post('question_'.$i);			$data["option_a"]    	= $this->input->post('option_a_'.$i);			$data["option_b"]   	= $this->input->post('option_b_'.$i);			$data["option_c"]   	= $this->input->post('option_c_'.$i);			$data["option_d"]   	= $this->input->post('option_d_'.$i);			$data["marks"]          = $this->input->post('marks_'.$i);			$data["correct_answer"] = $this->input->post('correct_answer_'.$i);			$data["created_on"]     = date("Y-m-d H:i:s");		    $this->db->insert('tbl_mcq_question',$data);		}		return 1; 	} 	public function mcq_bulk_upload($data){		$this->db->insert_batch('tbl_mcq_question',$data);		return 1; 	}	public function get_update_mcq_question(){		$this->db->where('is_deleted','0');		$this->db->where('id',$this->uri->segment('2'));		$result=$this->db->get('tbl_mcq_question');		return $result->row();	}	public function update_mcq_question(){		$data = array(			'question' => $this->input->post('question'),			'option_a' => $this->input->post('option_a'),			'option_b' => $this->input->post('option_b'),			'option_c' => $this->input->post('option_c'),			'option_d' => $this->input->post('option_d'),			'marks'    => $this->input->post('marks'),			'correct_answer'=> $this->input->post('correct_answer'),		);		$this->db->where('id',$this->input->post('question_id'));		$this->db->update('tbl_mcq_question',$data);		if($this->db->affected_rows() > 0){			return true;		}else{			return false;		}	}	public function get_mcq_question_list(){		$this->db->select('tbl_mcq_question.*,tbl_course.course_name,tbl_yearly_exam.exam_name');		$this->db->where('tbl_mcq_question.audio_question_description_id','0');		$this->db->where('tbl_mcq_question.is_deleted','0');		if($this->input->post('course_name')){				$this->db->where('tbl_yearly_exam.course_id',$this->input->post('course_name'));		}		$this->db->order_by('id','DESC');		$this->db->join('tbl_yearly_exam','tbl_yearly_exam.id = tbl_mcq_question.exam_id');		$this->db->join('tbl_course','tbl_course.id = tbl_yearly_exam.course_id'); 		$result=$this->db->get('tbl_mcq_question');		return $result->result();	} 	public function get_mcq_question_list_ajax(){		$this->db->select('tbl_mcq_question.*,tbl_course.course_name,tbl_yearly_exam.exam_name');		$this->db->where('tbl_mcq_question.audio_question_description_id','0');		$this->db->where('tbl_mcq_question.is_deleted','0'); 		$this->db->order_by('id','DESC');		$this->db->join('tbl_yearly_exam','tbl_yearly_exam.id = tbl_mcq_question.exam_id');		$this->db->join('tbl_course','tbl_course.id = tbl_yearly_exam.course_id'); 		$result = $this->db->get('tbl_mcq_question');		$result =  $result->result();		$data = array();		if(!empty($result)){			foreach($result as $result_result){				$data[] = ["Course Name" => $result_result->course_name,"Paper Set" => $result_result->paper_set,"Question" =>  $result_result->question,"Option A" =>  $result_result->option_a];			}		}				echo $data = json_encode($data);	} 	public function add_fill_in_blanks_question(){		$number_of_questions=$this->input->post('number_of_questions');		$question_data_id=$this->uri->segment('2');		for($i=1;$i<=$number_of_questions;$i++){			$data["exam_id"] 		= $this->input->post('exam_id');			$data["paper_set"] 		= $this->input->post('paper_set');			$data["question"]         = $this->input->post('question_'.$i);			$data["fill_blank_option"]= $this->input->post('fill_blank_option_'.$i);			$data["marks"]            = $this->input->post('marks_'.$i);			$data["correct_answer"]   = $this->input->post('correct_answer_'.$i);			$data["created_on"]       = date("Y-m-d H:i:s");		    $this->db->insert('tbl_fill_in_blank_question',$data);		}		return 1;	} 	public function fill_in_the_blank_bulk_upload($data){		$this->db->insert_batch('tbl_fill_in_blank_question',$data);		return 1; 	}	public function get_fill_in_blanks_question_list(){ 		$this->db->select('tbl_fill_in_blank_question.*,tbl_course.course_name,tbl_yearly_exam.exam_name');		$this->db->where('tbl_fill_in_blank_question.audio_question_description_id','0');		$this->db->where('tbl_fill_in_blank_question.is_deleted','0');		if($this->input->post('course_name')){				$this->db->where('tbl_yearly_exam.course_id',$this->input->post('course_name'));		}		$this->db->order_by('id','DESC');		$this->db->join('tbl_yearly_exam','tbl_yearly_exam.id = tbl_fill_in_blank_question.exam_id');		$this->db->join('tbl_course','tbl_course.id = tbl_yearly_exam.course_id'); 		$result=$this->db->get('tbl_fill_in_blank_question');		return $result->result();	}	public function get_update_fill_in_blank_question(){		$this->db->where('is_deleted','0');		$this->db->where('id',$this->uri->segment('2'));		$result=$this->db->get('tbl_fill_in_blank_question');		return $result->row(); 	}	public function update_fill_in_blank_question(){		$data = array(			'question' 			=> $this->input->post('question'),			'fill_blank_option' => $this->input->post('fill_blank_option'),			'marks'    			=> $this->input->post('marks'),			'correct_answer'	=> $this->input->post('correct_answer'),		);		$this->db->where('id',$this->input->post('question_id'));		$this->db->update('tbl_fill_in_blank_question',$data);		if($this->db->affected_rows() > 0){			return true;		}else{			return false;		} 	}	public function add_one_word_ans_question(){		$number_of_questions=$this->input->post('number_of_questions');		for($i=1;$i<=$number_of_questions;$i++){			$data["exam_id"] 		  = $this->input->post('exam_id');			$data["paper_set"] 		  = $this->input->post('paper_set');			$data["question"]         = $this->input->post('question_'.$i);			$data["fill_blank_option"]= $this->input->post('fill_blank_option_'.$i);			$data["marks"]            = $this->input->post('marks_'.$i);			$data["correct_answer"]   = $this->input->post('correct_answer_'.$i);			$data["created_on"]       = date("Y-m-d H:i:s");		    $this->db->insert('tbl_one_word_question',$data);		}		return 1;	}	public function get_one_word_ans_question_list(){		$this->db->select('tbl_one_word_question.*,tbl_course.course_name,tbl_yearly_exam.exam_name');		$this->db->where('tbl_one_word_question.audio_question_description_id','0');		$this->db->where('tbl_one_word_question.is_deleted','0');		if($this->input->post('course_name')){				$this->db->where('tbl_yearly_exam.course_id',$this->input->post('course_name'));		}		$this->db->order_by('id','DESC');		$this->db->join('tbl_yearly_exam','tbl_yearly_exam.id = tbl_one_word_question.exam_id');		$this->db->join('tbl_course','tbl_course.id = tbl_yearly_exam.course_id'); 		$result=$this->db->get('tbl_one_word_question');		return $result->result();	}	public function get_update_one_word_ans_question(){		$this->db->where('is_deleted','0');		$this->db->where('id',$this->uri->segment('2'));		$result=$this->db->get('tbl_one_word_question');		return $result->row();	}	public function update_one_word_ans_question(){		$data = array(			'question' 			=> $this->input->post('question'),			'fill_blank_option' => $this->input->post('fill_blank_option'),			'marks'    			=> $this->input->post('marks'),			'correct_answer'	=> $this->input->post('correct_answer'),		);		$this->db->where('id',$this->input->post('question_id'));		$this->db->update('tbl_one_word_question',$data);		if($this->db->affected_rows() > 0){			return true;		}else{			return false;		}	}	public function one_word_bulk_upload($data){		$this->db->insert_batch('tbl_one_word_question',$data);		return 1;	}	public function add_picture_question($file){		$data_1 = array(			"exam_id"				=> $this->input->post('exam_id'),			"paper_set"				=> $this->input->post('paper_set'),			'question_description'	=> $this->input->post('question_description'), 			'Question_image'		=> $file,		);		$date=array('created_on'=>date('Y-m-d H:i:s'));		$newData=array_merge($data_1,$date);		$result=$this->db->insert('tbl_picture_question_description',$newData);		if($result){			$insertId = $this->db->insert_id();			$number_of_questions=$this->input->post('number_of_questions');			for($i=1;$i<=$number_of_questions;$i++){				$data["exam_id"] = $this->input->post('exam_id');				$data["question_description_id"] = $insertId;				$data["question"]    = $this->input->post('question_'.$i);				$data["option_a"]    = $this->input->post('option_a_'.$i);				$data["option_b"]    = $this->input->post('option_b_'.$i);				$data["option_c"]    = $this->input->post('option_c_'.$i);				$data["option_d"]    = $this->input->post('option_d_'.$i);				$data["correct_answer"] = $this->input->post('correct_answer_'.$i);				$data["created_on"]  = date("Y-m-d H:i:s");				$data["marks"]=$this->input->post('marks');				$this->db->insert('tbl_picture_question',$data);			}			return 1; 		}else{			return 0;		}	}	public function get_picture_question_list(){		$this->db->select('tbl_picture_question.*,tbl_course.course_name,tbl_picture_question_description.question_description,tbl_picture_question_description.paper_set');		$this->db->where('tbl_picture_question.is_deleted','0');		if($this->input->post('course_name')){				$this->db->where('tbl_yearly_exam.course_id',$this->input->post('course_name'));		}		$this->db->order_by('id','DESC');		$this->db->join('tbl_yearly_exam','tbl_yearly_exam.id = tbl_picture_question.exam_id');		$this->db->join('tbl_course','tbl_course.id = tbl_yearly_exam.course_id'); 		$this->db->join('tbl_picture_question_description','tbl_picture_question.question_description_id=tbl_picture_question_description.id');		$result=$this->db->get('tbl_picture_question');		return $result->result();	}	public function get_update_picture_question(){		$this->db->select('tbl_picture_question.*,tbl_picture_question_description.question_description');		$this->db->where('tbl_picture_question.is_deleted','0');		$this->db->where('tbl_picture_question.id',$this->uri->segment('2'));		$this->db->join('tbl_picture_question_description','tbl_picture_question.question_description_id=tbl_picture_question_description.id');		$result=$this->db->get('tbl_picture_question');		return $result->row();	}	public function update_picture_question(){		$this->db->where('id',$this->input->post('question_id'));		$this->db->where('is_deleted','0');		$result=$this->db->get('tbl_picture_question');		$result=$result->row();		$description_id=$result->question_description_id;		$data_1 = array(			'question_description' => $this->input->post('question_description'),					);		$this->db->where('id',$description_id);		$this->db->update('tbl_picture_question_description',$data_1); 		$data = array(			'question' 			=> $this->input->post('question'),			'option_a' 			=> $this->input->post('option_a'),			'option_b' 			=> $this->input->post('option_b'),			'option_c' 			=> $this->input->post('option_c'),			'option_d' 			=> $this->input->post('option_d'),			'correct_answer'	=> $this->input->post('correct_answer'),			'marks' 			=> $this->input->post('marks'),		);		$this->db->where('id',$this->input->post('question_id'));		if($this->db->update('tbl_picture_question',$data)){			return true;		}else{			return false;		} 	}	public function add_tick_mark_question(){		$number_of_questions=$this->input->post('number_of_questions');		$question_data_id=$this->uri->segment('2');		for($i=1;$i<=$number_of_questions;$i++){			$data["exam_id"] 		= $this->input->post('exam_id');			$data["paper_set"] 		= $this->input->post('paper_set');			$data["question"]    = $this->input->post('question_'.$i);			$data["option_a"]    = $this->input->post('option_a_'.$i);			$data["option_b"]   = $this->input->post('option_b_'.$i);			$data["marks"]          = $this->input->post('marks_'.$i);			$data["correct_answer"] = $this->input->post('correct_answer_'.$i);			$data["created_on"]     = date("Y-m-d H:i:s");		    $this->db->insert('tbl_tick_mark_question',$data);		}		return 1;	}	public function get_tick_mark_question_list(){		$this->db->select('tbl_tick_mark_question.*,tbl_course.course_name,tbl_yearly_exam.exam_name');		$this->db->where('tbl_tick_mark_question.audio_question_description_id','0');		$this->db->where('tbl_tick_mark_question.is_deleted','0');		if($this->input->post('course_name')){				$this->db->where('tbl_yearly_exam.course_id',$this->input->post('course_name'));		}		$this->db->order_by('id','DESC');		$this->db->join('tbl_yearly_exam','tbl_yearly_exam.id = tbl_tick_mark_question.exam_id');		$this->db->join('tbl_course','tbl_course.id = tbl_yearly_exam.course_id'); 		$result=$this->db->get('tbl_tick_mark_question');		return $result->result();	}	public function get_update_tick_mark_question(){		$this->db->where('is_deleted','0');		$this->db->where('id',$this->uri->segment('2'));		$result=$this->db->get('tbl_tick_mark_question');		return $result->row();	}	public function update_tick_mark_question(){		$data = array(			'question' => $this->input->post('question'),			'option_a' => $this->input->post('option_a'),			'option_b' => $this->input->post('option_b'),			'marks'    => $this->input->post('marks'),			'correct_answer'=> $this->input->post('correct_answer'),		);		$this->db->where('id',$this->input->post('question_id'));		$this->db->update('tbl_tick_mark_question',$data);		if($this->db->affected_rows() > 0){			return true;		}else{			return false;		}	}	public function tick_mark_bulk_upload($data){		$this->db->insert_batch('tbl_tick_mark_question',$data);		return 1;	}	public function add_passage_reading_question(){		$data_1 = array(			'exam_id' 	=> $this->input->post('exam_id'),			'paper_set' => $this->input->post('paper_set'),			'passage' 	=> $this->input->post('passage'),		);		$date=array('created_on'=>date('Y-m-d H:i:s'));		$newData=array_merge($data_1,$date);		$result=$this->db->insert('tbl_passage_reading_description',$newData);		if($result){			$insertId = $this->db->insert_id();			$number_of_questions=$this->input->post('number_of_questions');			for($i=1;$i<=$number_of_questions;$i++){				$data["exam_id"] = $this->input->post('exam_id');				$data["question_description_id"] = $insertId;				$data["question"]    = $this->input->post('question_'.$i);				$data["option_a"]    = $this->input->post('option_a_'.$i);				$data["option_b"]    = $this->input->post('option_b_'.$i);				$data["option_c"]    = $this->input->post('option_c_'.$i);				$data["option_d"]    = $this->input->post('option_d_'.$i);				$data["correct_answer"] = $this->input->post('correct_answer_'.$i);				$data["marks"]       = $this->input->post('marks');					$data["created_on"]     = date("Y-m-d H:i:s");				$this->db->insert('tbl_passage_reading_question',$data);			}				return 1;		}else{		 	return 0;		}	}	public function get_passage_reading_question_list(){		$this->db->select('tbl_passage_reading_question.*,tbl_course.course_name');		if($this->input->post('course_name')){			$this->db->where('tbl_yearly_exam.course_id',$this->input->post('course_name'));		}; 		$this->db->order_by('id','DESC');		$this->db->join('tbl_course','tbl_course.id = tbl_passage_reading_question.exam_id');		$this->db->join('tbl_yearly_exam','tbl_yearly_exam.id = tbl_passage_reading_question.exam_id');		$this->db->where('tbl_passage_reading_question.is_deleted','0');		$result=$this->db->get('tbl_passage_reading_question');		return $result->result(); 	}	public function get_update_passage_reading_question(){		$this->db->select('tbl_passage_reading_question.*,tbl_passage_reading_description.passage');		$this->db->where('tbl_passage_reading_question.is_deleted','0');		$this->db->where('tbl_passage_reading_question.id',$this->uri->segment('2'));		$this->db->join('tbl_passage_reading_description','tbl_passage_reading_question.question_description_id=tbl_passage_reading_description.id');		$result=$this->db->get('tbl_passage_reading_question');		return $result->row(); 	}	public function update_passage_reading_question(){		$this->db->where('id',$this->input->post('question_id'));		$this->db->where('is_deleted','0');		$result=$this->db->get('tbl_passage_reading_question');		$result=$result->row();		$description_id=$result->question_description_id;		$data_1 = array(			'passage' => $this->input->post('passage'),		);		$this->db->where('id',$description_id);		$this->db->update('tbl_passage_reading_description',$data_1);		 $data = array(			'question' => $this->input->post('question'),			'option_a' => $this->input->post('option_a'),			'option_b' => $this->input->post('option_b'),			'option_c' => $this->input->post('option_c'),			'option_d' => $this->input->post('option_d'),			'marks'    => $this->input->post('marks'),			'correct_answer'=> $this->input->post('correct_answer'),		);		$this->db->where('id',$this->input->post('question_id'));		if($this->db->update('tbl_passage_reading_question',$data)){			return true;		}else{			return false;		} 	}	public function add_match_the_following_question(){		$number_of_questions=$this->input->post('number_of_questions');		for($i=1;$i<=$number_of_questions;$i++){			$data["exam_id"] 	= $this->input->post('exam_id');			$data["paper_set"] 	= $this->input->post('paper_set');			$data["question"]    = $this->input->post('question_'.$i);			$data["question_a"]  = $this->input->post('question_a_'.$i);			$data["answer_a"]    = $this->input->post('answer_a_'.$i);			$data["question_b"]  = $this->input->post('question_b_'.$i);			$data["answer_b"]    = $this->input->post('answer_b_'.$i);			$data["question_c"]  = $this->input->post('question_c_'.$i);			$data["answer_c"]    = $this->input->post('answer_c_'.$i);			$data["question_d"]  = $this->input->post('question_d_'.$i);			$data["answer_d"]    = $this->input->post('answer_d_'.$i);			$data["question_e"]  = $this->input->post('question_e_'.$i);			$data["answer_e"]    = $this->input->post('answer_e_'.$i);			$data["marks"]       = $this->input->post('marks_'.$i);			$data["created_on"]  = date("Y-m-d H:i:s");		    $this->db->insert('tbl_match_the_following',$data);		}		return 1;	}	public function get_match_the_following_question_list(){		$this->db->select('tbl_match_the_following.*,tbl_course.course_name');		if($this->input->post('course_name')){			$this->db->where('tbl_yearly_exam.course_id',$this->input->post('course_name'));		}; 		$this->db->where('tbl_match_the_following.is_deleted','0');		$this->db->order_by('id','DESC');		$this->db->join('tbl_course','tbl_course.id = tbl_match_the_following.exam_id');		$this->db->join('tbl_yearly_exam','tbl_yearly_exam.id = tbl_match_the_following.exam_id');		$result=$this->db->get('tbl_match_the_following');		return $result->result(); 	}	public function get_update_match_the_following_question(){		$this->db->where('is_deleted','0');		$this->db->where('id',$this->uri->segment('2'));		$result=$this->db->get('tbl_match_the_following');		return $result->row();	}	public function update_match_the_following_question(){		$data["question"]    = $this->input->post('question');		$data["question_a"]  = $this->input->post('question_a');		$data["answer_a"]    = $this->input->post('answer_a');		$data["question_b"]  = $this->input->post('question_b');		$data["answer_b"]    = $this->input->post('answer_b');		$data["question_c"]  = $this->input->post('question_c');		$data["answer_c"]    = $this->input->post('answer_c');		$data["question_d"]  = $this->input->post('question_d');		$data["answer_d"]    = $this->input->post('answer_d');		$data["question_e"]  = $this->input->post('question_e');		$data["answer_e"]    = $this->input->post('answer_e');		$data["marks"]       = $this->input->post('marks');		$data["created_on"]  = date("Y-m-d H:i:s");		$this->db->where('id',$this->input->post('question_id'));		$this->db->update('tbl_match_the_following',$data);		if($this->db->affected_rows() > 0){			return true;		}else{			return false;		}	}	public function match_the_following_bulk_upload($data){		$this->db->insert_batch('tbl_match_the_following',$data);		return 1;	}	public function get_question_exam_name($exam_id){		$this->db->select('tbl_yearly_exam.*,tbl_course.course_name,tbl_stream.stream_name');		$this->db->where('tbl_yearly_exam.id',$exam_id);		$this->db->where('tbl_yearly_exam.is_deleted','0');		$this->db->join('tbl_course','tbl_course.id = tbl_yearly_exam.course_id');		$this->db->join('tbl_stream','tbl_stream.id = tbl_yearly_exam.stream_id');		$result = $this->db->get('tbl_yearly_exam');		return $result->row();	}	public function get_total_added_mark($paper_set,$exam_id){		$this->db->select('SUM(marks) as total');		$this->db->where('is_deleted','0'); 		$this->db->where('paper_set',$paper_set);		$this->db->where('exam_id',$exam_id);		$mcq_question = $this->db->get('tbl_mcq_question');		$mcq_question = $mcq_question->row();				 		$this->db->select('SUM(tbl_passage_reading_question.marks) as total');		$this->db->where('tbl_passage_reading_question.is_deleted','0'); 		$this->db->where('tbl_passage_reading_description.paper_set',$paper_set);		$this->db->where('tbl_passage_reading_description.exam_id',$exam_id);		$this->db->join('tbl_passage_reading_description','tbl_passage_reading_description.id = tbl_passage_reading_question.question_description_id');		$passage_reading = $this->db->get('tbl_passage_reading_question'); 		$passage_reading = $passage_reading->row();				$this->db->select('SUM(tbl_picture_question.marks) as total');		$this->db->where('tbl_picture_question.is_deleted','0'); 		$this->db->where('tbl_picture_question_description.paper_set',$paper_set);		$this->db->where('tbl_picture_question_description.exam_id',$exam_id);		$this->db->join('tbl_picture_question_description','tbl_picture_question_description.id = tbl_picture_question.question_description_id');		$picture_reading = $this->db->get('tbl_picture_question'); 		$picture_reading = $picture_reading->row();		$mcq = 0;		if($mcq_question->total !=""){			$mcq = $mcq_question->total;		}		$passage = 0;		if($passage_reading->total !=""){			$passage = $passage_reading->total;		}		$picture = 0;		if($picture_reading->total !=""){			$picture = $picture_reading->total;		} 		return $picture+$passage+$mcq;	}		public function get_exam_wise_mcq_question($id){		$this->db->where('exam_id',$id);		$this->db->where('is_deleted','0'); 		$result = $this->db->get('tbl_mcq_question');		return $result->result(); 	}	public function get_exam_wise_fill_in_question($id){		$this->db->where('exam_id',$id);		$this->db->where('is_deleted','0'); 		$result = $this->db->get('tbl_fill_in_blank_question');		return $result->result(); 	}	public function get_exam_wise_one_word_question($id){		$this->db->where('exam_id',$id);		$this->db->where('is_deleted','0'); 		$result = $this->db->get('tbl_one_word_question');		return $result->result(); 	} 	public function get_exam_wise_picture_question($id){		$this->db->select('tbl_picture_question.*,tbl_course.course_name,tbl_picture_question_description.question_description,tbl_picture_question_description.paper_set');		$this->db->where('tbl_picture_question.is_deleted','0');		if($this->input->post('course_name')){				$this->db->where('tbl_yearly_exam.id',$id);		}		$this->db->order_by('id','DESC');		$this->db->join('tbl_yearly_exam','tbl_yearly_exam.id = tbl_picture_question.exam_id');		$this->db->join('tbl_course','tbl_course.id = tbl_yearly_exam.course_id'); 		$this->db->join('tbl_picture_question_description','tbl_picture_question.question_description_id=tbl_picture_question_description.id');		$result=$this->db->get('tbl_picture_question');		return $result->result();	}	public function get_exam_wise_tick_mark_question($id){		$this->db->select('tbl_tick_mark_question.*,tbl_course.course_name,tbl_yearly_exam.exam_name');		$this->db->where('tbl_tick_mark_question.audio_question_description_id','0');		$this->db->where('tbl_tick_mark_question.is_deleted','0');		if($this->input->post('course_name')){				$this->db->where('tbl_yearly_exam.id',$id);		}		$this->db->order_by('id','DESC');		$this->db->join('tbl_yearly_exam','tbl_yearly_exam.id = tbl_tick_mark_question.exam_id');		$this->db->join('tbl_course','tbl_course.id = tbl_yearly_exam.course_id'); 		$result=$this->db->get('tbl_tick_mark_question');		return $result->result();	}	public function get_exam_wise_passage_reading_question_list($id){		$this->db->select('tbl_passage_reading_question.*,tbl_course.course_name');		if($this->input->post('course_name')){			$this->db->where('tbl_yearly_exam.id',$id);		}; 		$this->db->where('tbl_passage_reading_question.is_deleted','0');		$this->db->order_by('tbl_passage_reading_question.id','DESC');		$this->db->join('tbl_course','tbl_course.id = tbl_passage_reading_question.exam_id');		$this->db->join('tbl_yearly_exam','tbl_yearly_exam.id = tbl_passage_reading_question.exam_id');		$this->db->where('tbl_passage_reading_question.is_deleted','0');		$result=$this->db->get('tbl_passage_reading_question');		return $result->result(); 	}	public function get_exam_wise_match_the_following_question_list($id){		$this->db->select('tbl_match_the_following.*,tbl_course.course_name');		if($this->input->post('course_name')){			$this->db->where('tbl_yearly_exam.exam_id',$id);		}; 		$this->db->where('tbl_match_the_following.is_deleted','0');		$this->db->order_by('id','DESC');		$this->db->join('tbl_course','tbl_course.id = tbl_match_the_following.exam_id');		$this->db->join('tbl_yearly_exam','tbl_yearly_exam.id = tbl_match_the_following.exam_id');		$result=$this->db->get('tbl_match_the_following');		return $result->result(); 	}	public function get_paper_set_questions(){		if($_GET['type'] == '1'){			$this->db->where('exam_id',$this->uri->segment(2));			$this->db->where('paper_set',$_GET['set']);			$this->db->where('is_deleted','0');			$result = $this->db->get('tbl_mcq_question');			return $result->result(); 		}else if($_GET['type'] == '4'){			$this->db->where('exam_id',$this->uri->segment(2));			$this->db->where('paper_set',$_GET['set']);			$this->db->where('is_deleted','0');			$result = $this->db->get('tbl_picture_question_description');			return $result->result(); 		}elseif($_GET['type'] == '6'){			$this->db->where('exam_id',$this->uri->segment(2));			$this->db->where('paper_set',$_GET['set']);			$this->db->where('is_deleted','0');			$result = $this->db->get('tbl_passage_reading_description');			return $result->result(); 		}	}	public function get_single_picture_questions($id){		$this->db->where('question_description_id',$id);		$this->db->where('is_deleted','0'); 		$this->db->order_by('id','DESC');		$result = $this->db->get('tbl_picture_question');		return $result->result();	}	public function get_single_passage_questions($id){		$this->db->where('question_description_id',$id);		$this->db->where('is_deleted','0'); 		$this->db->order_by('id','DESC');		$result = $this->db->get('tbl_passage_reading_question');		return $result->result();	}	public function get_single_question(){		$this->db->where('id',$this->uri->segment(2));		$this->db->where('is_deleted','0'); 		$this->db->where('status','1'); 		$this->db->order_by('id','DESC');		$result = $this->db->get('tbl_mcq_question');		return $result->row();	}	public function get_single_pic_desc(){		$this->db->where('id',$this->uri->segment(2));		$this->db->where('is_deleted','0'); 		$this->db->where('status','1'); 		$this->db->order_by('id','DESC');		$result = $this->db->get('tbl_picture_question_description');		return $result->row();	}	public function get_single_passage(){		$this->db->where('id',$this->uri->segment(2));		$this->db->where('is_deleted','0'); 		$this->db->where('status','1'); 		$this->db->order_by('id','DESC');		$result = $this->db->get('tbl_passage_reading_description');		return $result->row();	}	public function get_single_picture_question(){		$this->db->where('id',$this->uri->segment(2));		$this->db->where('is_deleted','0'); 		$this->db->where('status','1'); 		$this->db->order_by('id','DESC');		$result = $this->db->get('tbl_picture_question_description');		return $result->row();	}	public function get_single_passage_question(){		$this->db->where('id',$this->uri->segment(2));		$this->db->where('is_deleted','0'); 		$this->db->where('status','1'); 		$this->db->order_by('id','DESC');		$result = $this->db->get('tbl_passage_reading_description');		return $result->row();	}	public function update_mcq_question_new(){		$data = array(			'question' => $this->input->post('question'),			'option_a' => $this->input->post('option_a'),			'option_b' => $this->input->post('option_b'),			'option_c' => $this->input->post('option_c'),			'option_d' => $this->input->post('option_d'),			'marks'    => $this->input->post('marks'),			'correct_answer'=> $this->input->post('correct_answer'),		);		$this->db->where('id',$this->uri->segment(2));		$this->db->update('tbl_mcq_question',$data);		return true;	}	public function get_all_picture_question($single){		if(!empty($single)){			$this->db->where('question_description_id',$single->id);			$this->db->where('is_deleted','0'); 			$this->db->where('status','1'); 			$result = $this->db->get('tbl_picture_question');			return $result->result();		}else{			return 0;		}	}	public function get_all_passage_question($single){		if(!empty($single)){			$this->db->where('question_description_id',$single->id);			$this->db->where('is_deleted','0'); 			$this->db->where('status','1'); 			$result = $this->db->get('tbl_passage_reading_question');			return $result->result();		}else{			return 0;		}	}	public function update_pic_question($file){		if($file == ""){			$file =  $this->input->post('old_question_img');		}		$data = array(			"exam_id"				=> $this->input->post('exam_id'),			"paper_set"				=> $this->input->post('paper_set'),			'question_description'	=> $this->input->post('question_description'), 			"marks"					=> $this->input->post('marks'),			'Question_image'		=> $file,		);		$this->db->where('id',$this->input->post('main_id'));		$this->db->update('tbl_picture_question_description',$data);		$this->db->where('question_description_id',$this->input->post('main_id'));		$this->db->delete('tbl_picture_question');		for($i=0;$i<count($this->input->post('question'));$i++){			$data_1 = array(				"exam_id"							=> $this->input->post('exam_id'),				"question_description_id"			=> $this->input->post('main_id'),				"question"    						=> $this->input->post('question')[$i],				"option_a"    						=> $this->input->post('option_a')[$i],				"option_b"    						=> $this->input->post('option_b')[$i],				"option_c"    						=> $this->input->post('option_c')[$i],				"option_d"    						=> $this->input->post('option_d')[$i],				"correct_answer" 					=> $this->input->post('correct_answer')[$i],				"marks"								=> $this->input->post('each_marks')[$i],				'created_on' 						=> date("Y-m-d H:i:s"),			);			$this->db->insert('tbl_picture_question',$data_1);		}		return true;	}	public function update_passage_question(){		$data = array(			"exam_id"				=> $this->input->post('exam_id'),			"paper_set"				=> $this->input->post('paper_set'),			'passage'				=> $this->input->post('passage'), 		);		$this->db->where('id',$this->input->post('main_id'));		$this->db->update('tbl_passage_reading_description',$data);		$this->db->where('question_description_id',$this->input->post('main_id'));		$this->db->delete('tbl_passage_reading_question');		for($i=0;$i<count($this->input->post('question'));$i++){			$data_1 = array(				"exam_id"							=> $this->input->post('exam_id'),				"question_description_id"			=> $this->input->post('main_id'),				"question"    						=> $this->input->post('question')[$i],				"option_a"    						=> $this->input->post('option_a')[$i],				"option_b"    						=> $this->input->post('option_b')[$i],				"option_c"    						=> $this->input->post('option_c')[$i],				"option_d"    						=> $this->input->post('option_d')[$i],				"correct_answer" 					=> $this->input->post('correct_answer')[$i],				"marks"								=> $this->input->post('each_marks')[$i],				'created_on' 						=> date("Y-m-d H:i:s"),			);			$this->db->insert('tbl_passage_reading_question',$data_1);		}		return true;	}	public function get_exam_availbale_sets($exam_id){ 	// error_reporting('e_all'); 		$passage_a_count = 0;		$passage_b_count = 0;		$passage_c_count = 0;		$passage_d_count = 0;		$picture_a_count = 0;		$picture_b_count = 0;		$picture_c_count = 0;		$picture_d_count = 0;		$this->db->where('is_deleted','0');		$this->db->where('exam_id',$exam_id);		$this->db->where('paper_set','1');		$mcq_a = $this->db->get('tbl_mcq_question');		$mcq_a_count = $mcq_a->num_rows(); 		 		$this->db->select('SUM(marks) as total');		$this->db->where('is_deleted','0');		$this->db->where('exam_id',$exam_id);		$this->db->where('paper_set','1');		$mcq_a = $this->db->get('tbl_mcq_question');		$mcq_a_marks = $mcq_a->row(); 		if($mcq_a_marks->total !=""){			$mcq_a_marks_total = $mcq_a_marks->total;		}else{			$mcq_a_marks_total = 0;		}				$this->db->where('is_deleted','0');		$this->db->where('exam_id',$exam_id);		$this->db->where('paper_set','1');		$picture_a = $this->db->get('tbl_picture_question_description');		$picture_a_res = $picture_a->result();		$picture_a_marks = 0;		if(!empty($picture_a_res)){			$ids = array();			foreach($picture_a_res as $picture_d_res_res){				$ids[] = $picture_d_res_res->id;			}			if(!empty($ids)){				$this->db->where('is_deleted','0');				$this->db->where_in('question_description_id',$ids);				$result = $this->db->get('tbl_picture_question');				$picture_a_count = $result->num_rows();												$this->db->select('SUM(marks) as total');				$this->db->where('is_deleted','0');				$this->db->where_in('question_description_id',$ids);				$result = $this->db->get('tbl_picture_question');				$result = $result->row(); 				$picture_a_marks = $result->total;				if($picture_a_marks ==""){					$picture_a_marks = 0;				}			}		}				$this->db->where('is_deleted','0');		$this->db->where('exam_id',$exam_id);		$this->db->where('paper_set','1');		$passage_a = $this->db->get('tbl_passage_reading_description');		$passage_d_res = $passage_a->result();				$ids = array();		$passage_a_marks = 0;		if(!empty($passage_d_res)){			foreach($passage_d_res as $passage_d_res_res){				$ids[] = $passage_d_res_res->id;			}						if(!empty($ids)){				$this->db->select('SUM(marks) as total');				$this->db->where('is_deleted','0');				$this->db->where_in('question_description_id',$ids);				$result = $this->db->get('tbl_passage_reading_question');				$passage_a_count = $result->num_rows();				$result = $result->row(); 				$passage_a_marks = $result->total;				if($passage_a_marks ==""){					$passage_a_marks = 0;				}			}		}						$this->db->where('is_deleted','0');		$this->db->where('exam_id',$exam_id);		$this->db->where('paper_set','2');		$mcq_b = $this->db->get('tbl_mcq_question');		$mcq_b_count = $mcq_b->num_rows();				$this->db->select('SUM(marks) as total');		$this->db->where('is_deleted','0');		$this->db->where('exam_id',$exam_id);		$this->db->where('paper_set','2');		$mcq_b = $this->db->get('tbl_mcq_question');		$mcq_b_marks = $mcq_b->row();		if($mcq_b_marks->total !=""){			$mcq_b_marks_total = $mcq_b_marks->total;		}else{			$mcq_b_marks_total = 0;		}				$this->db->where('is_deleted','0');		$this->db->where('exam_id',$exam_id);		$this->db->where('paper_set','2');		$picture_b = $this->db->get('tbl_picture_question_description');		$picture_b_rec = $picture_b->result();				$ids = array();		$picture_b_marks = 0;		if(!empty($picture_b_rec)){			foreach($picture_b_rec as $picture_d_res_res){				$ids[] = $picture_d_res_res->id;			}			if(!empty($ids)){				$this->db->where('is_deleted','0');				$this->db->where_in('question_description_id',$ids);				$result = $this->db->get('tbl_picture_question');				$picture_b_count = $result->num_rows();								$this->db->select('SUM(marks) as total');				$this->db->where('is_deleted','0');				$this->db->where_in('question_description_id',$ids);				$result = $this->db->get('tbl_picture_question');				$result = $result->row(); 				$picture_b_marks = $result->total;				if($picture_b_marks ==""){					$picture_b_marks = 0;				}			}		}		$this->db->where('is_deleted','0');		$this->db->where('exam_id',$exam_id);		$this->db->where('paper_set','2');		$passage_b = $this->db->get('tbl_passage_reading_description');		$passage_b_res = $passage_b->result();				$ids = array();		$passage_b_marks = 0;		if(!empty($passage_b_res)){			foreach($passage_b_res as $passage_d_res_res){				$ids[] = $passage_d_res_res->id;			}			if(!empty($ids)){				$this->db->select('SUM(marks) as total');				$this->db->where('is_deleted','0');				$this->db->where_in('question_description_id',$ids);				$result = $this->db->get('tbl_passage_reading_question');				$passage_b_count = $result->num_rows();				$result = $result->row(); 				$passage_b_marks = $result->total;				if($passage_b_marks ==""){					$passage_b_marks = 0;				}			}		}						$this->db->where('is_deleted','0');		$this->db->where('exam_id',$exam_id);		$this->db->where('paper_set','3');		$mcq_c = $this->db->get('tbl_mcq_question');		$mcq_c_count = $mcq_c->num_rows();				$this->db->select('SUM(marks) as total');		$this->db->where('is_deleted','0');		$this->db->where('exam_id',$exam_id);		$this->db->where('paper_set','3');		$mcq_c = $this->db->get('tbl_mcq_question');		$mcq_c_marks = $mcq_c->row();				if($mcq_c_marks->total !=""){			$mcq_c_marks_total = $mcq_c_marks->total;		}else{			$mcq_c_marks_total = 0;		}				$this->db->where('is_deleted','0');		$this->db->where('exam_id',$exam_id);		$this->db->where('paper_set','3');		$picture_c = $this->db->get('tbl_picture_question_description');		$picture_c_res = $picture_c->result();				$ids = array();		$picture_c_marks = 0;		if(!empty($picture_c_res)){			foreach($picture_c_res as $picture_d_res_res){				$ids[] = $picture_d_res_res->id;			}			if(!empty($ids)){				$this->db->where('is_deleted','0');				$this->db->where_in('question_description_id',$ids);				$result = $this->db->get('tbl_picture_question');				$picture_c_count = $result->num_rows();								$this->db->select('SUM(marks) as total');				$this->db->where('is_deleted','0');				$this->db->where_in('question_description_id',$ids);				$result = $this->db->get('tbl_picture_question');				$result = $result->row(); 				$picture_c_marks = $result->total;				if($picture_c_marks ==""){					$picture_c_marks = 0;				}			}		}		$this->db->where('is_deleted','0');		$this->db->where('exam_id',$exam_id);		$this->db->where('paper_set','3');		$passage_c = $this->db->get('tbl_passage_reading_description');		$passage_c_res = $passage_c->result();				 		$ids = array();		$passage_c_marks = 0;		if(!empty($passage_c_res)){			foreach($passage_c_res as $passage_c_res_res){				$ids[] = $passage_c_res_res->id;			}			if(!empty($ids)){				$this->db->select('SUM(marks) as total');				$this->db->where('is_deleted','0');				$this->db->where_in('question_description_id',$ids);				$result = $this->db->get('tbl_passage_reading_question');				$passage_c_count = $result->num_rows();				$result = $result->row(); 				$passage_c_marks = $result->total;				if($passage_c_marks ==""){					$passage_c_marks = 0;				}			}		}		 		$this->db->where('is_deleted','0');		$this->db->where('exam_id',$exam_id);		$this->db->where('paper_set','4');		$mcq_d = $this->db->get('tbl_mcq_question');		$mcq_d_count = $mcq_d->num_rows();				$this->db->select('SUM(marks) as total');		$this->db->where('is_deleted','0');		$this->db->where('exam_id',$exam_id);		$this->db->where('paper_set','4');		$mcq_d = $this->db->get('tbl_mcq_question');		$mcq_d_marks = $mcq_d->row();		if($mcq_d_marks->total !=""){			$mcq_d_marks_total = $mcq_d_marks->total;		}else{			$mcq_d_marks_total = 0;		}				$this->db->where('is_deleted','0');		$this->db->where('exam_id',$exam_id);		$this->db->where('paper_set','4');		$picture_d = $this->db->get('tbl_picture_question_description'); 		$picture_d_res = $picture_d->result();						 		$ids = array();		$picture_d_marks = 0;		if(!empty($picture_d_res)){			foreach($picture_d_res as $picture_d_res_res){				$ids[] = $picture_d_res_res->id;			}			if(!empty($ids)){				$this->db->where('is_deleted','0');				$this->db->where_in('question_description_id',$ids);				$result = $this->db->get('tbl_picture_question');				$picture_d_count = $result->num_rows();								$this->db->select('SUM(marks) as total');				$this->db->where('is_deleted','0');				$this->db->where_in('question_description_id',$ids);				$result = $this->db->get('tbl_picture_question');				$result = $result->row(); 				$picture_d_marks = $result->total;				if($picture_d_marks ==""){					$picture_d_marks = 0;				}			}		}						$this->db->select('id');		$this->db->where('is_deleted','0');		$this->db->where('exam_id',$exam_id);		$this->db->where('paper_set','4');		$passage_d = $this->db->get('tbl_passage_reading_description'); 		$passage_d_res = $passage_d->result();				$ids = array();		$passage_d_marks = 0;		if(!empty($passage_d_res)){			foreach($passage_d_res as $passage_d_res_res){				$ids[] = $passage_d_res_res->id;			}			if(!empty($ids)){				$this->db->select('SUM(marks) as total');				$this->db->where('is_deleted','0');				$this->db->where_in('question_description_id',$ids);				$result = $this->db->get('tbl_passage_reading_question');				$passage_d_count = $result->num_rows();				$result = $result->row(); 				$passage_d_marks = $result->total;				if($passage_d_marks ==""){					$passage_d_marks = 0;				}			}		}										$total_a = $passage_a_marks+$mcq_a_marks_total+$picture_a_marks;		$total_b = $passage_b_marks+$mcq_b_marks_total+$picture_b_marks;		$total_c = $passage_c_marks+$mcq_c_marks_total+$picture_c_marks;		$total_d = $passage_d_marks+$mcq_d_marks_total+$picture_d_marks;		$set_details = "<table>			<tr>				<th>Paper Set</th>				<th>MCQ</th>				<th>Picture</th> 				<th>Passage</th> 				<th>Total Marks</th> 			</tr>		";		$set_details .= " 			<tr>				<td>A</td>				<td>".$mcq_a_count."</td>				<td>".$picture_a_count."</td> 				<td>".$passage_a_count."</td> 				<td>".$total_a."</td> 			</tr>		";		$set_details .= " 			<tr>				<td>B</td>				<td>".$mcq_b_count."</td>				<td>".$picture_b_count."</td> 				<td>".$passage_b_count."</td> 				<td>".$total_b."</td> 			</tr>		";		$set_details .= " 			<tr>				<td>C</td>				<td>".$mcq_c_count."</td>				<td>".$picture_c_count."</td> 				<td>".$passage_c_count."</td> 				<td>".$total_c."</td> 			</tr>		";		$set_details .= " 			<tr>				<td>D</td>				<td>".$mcq_d_count."</td>				<td>".$picture_d_count."</td> 				<td>".$passage_d_count."</td>  				<td>".$total_d."</td> 			</tr>		";		$set_details .= "</table>";		return $set_details;	}	 }