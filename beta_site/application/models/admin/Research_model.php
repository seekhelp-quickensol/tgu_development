<?php if (! defined('BASEPATH')) exit('No direct script access allowed');class Research_model extends CI_Model{	public function progress_report_list_research_ajax($length, $start, $search)	{		$this->db->select('tbl_student_progree_report.*,tbl_student.email,tbl_student.mobile,tbl_student.student_name,tbl_student.enrollment_number,tbl_session.session_name,tbl_stream.stream_name,tbl_course.course_name,tbl_center.center_name');		$this->db->where('tbl_student_progree_report.is_deleted', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_student.student_name', $search);			$this->db->or_like('tbl_student.enrollment_number', $search);			$this->db->or_like('tbl_student.email', $search);			$this->db->or_like('tbl_student.mobile', $search);			$this->db->or_like('tbl_session.session_name', $search);			$this->db->or_like('tbl_stream.stream_name', $search);			$this->db->group_end();		}		$this->db->join('tbl_student', 'tbl_student.id = tbl_student_progree_report.student_id');		$this->db->join('tbl_center', 'tbl_center.id = tbl_student.center_id');		$this->db->join('tbl_session', 'tbl_session.id = tbl_student.session_id');		$this->db->join('tbl_course', 'tbl_course.id = tbl_student.course_id');		$this->db->join('tbl_stream', 'tbl_stream.id = tbl_student.stream_id');		$this->db->order_by('tbl_student_progree_report.id', 'DESC');		$this->db->limit($length, $start);		$result = $this->db->get('tbl_student_progree_report');		return $result->result();	}	public function progress_report_list_research_ajax_count($search)	{		$this->db->select('tbl_student_progree_report.*,tbl_student.email,tbl_student.mobile,tbl_student.student_name,tbl_student.enrollment_number,tbl_session.session_name,tbl_stream.stream_name,tbl_course.course_name,tbl_center.center_name');		$this->db->where('tbl_student_progree_report.is_deleted', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_student.student_name', $search);			$this->db->or_like('tbl_student.enrollment_number', $search);			$this->db->or_like('tbl_student.email', $search);			$this->db->or_like('tbl_student.mobile', $search);			$this->db->or_like('tbl_session.session_name', $search);			$this->db->or_like('tbl_stream.stream_name', $search);			$this->db->group_end();		}		$this->db->join('tbl_student', 'tbl_student.id = tbl_student_progree_report.student_id');		$this->db->join('tbl_center', 'tbl_center.id = tbl_student.center_id');		$this->db->join('tbl_session', 'tbl_session.id = tbl_student.session_id');		$this->db->join('tbl_course', 'tbl_course.id = tbl_student.course_id');		$this->db->join('tbl_stream', 'tbl_stream.id = tbl_student.stream_id');		$result = $this->db->get('tbl_student_progree_report');		return $result->num_rows();	}	public function get_new_guide_list($length, $start, $search)	{		$this->db->select('tbl_guide_application.*,countries.name as country_name,states.name as state_name,cities.name as city_name');		$this->db->where('tbl_guide_application.is_deleted', '0');		$this->db->where('tbl_guide_application.appliation_status', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_guide_application.name', $search);			$this->db->or_like('tbl_guide_application.email', $search);			$this->db->or_like('tbl_guide_application.mobile', $search);			$this->db->or_like('tbl_guide_application.pincode', $search);			$this->db->or_like('tbl_guide_application.address', $search);			$this->db->or_like('tbl_guide_application.employement_type', $search);			$this->db->or_like('tbl_guide_application.phone_number', $search);			$this->db->or_like('tbl_guide_application.address', $search);			$this->db->or_like('tbl_guide_application.specilisation', $search);			$this->db->or_like('tbl_guide_application.research_area', $search);			$this->db->group_end();		}		$this->db->join('countries', 'countries.id = tbl_guide_application.country');		$this->db->join('states', 'states.id = tbl_guide_application.state');		$this->db->join('cities', 'cities.id = tbl_guide_application.city');		$this->db->order_by('tbl_guide_application.id', 'DESC');		$this->db->limit($length, $start);		$result = $this->db->get('tbl_guide_application');		return $result->result();	}	public function get_new_guide_list_count($search)	{		$this->db->select('tbl_guide_application.*,countries.name as country_name,states.name as state_name,cities.name as city_name');		$this->db->where('tbl_guide_application.is_deleted', '0');		$this->db->where('tbl_guide_application.appliation_status', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_guide_application.name', $search);			$this->db->or_like('tbl_guide_application.email', $search);			$this->db->or_like('tbl_guide_application.mobile', $search);			$this->db->or_like('tbl_guide_application.pincode', $search);			$this->db->or_like('tbl_guide_application.address', $search);			$this->db->or_like('tbl_guide_application.phone_number', $search);			$this->db->or_like('tbl_guide_application.address', $search);			$this->db->or_like('tbl_guide_application.specilisation', $search);			$this->db->or_like('tbl_guide_application.research_area', $search);			$this->db->group_end();		}		$this->db->join('countries', 'countries.id = tbl_guide_application.country');		$this->db->join('states', 'states.id = tbl_guide_application.state');		$this->db->join('cities', 'cities.id = tbl_guide_application.city');		$this->db->order_by('tbl_guide_application.id', 'DESC');		$result = $this->db->get('tbl_guide_application');		return $result->num_rows();	}	public function get_single_guide()	{		$this->db->where('is_deleted', '0');		$this->db->where('id', $this->uri->segment(2));		$result = $this->db->get('tbl_guide_application');		return $result->row();	}	public function get_phd_single_student()	{		$this->db->select('tbl_phd_registration_form.*,tbl_course.print_name,tbl_stream.stream_name,countries.name as country_name,states.name as state_name,cities.name as city_name');		$this->db->where('tbl_phd_registration_form.is_deleted', '0');		$this->db->where('tbl_phd_registration_form.id', $this->uri->segment(2));		$this->db->join('tbl_course', 'tbl_course.id = tbl_phd_registration_form.course');		$this->db->join('tbl_stream', 'tbl_stream.id = tbl_phd_registration_form.stream');		$this->db->join('countries', 'countries.id = tbl_phd_registration_form.country');		$this->db->join('states', 'states.id = tbl_phd_registration_form.state');		$this->db->join('cities', 'cities.id = tbl_phd_registration_form.city');		$result = $this->db->get('tbl_phd_registration_form');		return $result->row();	}	public function get_all_guide_application()	{		$this->db->select('tbl_guide_application.*,tbl_signature.name as signture_name,tbl_signature.dispalay_signature,tbl_signature.signature');		$this->db->where('tbl_guide_application.is_deleted', '0');		$this->db->where('tbl_guide_application.status', '1');		$this->db->where('tbl_guide_application.id', $this->uri->segment(2));		$this->db->join('tbl_signature', 'tbl_signature.id = tbl_guide_application.signature_id', 'left');		$result = $this->db->get('tbl_guide_application');		return $result->row();	}	public function get_approved_guide_application()	{		$this->db->where('tbl_guide_application.is_deleted', '0');		$this->db->where('tbl_guide_application.status', '1');		$this->db->where('tbl_guide_application.appliation_status', '1');		$result = $this->db->get('tbl_guide_application');		return $result->result();	}	public function get_all_guide_payments()	{		// print_r($this->uri->segment(2));exit;		$this->db->join('tbl_student', 'tbl_student.id = tbl_guide_payment.student_id');		$this->db->where('tbl_guide_payment.is_deleted', '0');		$this->db->where('tbl_guide_payment.status', '1');		$this->db->where('tbl_guide_payment.guide_id', $this->uri->segment(2));		$result = $this->db->get('tbl_guide_payment');		return $result->result();	}	public function get_all_co_guide_payments()	{		$this->db->join('tbl_student', 'tbl_student.id = tbl_co_guide_payment.student_id');		$this->db->where('tbl_co_guide_payment.is_deleted', '0');		$this->db->where('tbl_co_guide_payment.status', '1');		$this->db->where('tbl_co_guide_payment.co_guide_id', $this->uri->segment(2));		$result = $this->db->get('tbl_co_guide_payment');		return $result->result();	}	public function get_all_guide_fees()	{		$this->db->where('is_deleted', '0');		$this->db->where('status', '1');		$this->db->where('guide_id', $this->uri->segment(2));		$result = $this->db->get('tbl_student');		return $result->result();	}	public function get_all_co_guide_fees()	{		$this->db->where('is_deleted', '0');		$this->db->where('status', '1');		$this->db->where('co_guide_id', $this->uri->segment(2));		$result = $this->db->get('tbl_student');		return $result->result();	}	public function get_phd_student()	{		$this->db->select('tbl_student.*,tbl_id_management.id_name,countries.name as country_name,states.name as state_name,cities.name as city_name,tbl_session.session_name,tbl_faculty.faculty_name,tbl_course.course_name,tbl_stream.stream_name,tbl_course_type.course_type as course_type_name,tbl_center.center_name');		$this->db->where('tbl_student.is_deleted', '0');		$this->db->where('tbl_student.verified_status', '1');		$this->db->where('tbl_student.course_id', '23');		$this->db->where('tbl_student.admission_status !=', '0');		$this->db->where('tbl_student.admission_status !=', '2');		$this->db->order_by('tbl_student.enrollment_date', 'DESC');		$this->db->join('tbl_center', 'tbl_center.id = tbl_student.center_id');		$this->db->join('tbl_course', 'tbl_course.id = tbl_student.course_id');		$this->db->join('tbl_course_type', 'tbl_course_type.id = tbl_student.course_type');		$this->db->join('tbl_stream', 'tbl_stream.id = tbl_student.stream_id');		$this->db->join('tbl_faculty', 'tbl_faculty.id = tbl_student.faculty_id');		$this->db->join('tbl_session', 'tbl_session.id = tbl_student.session_id');		$this->db->join('tbl_id_management', 'tbl_id_management.id = tbl_student.id_type');		$this->db->join('countries', 'countries.id = tbl_student.country');		$this->db->join('states', 'states.id = tbl_student.state');		$this->db->join('cities', 'cities.id = tbl_student.city');		$result = $this->db->get('tbl_student');		return $result->result();	}	public function get_selected_country()	{		// $this->db->where('id', $id);		$result = $this->db->get('countries');		return $result->result();	}	public function get_selected_state($id)	{		$this->db->where('id', $id);		$result = $this->db->get('states');		return $result->row();	}	public function get_selected_city($id)	{		$this->db->where('id', $id);		$result = $this->db->get('cities');		return $result->row();	}	public function update_guide_application($photo, $signature, $secondary_subject_marksheet, $sr_secondary_subject_marksheet, $graduation_subject_marksheet, $post_graduation_subject_marksheet, $phd_subject_marksheet, $other_qualification_subject_marksheet, $biodata, $aadhar_card)	{		$data = array(			'name' 								=> $this->input->post('name'),			'son_of' 							=> $this->input->post('son_of'),			'date_of_birth'					 	=> date("Y-m-d", strtotime($this->input->post('date_of_birth'))),			'phone_number' 						=> $this->input->post('phone_number'),			'mobile' 							=> $this->input->post('mobile'),			'email' 							=> $this->input->post('email'),			'gender' 							=> $this->input->post('gender'),			'photo' 							=> $photo,			'signature' 						=> $signature,			'address' 							=> $this->input->post('address'),			'country' 							=> $this->input->post('country'),			'state' 							=> $this->input->post('state'),			'city' 								=> $this->input->post('city'),			'pincode' 							=> $this->input->post('pincode'),			'specilisation' 					=> $this->input->post('specilisation'),			'designation' 						=> $this->input->post('designation'),			'remark' 							=> $this->input->post('remark'),			'research_area' 					=> $this->input->post('research_area'),			'employement_type' 					=> $this->input->post('employement_type'),			'work_experience' 					=> $this->input->post('work_experience'),			'present_working' 					=> $this->input->post('present_working'),			'secondary_year' 					=> $this->input->post('secondary_year'),			'secondary_university' 				=> $this->input->post('secondary_university'),			'secondary_subject' 				=> $this->input->post('secondary_subject'),			'secondary_subject_marksheet' 		=> $secondary_subject_marksheet,			'sr_secondary_year' 				=> $this->input->post('sr_secondary_year'),			'sr_secondary_university' 			=> $this->input->post('sr_secondary_university'),			'sr_secondary_subject' 				=> $this->input->post('sr_secondary_subject'),			'sr_secondary_subject_marksheet' 	=> $sr_secondary_subject_marksheet,			'graduation_year' 					=> $this->input->post('graduation_year'),			'graduation_university' 			=> $this->input->post('graduation_university'),			'graduation_subject' 				=> $this->input->post('graduation_subject'),			'graduation_subject_marksheet' 		=> $graduation_subject_marksheet,			'post_graduation_year' 				=> $this->input->post('post_graduation_year'),			'post_graduation_university' 		=> $this->input->post('post_graduation_university'),			'post_graduation_subject' 			=> $this->input->post('post_graduation_subject'),			'post_graduation_subject_marksheet' => $post_graduation_subject_marksheet,			'phd_year' 							=> $this->input->post('phd_year'),			'phd_university' 					=> $this->input->post('phd_university'),			'phd_subject' 						=> $this->input->post('phd_subject'),			'phd_subject_marksheet' 			=> $phd_subject_marksheet,			'other_qualification_year' 			=> $this->input->post('other_qualification_year'),			'other_qualification_university' 	=> $this->input->post('other_qualification_university'),			'other_qualification_subject' 		=> $this->input->post('other_qualification_subject'),			'other_qualification_subject_marksheet' => $other_qualification_subject_marksheet,			'bank_name' 						=> $this->input->post('bank_name'),			'account_name' 						=> $this->input->post('account_name'),			'account_number' 					=> $this->input->post('account_number'),			'ifsc_code' 						=> $this->input->post('ifsc_code'),			'final_amount' 						=> $this->input->post('final_amount'),			'final_remark' 						=> $this->input->post('final_remark'),			'reference' 						=> $this->input->post('reference'),			'biodata'							=> $biodata,			'aadhar_card'						=> $aadhar_card,			'signature_id'						=> $this->input->post('signature'),		);		$this->db->where('id', $this->input->post('id'));		$this->db->update('tbl_guide_application', $data);		return true;	}	public function set_phd_course_work_schedule()	{		$data = array(			"schedule_date" => $this->input->post("schedule_date"),		);		if (empty($this->uri->segment(2))) {			$data["created_on"] = date("Y-m-d H:i:s");			$this->db->insert("tbl_phd_course_work_schedules", $data);			return "saved";		} else {			$this->db->where("is_deleted", "0");			$this->db->where("id", $this->input->post("id"));			$this->db->update("tbl_phd_course_work_schedules", $data);			return "updated";		}	}	public function get_phd_course_work_schedule_for_admin_dispaly()	{		$this->db->where("is_deleted", "0");		$result = $this->db->get("tbl_phd_course_work_schedules");		return $result->result();	}	public function edit_phd_course_work_schedule()	{		$this->db->where("is_deleted", "0");		$this->db->where("id", $this->uri->segment(2));		$result = $this->db->get("tbl_phd_course_work_schedules");		return $result->row();	}	public function get_phd_course_work_list($length, $start, $search)	{		$this->db->select('tbl_phd_course_work.*,countries.name as country_name,states.name as state_name,cities.name as city_name,tbl_course.course_name,tbl_stream.stream_name');		$this->db->where('tbl_phd_course_work.is_deleted', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_course.course_name', $search);			$this->db->or_like('tbl_stream.stream_name', $search);			$this->db->or_like('tbl_phd_course_work.student_name', $search);			$this->db->or_like('tbl_phd_course_work.email', $search);			$this->db->or_like('tbl_phd_course_work.mobile', $search);			$this->db->or_like('tbl_phd_course_work.pincode', $search);			$this->db->or_like('tbl_phd_course_work.address', $search);			$this->db->or_like('tbl_phd_course_work.enrollment_number', $search);			$this->db->group_end();		}		$this->db->join("countries", "countries.id=tbl_phd_course_work.country_id");		$this->db->join("states", "states.id=tbl_phd_course_work.state_id");		$this->db->join("cities", "cities.id=tbl_phd_course_work.city_id");		$this->db->join("tbl_course", "tbl_course.id=tbl_phd_course_work.course_id");		$this->db->join("tbl_stream", "tbl_stream.id=tbl_phd_course_work.stream_id");		$this->db->order_by('tbl_phd_course_work.id', 'DESC');		$this->db->limit($length, $start);		$result = $this->db->get('tbl_phd_course_work');		return $result->result();	}	public function get_phd_course_work_list_count($search)	{		$this->db->select('tbl_phd_course_work.*,countries.name as country_name,states.name as state_name,cities.name as city_name,tbl_course.course_name,tbl_stream.stream_name');		$this->db->where('tbl_phd_course_work.is_deleted', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_course.course_name', $search);			$this->db->or_like('tbl_stream.stream_name', $search);			$this->db->or_like('tbl_phd_course_work.student_name', $search);			$this->db->or_like('tbl_phd_course_work.email', $search);			$this->db->or_like('tbl_phd_course_work.mobile', $search);			$this->db->or_like('tbl_phd_course_work.pincode', $search);			$this->db->or_like('tbl_phd_course_work.address', $search);			$this->db->or_like('tbl_phd_course_work.enrollment_number', $search);			$this->db->group_end();		}		$this->db->join("countries", "countries.id=tbl_phd_course_work.country_id");		$this->db->join("states", "states.id=tbl_phd_course_work.state_id");		$this->db->join("cities", "cities.id=tbl_phd_course_work.city_id");		$this->db->join("tbl_course", "tbl_course.id=tbl_phd_course_work.course_id");		$this->db->join("tbl_stream", "tbl_stream.id=tbl_phd_course_work.stream_id");		$this->db->order_by('tbl_phd_course_work.id', 'DESC');		$result = $this->db->get('tbl_phd_course_work');		return $result->num_rows();	}	public function approve_guide_application()	{		$password = rand(100000, 9999999);		$this->db->where('id', $this->uri->segment(2));		$this->db->where('is_deleted', '0');		$result = $this->db->get('tbl_guide_application');		$result = $result->row();		if (!empty($result)) {			$data = array(				"appliation_status" => '1',				"password" => $password,			);			$this->db->where("id", $result->id);			$this->db->update("tbl_guide_application", $data);			$this->load->library('email');			$config['protocol'] = 'sendmail';			$config['mailpath'] = '/usr/sbin/sendmail';			$config['mailtype'] = 'html';			$config['charset'] = 'iso-8859-1';			$config['wordwrap'] = TRUE;			$this->email->initialize($config);			$mail_message = "Dear " . $result->name . ",<br>Your application has been approved, below are the password for your approval lettar<br>Link:" . base_url() . "appointment-letter-for-supervisors<br>Password:" . $password . "<br>";			$this->email->from(no_reply_mail);			$this->email->to($result->email);			$this->email->subject('Approve Application |' . no_reply_name);			$this->email->set_mailtype('html');			$message = $mail_message;			$message .= "<br>Regards,<br>IT Team<br>THE GLOBAL UNIVERSITY<br>Canchipur, near Arunachal Pradesh University, South View. Imphal West, Arunachal Pradesh-795003";			$this->email->message($message);			if ($this->email->send()) {			} else {			}			return true;		} else {			return false;		}	}	public function get_all_approve_guide_application($length, $start, $search)	{		$this->db->select('tbl_guide_application.*,countries.name as country_name,states.name as state_name,cities.name as city_name');		$this->db->where('tbl_guide_application.is_deleted', '0');		$this->db->where('tbl_guide_application.appliation_status', '1');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_guide_application.name', $search);			$this->db->or_like('tbl_guide_application.email', $search);			$this->db->or_like('tbl_guide_application.mobile', $search);			$this->db->or_like('tbl_guide_application.pincode', $search);			$this->db->or_like('tbl_guide_application.address', $search);			$this->db->or_like('tbl_guide_application.gender', $search);			$this->db->or_like('tbl_guide_application.research_area', $search);			$this->db->or_like('tbl_guide_application.specilisation', $search);			$this->db->or_like('tbl_guide_application.present_working', $search);			$this->db->group_end();		}		$this->db->join('countries', 'countries.id = tbl_guide_application.country');		$this->db->join('states', 'states.id = tbl_guide_application.state');		$this->db->join('cities', 'cities.id = tbl_guide_application.city');		$this->db->order_by('tbl_guide_application.id', 'DESC');		$this->db->limit($length, $start);		$result = $this->db->get('tbl_guide_application');		return $result->result();	}	public function get_all_approve_guide_application_count($search)	{		$this->db->select('tbl_guide_application.*,countries.name as country_name,states.name as state_name,cities.name as city_name');		$this->db->where('tbl_guide_application.is_deleted', '0');		$this->db->where('tbl_guide_application.appliation_status', '1');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_guide_application.name', $search);			$this->db->or_like('tbl_guide_application.email', $search);			$this->db->or_like('tbl_guide_application.mobile', $search);			$this->db->or_like('tbl_guide_application.pincode', $search);			$this->db->or_like('tbl_guide_application.address', $search);			$this->db->or_like('tbl_guide_application.gender', $search);			$this->db->or_like('tbl_guide_application.research_area', $search);			$this->db->or_like('tbl_guide_application.specilisation', $search);			$this->db->or_like('tbl_guide_application.present_working', $search);			$this->db->group_end();		}		$this->db->join('countries', 'countries.id = tbl_guide_application.country');		$this->db->join('states', 'states.id = tbl_guide_application.state');		$this->db->join('cities', 'cities.id = tbl_guide_application.city');		$this->db->order_by('tbl_guide_application.id', 'DESC');		$result = $this->db->get('tbl_guide_application');		return $result->num_rows();	}	public function get_single_guide_data()	{		$this->db->select('tbl_guide_application.*,cities.name as city_name, countries.name as country_name, states.name as state_name,tbl_signature.name as signture_name,tbl_signature.dispalay_signature,tbl_signature.signature');		$this->db->where('tbl_guide_application.id', $this->uri->segment(2));		$this->db->where('tbl_guide_application.is_deleted', '0');		$this->db->where('tbl_guide_application.status', '1');		$this->db->join('countries', 'countries.id = tbl_guide_application.country');		$this->db->join('states', 'states.id = tbl_guide_application.state');		$this->db->join('cities', 'cities.id = tbl_guide_application.city');		$this->db->join('tbl_signature', 'tbl_signature.id = tbl_guide_application.signature_id', 'left');		$result = $this->db->get('tbl_guide_application');		return $result->row();	}	public function get_single_co_guide_data()	{		$this->db->select('tbl_guide_application.*,cities.name as city_name, countries.name as country_name, states.name as state_name');		$this->db->where('tbl_guide_application.id', $this->uri->segment(2));		$this->db->where('tbl_guide_application.is_deleted', '0');		$this->db->where('tbl_guide_application.status', '1');		$this->db->join('countries', 'countries.id = tbl_guide_application.country');		$this->db->join('states', 'states.id = tbl_guide_application.state');		$this->db->join('cities', 'cities.id = tbl_guide_application.city');		$result = $this->db->get('tbl_guide_application');		return $result->row();	}	/********************* shubham code *****************************************/	public function get_phd_course_work_list_success($length, $start, $search)	{		$this->db->select('tbl_phd_course_work.*,countries.name as country_name,states.name as state_name,cities.name as city_name,tbl_course.course_name,tbl_stream.stream_name,tbl_center.center_name');		$this->db->where('tbl_phd_course_work.is_deleted', '0');		$this->db->where('tbl_phd_course_work.payment_status', '1');		$this->db->where('tbl_phd_course_work.approve', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_course.course_name', $search);			$this->db->or_like('tbl_stream.stream_name', $search);			$this->db->or_like('tbl_phd_course_work.student_name', $search);			$this->db->or_like('tbl_phd_course_work.email', $search);			$this->db->or_like('tbl_phd_course_work.mobile', $search);			$this->db->or_like('tbl_phd_course_work.pincode', $search);			$this->db->or_like('tbl_phd_course_work.address', $search);			$this->db->or_like('tbl_phd_course_work.enrollment_number', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->group_end();		}		$this->db->join("countries", "countries.id=tbl_phd_course_work.country_id");		$this->db->join("states", "states.id=tbl_phd_course_work.state_id");		$this->db->join("cities", "cities.id=tbl_phd_course_work.city_id");		$this->db->join("tbl_course", "tbl_course.id=tbl_phd_course_work.course_id");		$this->db->join("tbl_stream", "tbl_stream.id=tbl_phd_course_work.stream_id");		$this->db->join("tbl_student", "tbl_student.enrollment_number=tbl_phd_course_work.enrollment_number");		$this->db->join("tbl_center", "tbl_center.id=tbl_student.center_id");		$this->db->order_by('tbl_phd_course_work.id', 'DESC');		$this->db->limit($length, $start);		$result = $this->db->get('tbl_phd_course_work');		return $result->result();	}	public function get_phd_course_work_list_success_count($search)	{		$this->db->select('tbl_phd_course_work.*,countries.name as country_name,states.name as state_name,cities.name as city_name,tbl_course.course_name,tbl_stream.stream_name,tbl_center.center_name');		$this->db->where('tbl_phd_course_work.is_deleted', '0');		$this->db->where('tbl_phd_course_work.payment_status', '1');		$this->db->where('tbl_phd_course_work.approve', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_course.course_name', $search);			$this->db->or_like('tbl_stream.stream_name', $search);			$this->db->or_like('tbl_phd_course_work.student_name', $search);			$this->db->or_like('tbl_phd_course_work.email', $search);			$this->db->or_like('tbl_phd_course_work.mobile', $search);			$this->db->or_like('tbl_phd_course_work.pincode', $search);			$this->db->or_like('tbl_phd_course_work.address', $search);			$this->db->or_like('tbl_phd_course_work.enrollment_number', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->group_end();		}		$this->db->join("countries", "countries.id=tbl_phd_course_work.country_id");		$this->db->join("states", "states.id=tbl_phd_course_work.state_id");		$this->db->join("cities", "cities.id=tbl_phd_course_work.city_id");		$this->db->join("tbl_course", "tbl_course.id=tbl_phd_course_work.course_id");		$this->db->join("tbl_stream", "tbl_stream.id=tbl_phd_course_work.stream_id");		$this->db->join("tbl_student", "tbl_student.enrollment_number=tbl_phd_course_work.enrollment_number");		$this->db->join("tbl_center", "tbl_center.id=tbl_student.center_id");		$this->db->order_by('tbl_phd_course_work.id', 'DESC');		$result = $this->db->get('tbl_phd_course_work');		return $result->num_rows();	}	public function get_phd_course_work_list_fail($length, $start, $search)	{		$this->db->select('tbl_phd_course_work.*,countries.name as country_name,states.name as state_name,cities.name as city_name,tbl_course.course_name,tbl_stream.stream_name,tbl_center.center_name');		$this->db->where('tbl_phd_course_work.is_deleted', '0');		$this->db->where('tbl_phd_course_work.payment_status', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_course.course_name', $search);			$this->db->or_like('tbl_stream.stream_name', $search);			$this->db->or_like('tbl_phd_course_work.student_name', $search);			$this->db->or_like('tbl_phd_course_work.email', $search);			$this->db->or_like('tbl_phd_course_work.mobile', $search);			$this->db->or_like('tbl_phd_course_work.pincode', $search);			$this->db->or_like('tbl_phd_course_work.address', $search);			$this->db->or_like('tbl_phd_course_work.enrollment_number', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->or_like('tbl_phd_course_work.mother_name', $search);			$this->db->or_like('tbl_phd_course_work.gender', $search);			$this->db->or_like('tbl_phd_course_work.address', $search);			$this->db->group_end();		}		$this->db->join("countries", "countries.id=tbl_phd_course_work.country_id");		$this->db->join("states", "states.id=tbl_phd_course_work.state_id");		$this->db->join("cities", "cities.id=tbl_phd_course_work.city_id");		$this->db->join("tbl_course", "tbl_course.id=tbl_phd_course_work.course_id");		$this->db->join("tbl_stream", "tbl_stream.id=tbl_phd_course_work.stream_id");		$this->db->join("tbl_student", "tbl_student.enrollment_number=tbl_phd_course_work.enrollment_number");		$this->db->join("tbl_center", "tbl_center.id=tbl_student.center_id");		$this->db->order_by('tbl_phd_course_work.id', 'DESC');		$this->db->limit($length, $start);		$result = $this->db->get('tbl_phd_course_work');		return $result->result();	}	public function get_phd_course_work_list_fail_count($search)	{		$this->db->select('tbl_phd_course_work.*,countries.name as country_name,states.name as state_name,cities.name as city_name,tbl_course.course_name,tbl_stream.stream_name,tbl_center.center_name');		$this->db->where('tbl_phd_course_work.is_deleted', '0');		$this->db->where('tbl_phd_course_work.payment_status', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_course.course_name', $search);			$this->db->or_like('tbl_stream.stream_name', $search);			$this->db->or_like('tbl_phd_course_work.student_name', $search);			$this->db->or_like('tbl_phd_course_work.email', $search);			$this->db->or_like('tbl_phd_course_work.mobile', $search);			$this->db->or_like('tbl_phd_course_work.pincode', $search);			$this->db->or_like('tbl_phd_course_work.address', $search);			$this->db->or_like('tbl_phd_course_work.enrollment_number', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->or_like('tbl_phd_course_work.mother_name', $search);			$this->db->or_like('tbl_phd_course_work.gender', $search);			$this->db->or_like('tbl_phd_course_work.address', $search);			$this->db->group_end();		}		$this->db->join("countries", "countries.id=tbl_phd_course_work.country_id");		$this->db->join("states", "states.id=tbl_phd_course_work.state_id");		$this->db->join("cities", "cities.id=tbl_phd_course_work.city_id");		$this->db->join("tbl_course", "tbl_course.id=tbl_phd_course_work.course_id");		$this->db->join("tbl_stream", "tbl_stream.id=tbl_phd_course_work.stream_id");		$this->db->join("tbl_student", "tbl_student.enrollment_number=tbl_phd_course_work.enrollment_number");		$this->db->join("tbl_center", "tbl_center.id=tbl_student.center_id");		$this->db->order_by('tbl_phd_course_work.id', 'DESC');		$result = $this->db->get('tbl_phd_course_work');		return $result->num_rows();	}	public function approve_course_work_registration()	{		$password = rand(100000, 9999999);		$this->db->where('id', $this->uri->segment(2));		$this->db->where('is_deleted', '0');		$result = $this->db->get('tbl_phd_course_work');		$result = $result->row();		if (!empty($result)) {			$data = array(				"username" => $result->enrollment_number,				"password" => $password,				"approve" => '1',			);			$this->db->where("id", $result->id);			$this->db->update("tbl_phd_course_work", $data);			/*$this->load->library('email');			$config['protocol'] = 'sendmail';			$config['mailpath'] = '/usr/sbin/sendmail';			$config['mailtype'] = 'html';			$config['charset'] = 'iso-8859-1';			$config['wordwrap'] = TRUE; 			$this->email->initialize($config);			$mail_message = "Dear ".$result->name.",<br>Your application has been approved, below are the password for your approval lettar<br>Link:".base_url()."course_work_exam_login<br>Username:".$result->enrollment_number."<br> Password:".$password."<br>";						$this->email->from('no-reply@tgu.ac.in');			$this->email->to($result->email);			$this->email->subject('Approve Application |THE GLOBAL UNIVERSITY'); 			$this->email->set_mailtype('html');			$message = $mail_message;			$message .="<br>Regards<br>IT Team<br>THE GLOBAL UNIVERSITY<br>Canchipur, near Arunachal Pradesh University, South View. Imphal West, Arunachal Pradesh-795003";						$this->email->message($message); 			if($this->email->send()){  			}else{ 			}*/			return true;		} else {			return false;		}	}	public function get_phd_course_work_list_approved($length, $start, $search)	{		$this->db->select('tbl_phd_course_work.*,countries.name as country_name,states.name as state_name,cities.name as city_name,tbl_course.course_name,tbl_stream.stream_name,tbl_center.center_name');		$this->db->where('tbl_phd_course_work.is_deleted', '0');		$this->db->where('tbl_phd_course_work.payment_status', '1');		$this->db->where('tbl_phd_course_work.approve', '1');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_course.course_name', $search);			$this->db->or_like('tbl_stream.stream_name', $search);			$this->db->or_like('tbl_phd_course_work.student_name', $search);			$this->db->or_like('tbl_phd_course_work.email', $search);			$this->db->or_like('tbl_phd_course_work.mobile', $search);			$this->db->or_like('tbl_phd_course_work.pincode', $search);			$this->db->or_like('tbl_phd_course_work.address', $search);			$this->db->or_like('tbl_phd_course_work.enrollment_number', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->group_end();		}		$this->db->join("countries", "countries.id=tbl_phd_course_work.country_id");		$this->db->join("states", "states.id=tbl_phd_course_work.state_id");		$this->db->join("cities", "cities.id=tbl_phd_course_work.city_id");		$this->db->join("tbl_course", "tbl_course.id=tbl_phd_course_work.course_id");		$this->db->join("tbl_stream", "tbl_stream.id=tbl_phd_course_work.stream_id");		$this->db->join("tbl_student", "tbl_student.enrollment_number=tbl_phd_course_work.enrollment_number");		$this->db->join("tbl_center", "tbl_center.id=tbl_student.center_id");		$this->db->order_by('tbl_phd_course_work.id', 'DESC');		$this->db->limit($length, $start);		$result = $this->db->get('tbl_phd_course_work');		return $result->result();	}	public function get_phd_course_work_list_approved_count($search)	{		$this->db->select('tbl_phd_course_work.*,countries.name as country_name,states.name as state_name,cities.name as city_name,tbl_course.course_name,tbl_stream.stream_name,tbl_center.center_name');		$this->db->where('tbl_phd_course_work.is_deleted', '0');		$this->db->where('tbl_phd_course_work.payment_status', '1');		$this->db->where('tbl_phd_course_work.approve', '1');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_course.course_name', $search);			$this->db->or_like('tbl_stream.stream_name', $search);			$this->db->or_like('tbl_phd_course_work.student_name', $search);			$this->db->or_like('tbl_phd_course_work.email', $search);			$this->db->or_like('tbl_phd_course_work.mobile', $search);			$this->db->or_like('tbl_phd_course_work.pincode', $search);			$this->db->or_like('tbl_phd_course_work.address', $search);			$this->db->or_like('tbl_phd_course_work.enrollment_number', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->group_end();		}		$this->db->join("countries", "countries.id=tbl_phd_course_work.country_id");		$this->db->join("states", "states.id=tbl_phd_course_work.state_id");		$this->db->join("cities", "cities.id=tbl_phd_course_work.city_id");		$this->db->join("tbl_course", "tbl_course.id=tbl_phd_course_work.course_id");		$this->db->join("tbl_stream", "tbl_stream.id=tbl_phd_course_work.stream_id");		$this->db->join("tbl_student", "tbl_student.enrollment_number=tbl_phd_course_work.enrollment_number");		$this->db->join("tbl_center", "tbl_center.id=tbl_student.center_id");		$this->db->order_by('tbl_phd_course_work.id', 'DESC');		$result = $this->db->get('tbl_phd_course_work');		return $result->num_rows();	}	public function disapprove_course_work_registration()	{		$this->db->where('id', $this->uri->segment(2));		$this->db->where('is_deleted', '0');		$result = $this->db->get('tbl_phd_course_work');		$result = $result->row();		if (!empty($result)) {			$data = array(				"approve" => '0',			);			$this->db->where("id", $result->id);			$this->db->update("tbl_phd_course_work", $data);			return true;		} else {			return false;		}	}	public function get_single_phd_course_work_payment_detail()	{		$this->db->where('tbl_phd_course_work.id', $this->uri->segment(2));		$this->db->where('tbl_phd_course_work.is_deleted', '0');		$this->db->where('tbl_phd_course_work.status', '1');		$result = $this->db->get('tbl_phd_course_work');		return $result->row();	}	public function update_course_work_update_payment()	{		$this->db->where('id', $this->uri->segment(2));		$this->db->where('is_deleted', '0');		$result = $this->db->get('tbl_phd_course_work');		$result = $result->row();		if (!empty($result)) {			$data = array(				"transaction_id" => $this->input->post('transaction_id'),				"payment_mode"   => $this->input->post('payment_mode'),				"payment_date"   => date('Y-m-d', strtotime($this->input->post('payment_date'))),				"payment_status" => $this->input->post('payment_status'),				"payment_ammount" => $this->input->post('total_fees'),				"remark"         => $this->input->post('remark'),			);			$this->db->where("id", $result->id);			$this->db->update("tbl_phd_course_work", $data);			return true;		} else {			return false;		}	}	public function get_unique_transaction_for_tbl_course_work()	{		$this->db->where("is_deleted", "0");		$this->db->where("status", "1");		$this->db->where("transaction_id", $this->input->post("transaction_id"));		$result = $this->db->get("tbl_phd_course_work");		$result = $result->num_rows();		// echo $result;		if ($result > 1) {			echo 1;		} else {			echo 0;		}	}	public function get_phd_course_work_exam_appeared_list($length, $start, $search)	{		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_phd_course_work.student_name', $search);			$this->db->or_like('tbl_phd_course_work.enrollment_number', $search);			$this->db->or_like('tbl_course_work_exam.exam_name', $search);			$this->db->or_like('tbl_course_work_exam_student.score', $search);			$this->db->or_like('tbl_course_work_exam_student.exam_date', $search);			$this->db->group_end();		}		$this->db->select('tbl_course_work_exam_student.*,tbl_phd_course_work.student_name,tbl_course_work_exam.exam_name,tbl_phd_course_work.enrollment_number');		$this->db->where("tbl_course_work_exam_student.is_deleted", "0");		$this->db->join("tbl_phd_course_work", "tbl_phd_course_work.id=tbl_course_work_exam_student.student_id");		$this->db->join("tbl_course_work_exam", "tbl_course_work_exam.id=tbl_course_work_exam_student.exam_id");		$this->db->order_by("tbl_course_work_exam_student.id", "DESC");		$this->db->limit($length, $start);		$result = $this->db->get("tbl_course_work_exam_student");		return $result->result();	}	public function get_phd_course_work_exam_appeared_list_count($search)	{		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_phd_course_work.student_name', $search);			$this->db->or_like('tbl_phd_course_work.enrollment_number', $search);			$this->db->or_like('tbl_course_work_exam.exam_name', $search);			$this->db->or_like('tbl_course_work_exam_student.score', $search);			$this->db->or_like('tbl_course_work_exam_student.exam_date', $search);			$this->db->group_end();		}		$this->db->select('tbl_course_work_exam_student.*,tbl_phd_course_work.student_name,tbl_course_work_exam.exam_name,tbl_phd_course_work.enrollment_number');		$this->db->where("tbl_course_work_exam_student.is_deleted", "0");		$this->db->join("tbl_phd_course_work", "tbl_phd_course_work.id=tbl_course_work_exam_student.student_id");		$this->db->join("tbl_course_work_exam", "tbl_course_work_exam.id=tbl_course_work_exam_student.exam_id");		$this->db->order_by("tbl_course_work_exam_student.id", "DESC");		$result = $this->db->get("tbl_course_work_exam_student");		return $result->num_rows();	}	public function set_assigned_guide_to_scholar()	{		$data = array(			'guide_id' 		=> $this->input->post('guide_name'),			'co_guide_id' 	=> $this->input->post('co_guide_name'),			'guide_fees' 	=> $this->input->post('guide_fees'),			'co_guide_fees' => $this->input->post('co_guide_fees'),		);		// echo "<pre>";print_r($data);exit;		$this->db->where('id', $this->input->post('student_name'));		$this->db->update('tbl_student', $data);		return true;	}	public function set_guide_payment($file)	{		$data = array(			'guide_id' 			=> $this->input->post('guide_id'),			'student_id' 		=> $this->input->post('student_id'),			'transaction_no' 	=> $this->input->post('transaction_id'),			'payment_date' 		=> date("Y-m-d", strtotime($this->input->post('payment_date'))),			'amount' 			=> $this->input->post('total_fees'),			'mode' 				=> $this->input->post('payment_mode'),			'bank' 				=> $this->input->post('bank'),			'remark' 			=> $this->input->post('remark'),			'bank_name' 		=> $this->input->post('bank_name'),			'account_name' 		=> $this->input->post('account_name'),			'accounr_number' 	=> $this->input->post('guide_account'),			'ifsc_code' 		=> $this->input->post('guide_ifsc'),			'file' 				=> $file,		);		// echo "<pre>";print_r($this->input->post('single_payment_id'));exit;		if ($this->input->post('single_payment_id') == '0') {			$date = array('created_on' => date("Y-m-d H:i:s"));			$newArr = array_merge($date, $data);			$this->db->insert('tbl_guide_payment', $newArr);			return 0;		} else {			$this->db->where('id', $this->input->post('single_payment_id'));			$this->db->update('tbl_guide_payment', $data);			return 1;		}	}	public function set_co_guide_payment($file)	{		$data = array(			'co_guide_id' 		=> $this->input->post('co_guide_id'),			'student_id' 		=> $this->input->post('student_id'),			'transaction_no' 	=> $this->input->post('transaction_id'),			'payment_date' 		=> date("Y-m-d", strtotime($this->input->post('payment_date'))),			'amount' 			=> $this->input->post('total_fees'),			'mode' 				=> $this->input->post('payment_mode'),			'remark' 			=> $this->input->post('remark'),			'bank_name' 		=> $this->input->post('bank_name'),			'account_name' 		=> $this->input->post('account_name'),			'accounr_number' 	=> $this->input->post('guide_account'),			'ifsc_code' 		=> $this->input->post('guide_ifsc'),			'file' 				=> $file,		);		if ($this->input->post('single_payment_id') == '0') {			$date = array('created_on' => date("Y-m-d H:i:s"));			$newArr = array_merge($date, $data);			$this->db->insert('tbl_co_guide_payment', $newArr);			return 0;		} else {			$this->db->where('id', $this->input->post('single_payment_id'));			$this->db->update('tbl_co_guide_payment', $data);			return 1;		}	}	public function get_all_guide_payment()	{		// print_r($this->uri->segment(3));exit;		$this->db->where('is_deleted', '0');		$this->db->where('status', '1');		$this->db->where('student_id', $this->uri->segment(2));		$this->db->where('guide_id', $this->uri->segment(3));		$this->db->order_by('id', 'DESC');		$result = $this->db->get('tbl_guide_payment');		return $result->result();	}	public function get_all_co_guide_payment()	{		// echo "<pre>";print_r($this->uri->segment(3));exit;		$this->db->where('is_deleted', '0');		$this->db->where('status', '1');		$this->db->where('student_id', $this->uri->segment(2));		$this->db->where('co_guide_id', $this->uri->segment(3));		$this->db->order_by('id', 'DESC');		$result = $this->db->get('tbl_co_guide_payment');		return $result->result();	}	public function get_single_guide_account($student)	{		$this->db->where('is_deleted', '0');		$this->db->where('status', '1');		$this->db->where('id', $student->guide_id);		$result = $this->db->get('tbl_guide_application');		return $result->row();	}	public function get_single_guide_payment()	{		// echo "<pre>";print_r($this->uri->segment(3));exit;		$this->db->where('is_deleted', '0');		$this->db->where('status', '1');		$this->db->where('id', $this->uri->segment(3));		$result = $this->db->get('tbl_guide_payment');		return $result->row();	}	public function get_single_cp_guide_payment()	{		$this->db->where('is_deleted', '0');		$this->db->where('status', '1');		$this->db->where('id', $this->uri->segment(3));		$result = $this->db->get('tbl_co_guide_payment');		return $result->row();	}	// public function get_single_student(){	// 	$this->db->select('tbl_student.*,tbl_id_management.id_name,countries.name as country_name,states.name as state_name,cities.name as city_name,tbl_session.session_name,tbl_faculty.faculty_name,tbl_course.course_name,tbl_stream.stream_name,tbl_course_type.course_type as course_type_name,tbl_center.center_name');	// 	$this->db->where('tbl_student.is_deleted','0');	// 	$this->db->where('tbl_student.id',$this->uri->segment(2));	// 	$this->db->join('tbl_center','tbl_center.id = tbl_student.center_id');	// 	$this->db->join('tbl_course','tbl_course.id = tbl_student.course_id');	// 	$this->db->join('tbl_course_type','tbl_course_type.id = tbl_student.course_type');	// 	$this->db->join('tbl_stream','tbl_stream.id = tbl_student.stream_id');	// 	$this->db->join('tbl_faculty','tbl_faculty.id = tbl_student.faculty_id');	// 	$this->db->join('tbl_session','tbl_session.id = tbl_student.session_id');	// 	$this->db->join('tbl_id_management','tbl_id_management.id = tbl_student.id_type');	// 	$this->db->join('countries','countries.id = tbl_student.country');	// 	$this->db->join('states','states.id = tbl_student.state');	// 	$this->db->join('cities','cities.id = tbl_student.city');	// 	$result = $this->db->get('tbl_student');	// 	return $result->row();	// }	public function get_co_guide_ajax($print)	{		$this->db->join('tbl_guide_application', 'tbl_guide_application.id=tbl_student.co_guide_id');		$this->db->where('tbl_student.is_deleted', '0');		$this->db->where('tbl_student.id', $print->id);		$result = $this->db->get('tbl_student');		return $result->row();	}	public function get_all_assigned_scholar_ajax($length, $start, $search)	{		$this->db->select('tbl_student.*,coguide.name as co_guide_name,coguide.mobile as co_guide_name_mobile,tbl_guide_application.name,tbl_guide_application.mobile as guide_mobile,tbl_stream.stream_name,tbl_session.session_name');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_student.student_name', $search);			$this->db->or_like('tbl_student.enrollment_number', $search);			$this->db->or_like('tbl_guide_application.name', $search);			$this->db->or_like('coguide.name', $search);			$this->db->group_end();		}		$this->db->where("tbl_student.is_deleted", "0");		$this->db->join("tbl_guide_application", "tbl_guide_application.id=tbl_student.guide_id");		$this->db->join("tbl_guide_application as coguide", "coguide.id=tbl_student.co_guide_id", "left");		$this->db->join("tbl_stream", "tbl_stream.id=tbl_student.stream_id");		$this->db->join("tbl_session", "tbl_session.id=tbl_student.session_id");		$this->db->order_by('id', 'DESC');		$this->db->limit($length, $start);		$result = $this->db->get("tbl_student");		return $result->result();	}	public function get_all_assigned_scholar_ajax_count($search)	{		$this->db->select('tbl_student.*,coguide.name as co_guide_name,coguide.mobile as co_guide_name_mobile,tbl_guide_application.name,tbl_guide_application.mobile as guide_mobile,tbl_stream.stream_name,tbl_session.session_name');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_student.student_name', $search);			$this->db->or_like('tbl_student.enrollment_number', $search);			$this->db->or_like('tbl_guide_application.name', $search);			$this->db->or_like('coguide.name', $search);			$this->db->group_end();		}		$this->db->where("tbl_student.is_deleted", "0");		$this->db->join("tbl_guide_application", "tbl_guide_application.id=tbl_student.guide_id");		$this->db->join("tbl_guide_application as coguide", "coguide.id=tbl_student.co_guide_id", "left");		$this->db->join("tbl_stream", "tbl_stream.id=tbl_student.stream_id");		$this->db->join("tbl_session", "tbl_session.id=tbl_student.session_id");		$this->db->order_by('id', 'DESC');		$result = $this->db->get("tbl_student");		return $result->num_rows();	}	public function get_all_assigned_separate_student_ajax($length, $start, $search)	{		$this->db->select('tbl_separate_student.*,coguide.name as co_guide_name,coguide.mobile as co_guide_name_mobile,tbl_guide_application.name,tbl_guide_application.mobile as guide_mobile,tbl_stream.stream_name,tbl_session.session_name');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_separate_student.student_name', $search);			$this->db->or_like('tbl_separate_student.enrollment_number', $search);			$this->db->or_like('tbl_guide_application.name', $search);			$this->db->or_like('coguide.name', $search);			$this->db->group_end();		}		$this->db->where("tbl_separate_student.is_deleted", "0");		$this->db->join("tbl_guide_application", "tbl_guide_application.id=tbl_separate_student.guide_id");		$this->db->join("tbl_guide_application as coguide", "coguide.id=tbl_separate_student.co_guide_id", "left");		$this->db->join("tbl_stream", "tbl_stream.id=tbl_separate_student.stream_id");		$this->db->join("tbl_session", "tbl_session.id=tbl_separate_student.session_id");		$this->db->order_by('id', 'DESC');		$this->db->limit($length, $start);		$result = $this->db->get("tbl_separate_student");		return $result->result();	}	public function get_all_assigned_separate_student_ajax_count($search)	{		$this->db->select('tbl_separate_student.*,coguide.name as co_guide_name,coguide.mobile as co_guide_name_mobile,tbl_guide_application.name,tbl_guide_application.mobile as guide_mobile,tbl_stream.stream_name,tbl_session.session_name');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_separate_student.student_name', $search);			$this->db->or_like('tbl_separate_student.enrollment_number', $search);			$this->db->or_like('tbl_guide_application.name', $search);			$this->db->or_like('coguide.name', $search);			$this->db->group_end();		}		$this->db->where("tbl_separate_student.is_deleted", "0");		$this->db->join("tbl_guide_application", "tbl_guide_application.id=tbl_separate_student.guide_id");		$this->db->join("tbl_guide_application as coguide", "coguide.id=tbl_separate_student.co_guide_id", "left");		$this->db->join("tbl_stream", "tbl_stream.id=tbl_separate_student.stream_id");		$this->db->join("tbl_session", "tbl_session.id=tbl_separate_student.session_id");		$this->db->order_by('id', 'DESC');		$result = $this->db->get("tbl_separate_student");		return $result->num_rows();	}	public function get_co_guide_seperate_student_ajax($print)	{		$this->db->join('tbl_guide_application', 'tbl_guide_application.id=tbl_separate_student.co_guide_id');		$this->db->where('tbl_separate_student.is_deleted', '0');		$this->db->where('tbl_separate_student.id', $print->id);		$result = $this->db->get('tbl_separate_student');		return $result->row();	}	public function get_single_student()	{		$this->db->where('is_deleted', '0');		$this->db->where('id', $this->uri->segment(2));		$result = $this->db->get('tbl_student');		return $result->row();	}	public function get_phd_course_work_list_success_separate_Student($length, $start, $search)	{		$this->db->select('tbl_separate_student_phd_course_work.*,tbl_course.course_name,tbl_stream.stream_name,tbl_center.center_name');		$this->db->where('tbl_separate_student_phd_course_work.is_deleted', '0');		$this->db->where('tbl_separate_student_phd_course_work.payment_status', '1');		$this->db->where('tbl_separate_student_phd_course_work.approve', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_course.course_name', $search);			$this->db->or_like('tbl_stream.stream_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.student_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.father_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.mother_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.date_of_birth', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.gender', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.address', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.email', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.mobile', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.address', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.enrollment_number', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->group_end();		}		$this->db->join("tbl_course", "tbl_course.id=tbl_separate_student_phd_course_work.course_id");		$this->db->join("tbl_stream", "tbl_stream.id=tbl_separate_student_phd_course_work.stream_id");		$this->db->join("tbl_separate_student", "tbl_separate_student.enrollment_number=tbl_separate_student_phd_course_work.enrollment_number");		$this->db->join("tbl_center", "tbl_center.id=tbl_separate_student.center_id");		$this->db->order_by('tbl_separate_student_phd_course_work.id', 'DESC');		$this->db->limit($length, $start);		$result = $this->db->get('tbl_separate_student_phd_course_work');		return $result->result();	}	public function get_phd_course_work_list_success_count_separate_student($search)	{		$this->db->select('tbl_separate_student_phd_course_work.*,tbl_course.course_name,tbl_stream.stream_name,tbl_center.center_name');		$this->db->where('tbl_separate_student_phd_course_work.is_deleted', '0');		$this->db->where('tbl_separate_student_phd_course_work.payment_status', '1');		$this->db->where('tbl_separate_student_phd_course_work.approve', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_course.course_name', $search);			$this->db->or_like('tbl_stream.stream_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.student_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.father_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.mother_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.date_of_birth', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.gender', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.address', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.email', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.mobile', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.address', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.enrollment_number', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->group_end();		}		$this->db->join("tbl_course", "tbl_course.id=tbl_separate_student_phd_course_work.course_id");		$this->db->join("tbl_stream", "tbl_stream.id=tbl_separate_student_phd_course_work.stream_id");		$this->db->join("tbl_separate_student", "tbl_separate_student.enrollment_number=tbl_separate_student_phd_course_work.enrollment_number");		$this->db->join("tbl_center", "tbl_center.id=tbl_separate_student.center_id");		$this->db->order_by('tbl_separate_student_phd_course_work.id', 'DESC');		$result = $this->db->get('tbl_separate_student_phd_course_work');		return $result->num_rows();	}	public function get_phd_course_work_list_fail_seperate_student($length, $start, $search)	{		$this->db->select('tbl_separate_student_phd_course_work.*,tbl_course.course_name,tbl_stream.stream_name,tbl_center.center_name');		$this->db->where('tbl_separate_student_phd_course_work.is_deleted', '0');		$this->db->where('tbl_separate_student_phd_course_work.payment_status', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_course.course_name', $search);			$this->db->or_like('tbl_stream.stream_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.student_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.father_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.mother_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.date_of_birth', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.gender', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.address', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.email', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.mobile', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.pincode', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.address', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.enrollment_number', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->group_end();		}		$this->db->join("tbl_course", "tbl_course.id=tbl_separate_student_phd_course_work.course_id");		$this->db->join("tbl_stream", "tbl_stream.id=tbl_separate_student_phd_course_work.stream_id");		$this->db->join("tbl_separate_student", "tbl_separate_student.enrollment_number=tbl_separate_student_phd_course_work.enrollment_number");		$this->db->join("tbl_center", "tbl_center.id=tbl_separate_student.center_id");		$this->db->order_by('tbl_separate_student_phd_course_work.id', 'DESC');		$this->db->limit($length, $start);		$result = $this->db->get('tbl_separate_student_phd_course_work');		return $result->result();	}	public function get_phd_course_work_list_fail_count_separate_student($search)	{		$this->db->select('tbl_separate_student_phd_course_work.*,tbl_course.course_name,tbl_stream.stream_name,tbl_center.center_name');		$this->db->where('tbl_separate_student_phd_course_work.is_deleted', '0');		$this->db->where('tbl_separate_student_phd_course_work.payment_status', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_course.course_name', $search);			$this->db->or_like('tbl_stream.stream_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.student_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.father_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.mother_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.date_of_birth', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.gender', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.address', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.email', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.mobile', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.address', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.enrollment_number', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->group_end();		}		$this->db->join("tbl_course", "tbl_course.id=tbl_separate_student_phd_course_work.course_id");		$this->db->join("tbl_stream", "tbl_stream.id=tbl_separate_student_phd_course_work.stream_id");		$this->db->join("tbl_separate_student", "tbl_separate_student.enrollment_number=tbl_separate_student_phd_course_work.enrollment_number");		$this->db->join("tbl_center", "tbl_center.id=tbl_separate_student.center_id");		$this->db->order_by('tbl_separate_student_phd_course_work.id', 'DESC');		$result = $this->db->get('tbl_separate_student_phd_course_work');		return $result->num_rows();	}	public function get_single_phd_course_work_payment_detail_separate_student()	{		$this->db->where('tbl_separate_student_phd_course_work.id', $this->uri->segment(2));		$this->db->where('tbl_separate_student_phd_course_work.is_deleted', '0');		$this->db->where('tbl_separate_student_phd_course_work.status', '1');		$result = $this->db->get('tbl_separate_student_phd_course_work');		return $result->row();	}	public function update_course_work_update_payment_separate_student()	{		$this->db->where('id', $this->uri->segment(2));		$this->db->where('is_deleted', '0');		$result = $this->db->get('tbl_separate_student_phd_course_work');		$result = $result->row();		if (!empty($result)) {			$data = array(				"transaction_id" => $this->input->post('transaction_id'),				"payment_mode"   => $this->input->post('payment_mode'),				"payment_date"   => date('Y-m-d', strtotime($this->input->post('payment_date'))),				"payment_status" => $this->input->post('payment_status'),				"payment_ammount" => $this->input->post('total_fees'),				"remark"         => $this->input->post('remark'),			);			$this->db->where("id", $result->id);			$this->db->update("tbl_separate_student_phd_course_work", $data);			return true;		} else {			return false;		}	}	public function approve_course_work_registration_separate_student()	{		$password = rand(100000, 9999999);		$this->db->where('id', $this->uri->segment(2));		$this->db->where('is_deleted', '0');		$result = $this->db->get(' tbl_separate_student_phd_course_work');		$result = $result->row();		if (!empty($result)) {			$data = array(				"username" => $result->enrollment_number,				"password" => $password,				"approve" => '1',			);			$this->db->where("id", $result->id);			$this->db->update("tbl_separate_student_phd_course_work", $data);			/*$this->load->library('email');			$config['protocol'] = 'sendmail';			$config['mailpath'] = '/usr/sbin/sendmail';			$config['mailtype'] = 'html';			$config['charset'] = 'iso-8859-1';			$config['wordwrap'] = TRUE; 			$this->email->initialize($config);			$mail_message = "Dear ".$result->name.",<br>Your application has been approved, below are the password for your approval lettar<br>Link:".base_url()."course_work_exam_login<br>Username:".$result->enrollment_number."<br> Password:".$password."<br>";						$this->email->from('no-reply@tgu.ac.in');			$this->email->to($result->email);			$this->email->subject('Approve Application |THE GLOBAL UNIVERSITY'); 			$this->email->set_mailtype('html');			$message = $mail_message;			$message .="<br>Regards<br>IT Team<br>THE GLOBAL UNIVERSITY<br>Canchipur, near Arunachal Pradesh University, South View. Imphal West, Arunachal Pradesh-795003";						$this->email->message($message); 			if($this->email->send()){  			}else{ 			}*/			return true;		} else {			return false;		}	}	public function get_phd_course_work_list_approved_separate_student($length, $start, $search)	{		$this->db->select('tbl_separate_student_phd_course_work.*,tbl_course.course_name,tbl_stream.stream_name,tbl_center.center_name');		$this->db->where('tbl_separate_student_phd_course_work.is_deleted', '0');		$this->db->where('tbl_separate_student_phd_course_work.payment_status', '1');		$this->db->where('tbl_separate_student_phd_course_work.approve', '1');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_course.course_name', $search);			$this->db->or_like('tbl_stream.stream_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.student_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.father_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.mother_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.date_of_birth', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.gender', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.address', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.email', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.mobile', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.pincode', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.address', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.enrollment_number', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->group_end();		}		$this->db->join("tbl_course", "tbl_course.id=tbl_separate_student_phd_course_work.course_id");		$this->db->join("tbl_stream", "tbl_stream.id=tbl_separate_student_phd_course_work.stream_id");		$this->db->join("tbl_separate_student", "tbl_separate_student.enrollment_number=tbl_separate_student_phd_course_work.enrollment_number");		$this->db->join("tbl_center", "tbl_center.id=tbl_separate_student.center_id");		$this->db->order_by('tbl_separate_student_phd_course_work.id', 'DESC');		$this->db->limit($length, $start);		$result = $this->db->get('tbl_separate_student_phd_course_work');		return $result->result();	}	public function get_phd_course_work_list_approved_count_separate_student($search)	{		$this->db->select('tbl_separate_student_phd_course_work.*,tbl_course.course_name,tbl_stream.stream_name,tbl_center.center_name');		$this->db->where('tbl_separate_student_phd_course_work.is_deleted', '0');		$this->db->where('tbl_separate_student_phd_course_work.payment_status', '1');		$this->db->where('tbl_separate_student_phd_course_work.approve', '1');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_course.course_name', $search);			$this->db->or_like('tbl_stream.stream_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.student_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.father_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.mother_name', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.date_of_birth', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.gender', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.address', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.email', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.mobile', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.pincode', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.address', $search);			$this->db->or_like('tbl_separate_student_phd_course_work.enrollment_number', $search);			$this->db->group_end();		}		$this->db->join("tbl_course", "tbl_course.id=tbl_separate_student_phd_course_work.course_id");		$this->db->join("tbl_stream", "tbl_stream.id=tbl_separate_student_phd_course_work.stream_id");		$this->db->join("tbl_separate_student", "tbl_separate_student.enrollment_number=tbl_separate_student_phd_course_work.enrollment_number");		$this->db->join("tbl_center", "tbl_center.id=tbl_separate_student.center_id");		$this->db->order_by('tbl_separate_student_phd_course_work.id', 'DESC');		$result = $this->db->get('tbl_separate_student_phd_course_work');		return $result->num_rows();	}	public function disapprove_course_work_registration_seperate_student()	{		$this->db->where('id', $this->uri->segment(2));		$this->db->where('is_deleted', '0');		$result = $this->db->get('tbl_separate_student_phd_course_work');		$result = $result->row();		if (!empty($result)) {			$data = array(				"approve" => '0',			);			$this->db->where("id", $result->id);			$this->db->update("tbl_separate_student_phd_course_work", $data);			return true;		} else {			return false;		}	}	public function approve_research_cocument()	{		if ($this->uri->segment(3) == "tbl_thesis") {			$remark_column = "remarks";			$remark_value = "Your Thesis Report  has been approved.";		}		if ($this->uri->segment(3) == "tbl_synopsis") {			$remark_column = "remarks";			$remark_value = " Your synopsis has been approved.";		}		if ($this->uri->segment(3) == "tbl_abstract") {			$remark_column = "remark";			$remark_value = "Your Abstract Report  has been approved.";		}		$data = array(			$this->uri->segment(4) => $this->uri->segment(5),			$remark_column => $remark_value		);		$this->db->where('id', $this->uri->segment(2));		$this->db->update($this->uri->segment(3), $data);		return true;	}	public function get_phd_seperate_student()	{		$this->db->select('tbl_separate_student.*,tbl_session.session_name,tbl_faculty.faculty_name,tbl_course.course_name,tbl_stream.stream_name,tbl_course_type.course_type as course_type_name,tbl_center.center_name');		$this->db->where('tbl_separate_student.is_deleted', '0');		$this->db->where('tbl_separate_student.doc_verified', '1');		$this->db->where('tbl_separate_student.course_id', '23');		$this->db->where('tbl_separate_student.admission_status', '1');		$this->db->join('tbl_center', 'tbl_center.id = tbl_separate_student.center_id');		$this->db->join('tbl_course', 'tbl_course.id = tbl_separate_student.course_id');		$this->db->join('tbl_course_type', 'tbl_course_type.id = tbl_separate_student.course_type');		$this->db->join('tbl_stream', 'tbl_stream.id = tbl_separate_student.stream_id');		$this->db->join('tbl_faculty', 'tbl_faculty.id = tbl_separate_student.faculty_id');		$this->db->join('tbl_session', 'tbl_session.id = tbl_separate_student.session_id');		$result = $this->db->get('tbl_separate_student');		return $result->result();	}	public function get_single_seperate_student()	{		$this->db->where('is_deleted', '0');		$this->db->where('id', $this->uri->segment(2));		$result = $this->db->get('tbl_separate_student');		return $result->row();	}	public function set_assigned_guide_seperate_student()	{		$data = array(			'guide_id' => $this->input->post('guide_name'),			'co_guide_id' => $this->input->post('co_guide_name'),			'guide_fees' => $this->input->post('guide_fees'),			'co_guide_fees' => $this->input->post('co_guide_fees'),		);		$this->db->where('id', $this->input->post('student_name'));		$this->db->update('tbl_separate_student', $data);		return true;	}	public function get_all_guide_payments_blended()	{		$this->db->join('tbl_separate_student', 'tbl_separate_student.id = tbl_guide_payment_blended.student_id');		$this->db->where('tbl_guide_payment_blended.is_deleted', '0');		$this->db->where('tbl_guide_payment_blended.status', '1');		$this->db->where('tbl_guide_payment_blended.guide_id', $this->uri->segment(2));		$result = $this->db->get('tbl_guide_payment_blended');		return $result->result();	}	public function get_all_guide_payment_blended()	{		$this->db->where('is_deleted', '0');		$this->db->where('status', '1');		$this->db->where('student_id', $this->uri->segment(2));		$this->db->order_by('id', 'DESC');		$result = $this->db->get('tbl_guide_payment_blended');		return $result->result();	}	public function get_single_guide_payment_blended()	{		$this->db->where('is_deleted', '0');		$this->db->where('status', '1');		$this->db->where('id', $this->uri->segment(3));		$result = $this->db->get('tbl_guide_payment_blended');		return $result->row();	}	public function set_guide_payment_blended($file)	{		$data = array(			'guide_id' => $this->input->post('guide_id'),			'student_id' => $this->input->post('student_id'),			'transaction_no' => $this->input->post('transaction_id'),			'payment_date' => date("Y-m-d", strtotime($this->input->post('payment_date'))),			'amount' => $this->input->post('total_fees'),			'mode' => $this->input->post('payment_mode'),			'bank' => $this->input->post('bank'),			'remark' => $this->input->post('remark'),			'bank_name' => $this->input->post('bank_name'),			'account_name' => $this->input->post('account_name'),			'account_number' => $this->input->post('guide_account'),			'ifsc_code' => $this->input->post('guide_ifsc'),			'file' => $file,		);		if ($this->input->post('single_payment_id') == '0') {			$date = array('created_on' => date("Y-m-d H:i:s"));			$newArr = array_merge($date, $data);			$this->db->insert('tbl_guide_payment_blended', $newArr);			return 0;		} else {			$this->db->where('id', $this->input->post('single_payment_id'));			$this->db->update('tbl_guide_payment_blended', $data);			return 1;		}	}	public function get_all_co_guide_payments_blended()	{		$this->db->join('tbl_separate_student', 'tbl_separate_student.id = tbl_co_guide_payment_blended.student_id');		$this->db->where('tbl_co_guide_payment_blended.is_deleted', '0');		$this->db->where('tbl_co_guide_payment_blended.status', '1');		$this->db->where('tbl_co_guide_payment_blended.co_guide_id', $this->uri->segment(2));		$result = $this->db->get('tbl_co_guide_payment_blended');		return $result->result();	}	public function get_all_co_guide_payment_blended()	{		$this->db->where('is_deleted', '0');		$this->db->where('status', '1');		$this->db->where('student_id', $this->uri->segment(2));		$this->db->order_by('id', 'DESC');		$result = $this->db->get('tbl_co_guide_payment_blended');		return $result->result();	}	public function get_single_cp_guide_payment_blended()	{		$this->db->where('is_deleted', '0');		$this->db->where('status', '1');		$this->db->where('id', $this->uri->segment(3));		$result = $this->db->get('tbl_co_guide_payment_blended');		return $result->row();	}	public function set_co_guide_payment_blended($file)	{		$data = array(			'co_guide_id' => $this->input->post('co_guide_id'),			'student_id' => $this->input->post('student_id'),			'transaction_no' => $this->input->post('transaction_id'),			'payment_date' => date("Y-m-d", strtotime($this->input->post('payment_date'))),			'amount' => $this->input->post('total_fees'),			'mode' => $this->input->post('payment_mode'),			'remark' => $this->input->post('remark'),			'bank_name' => $this->input->post('bank_name'),			'account_name' => $this->input->post('account_name'),			'account_number' => $this->input->post('guide_account'),			'ifsc_code' => $this->input->post('guide_ifsc'),			'file' => $file,		);		if ($this->input->post('single_payment_id') == '0') {			$date = array('created_on' => date("Y-m-d H:i:s"));			$newArr = array_merge($date, $data);			$this->db->insert('tbl_co_guide_payment_blended', $newArr);			return 0;		} else {			$this->db->where('id', $this->input->post('single_payment_id'));			$this->db->update('tbl_co_guide_payment_blended', $data);			return 1;		}	}	public function get_all_guide_fees_blended()	{		$this->db->where('is_deleted', '0');		$this->db->where('status', '1');		$this->db->where('guide_id', $this->uri->segment(2));		$result = $this->db->get('tbl_separate_student');		return $result->result();	}	public function get_all_co_guide_fees_blended()	{		$this->db->where('is_deleted', '0');		$this->db->where('status', '1');		$this->db->where('co_guide_id', $this->uri->segment(2));		$result = $this->db->get('tbl_separate_student');		return $result->result();	}	public function get_unique_guide_student()	{		$this->db->where('guide_id', $this->input->post('guide_name'));		$this->db->where('id', $this->input->post('student_name'));		if ($this->input->post('id') != "0") {			$this->db->where('id !=', $this->input->post('id'));		}		$this->db->where('tbl_student.is_deleted', '0');		$result = $this->db->get('tbl_student');		$result = $result->num_rows();		echo  $result;		// print_r($result);exit;	}	public function get_unique_guide_co_guide_student()	{		$this->db->where('id', $this->input->post('guide_name'));		$this->db->where('id', $this->input->post('co_guide_name'));		if ($this->input->post('id') != "0") {			$this->db->where('id !=', $this->input->post('id'));		}		$this->db->where('tbl_guide_application.is_deleted', '0');		$result = $this->db->get('tbl_guide_application');		$result = $result->num_rows();		echo  $result;		// print_r($result);exit;	}	public function get_unique_guide_student_separate()	{		// echo "<pre>";print_r($_POST);exit;		$this->db->where('guide_id', $this->input->post('guide_name'));		$this->db->where('id', $this->input->post('student_name'));		if ($this->input->post('id') != "0") {			$this->db->where('id !=', $this->input->post('id'));		}		$this->db->where('is_deleted', '0');		$result = $this->db->get('tbl_separate_student');		echo $result->num_rows();	}	public function get_scholar_details($id)	{		$this->db->select('tbl_student.*,tbl_id_management.id_name,countries.name as country_name,states.name as state_name,cities.name as city_name,tbl_session.session_name,tbl_faculty.faculty_name,tbl_course.course_name,tbl_stream.stream_name,tbl_course_type.course_type as course_type_name,tbl_center.center_name');		$this->db->where('tbl_student.is_deleted', '0');		$this->db->where('tbl_student.verified_status', '1');		$this->db->where('tbl_student.course_id', '23');		$this->db->where('tbl_student.admission_status !=', '0');		$this->db->where('tbl_student.admission_status !=', '2');		$this->db->join('tbl_center', 'tbl_center.id = tbl_student.center_id');		$this->db->join('tbl_course', 'tbl_course.id = tbl_student.course_id');		$this->db->join('tbl_course_type', 'tbl_course_type.id = tbl_student.course_type');		$this->db->join('tbl_stream', 'tbl_stream.id = tbl_student.stream_id');		$this->db->join('tbl_faculty', 'tbl_faculty.id = tbl_student.faculty_id');		$this->db->join('tbl_session', 'tbl_session.id = tbl_student.session_id');		$this->db->join('tbl_id_management', 'tbl_id_management.id = tbl_student.id_type');		$this->db->join('countries', 'countries.id = tbl_student.country');		$this->db->join('states', 'states.id = tbl_student.state');		$this->db->join('cities', 'cities.id = tbl_student.city');		$this->db->where('tbl_student.id', $id);		$result = $this->db->get('tbl_student');		return $result->row();	}	public function get_scholar_extra_details($id)	{		$this->db->where('is_deleted', '0');		$this->db->where('status', '1');		$this->db->where('student_id', $id);		$result = $this->db->get('tbl_scholar_extra_details');		return $result->row();	}	public function get_assigned_guide($id)	{		$this->db->where('id', $id);		$result = $this->db->get('tbl_guide_application');		return $result->row();	}	public function set_scholar_details()	{		$student_details_id = $this->input->post('student_details_id');		$student_id = $this->input->post('student_id');		if ($student_id != "") {			$data = array(				'student_id'						=>	$student_id,				'scholar_type'						=>	$this->input->post('scholar_type'),				'entrance_exam'						=>	$this->input->post('entrance_exam'),				'guide_allocation_process'			=>	$this->input->post('guide_allocation_process'),				'is_regular_teacher'				=>	$this->input->post('is_regular_teacher'),				'scholars_under_guide'				=>	$this->input->post('scholars_under_guide'),				'co_is_regular_teacher'				=>	$this->input->post('co_is_regular_teacher'),				'scholars_under_co_guide'			=>	$this->input->post('scholars_under_co_guide'),				'course_work_start_date'			=>	date('Y-m-d', strtotime($this->input->post('course_work_start_date'))),				'research_proposal_link'			=>	$this->input->post('research_proposal_link'),				'periodical_review_link'			=>	$this->input->post('periodical_review_link'),				'presentation_date'					=>	date('Y-m-d', strtotime($this->input->post('presentation_date'))),				'thesis_submission_date'			=>	date('Y-m-d', strtotime($this->input->post('thesis_submission_date'))),				'examiner'							=>	$this->input->post('examiner'),				'examiner_from'						=>	$this->input->post('examiner_from'),				'plagiarism_check_review_link'		=>	$this->input->post('plagiarism_check_review_link'),				'thesis_examiner_submission_date'	=>	date('Y-m-d', strtotime($this->input->post('thesis_examiner_submission_date'))),				'thesis_examiner_receive_date'		=>	date('Y-m-d', strtotime($this->input->post('thesis_examiner_receive_date'))),				'examiner_thesis_suggestion_link'	=>	$this->input->post('examiner_thesis_suggestion_link'),				'examiner_report_link'				=>	$this->input->post('examiner_report_link'),				'viva_date'							=>	date('Y-m-d', strtotime($this->input->post('viva_date'))),				'viva_report_link'					=>	$this->input->post('viva_report_link'),				'phd_award_date'					=>	date('Y-m-d', strtotime($this->input->post('phd_award_date'))),				'thesis_evidence_link'				=>	$this->input->post('thesis_evidence_link'),				'other_information'					=>	$this->input->post('other_information'),				'course_work_period_from'			=>	$this->input->post('course_work_period_from'),				'course_work_period_to'				=>	$this->input->post('course_work_period_to'),				'course_work_report_type'			=>	$this->input->post('course_work_report_type'),				'research_committee'				=>	$this->input->post('research_committee'),				'research_papers'					=>	$this->input->post('research_papers'),				'provisional_certificate'			=>	$this->input->post('provisional_certificate'),			);			// print_r($student_id);exit();			if ($student_details_id != "") {				$this->db->where('id', $student_details_id);				$this->db->where('student_id', $student_id);				$this->db->update('tbl_scholar_extra_details', $data);				return 1;			} else {				$date = array(					'created_on'	=>	date("Y-m-d H:i:s"),				);				$newArr = array_merge($data, $date);				$this->db->insert('tbl_scholar_extra_details', $newArr);				return 1;			}		} else {			return 0;		}	}	public function check_enrollment_number_phd()	{		$this->db->where('enrollment_number', $this->input->post('enrollment_number'));		$this->db->where('course_id', '23');		$this->db->where('is_deleted', '0');		$this->db->where('center_id', '1');		$result = $this->db->get('tbl_student');		return $result->row();	}	public function get_single_progress_report()	{		$this->db->where('student_id', $this->uri->segment(2));		$this->db->where('is_deleted', '0');		$result = $this->db->get('tbl_student_progree_report');		return $result->row();	}	public function upload_progress_report_one($file)	{		$this->db->where('student_id', $this->input->post('student_id'));		$exist = $this->db->get('tbl_student_progree_report');		$exist = $exist->row();		if (empty($exist)) {			$data = array(				'student_id'	    => $this->input->post('student_id'),				'report_one'	    => $file,				'created_on'		=> date("Y-m-d H:i:s")			);			$this->db->insert('tbl_student_progree_report', $data);		} else {			$data = array(				'report_one'	    => $file,			);			$this->db->where('student_id', $this->input->post('student_id'));			$this->db->update('tbl_student_progree_report', $data);		}		$profile = $this->Admin_model->get_profile();		$log_description = $profile->first_name . " " . $profile->last_name . " has uploaded progress report one on " . date("d/m/Y");		$log = array(			'user_id' 		=> $this->session->userdata('admin_id'),			'student_id' 	=> $this->input->post('student_id'),			'description' 	=> $log_description,			'date' 			=> date("Y-m-d"),			'created_on' 	=> date("Y-m-d H:i:s"),		);		$this->Setting_model->set_log($log);		return true;	}	public function upload_progress_report_two($file)	{		$this->db->where('student_id', $this->input->post('student_id'));		$exist = $this->db->get('tbl_student_progree_report');		$exist = $exist->row();		if (empty($exist)) {			$data = array(				'student_id'	    => $this->input->post('student_id'),				'report_two'	    => $file,				'created_on'		=> date("Y-m-d H:i:s")			);			$this->db->insert('tbl_student_progree_report', $data);		} else {			$data = array(				'report_two'	    => $file,			);			$this->db->where('student_id', $this->input->post('student_id'));			$this->db->update('tbl_student_progree_report', $data);		}		$profile = $this->Admin_model->get_profile();		$log_description = $profile->first_name . " " . $profile->last_name . " has uploaded progress report two on " . date("d/m/Y");		$log = array(			'user_id' 		=> $this->session->userdata('admin_id'),			'student_id' 	=> $this->input->post('student_id'),			'description' 	=> $log_description,			'date' 			=> date("Y-m-d"),			'created_on' 	=> date("Y-m-d H:i:s"),		);		$this->Setting_model->set_log($log);		return true;	}	public function upload_progress_report_three($file)	{		$this->db->where('student_id', $this->input->post('student_id'));		$exist = $this->db->get('tbl_student_progree_report');		$exist = $exist->row();		if (empty($exist)) {			$data = array(				'student_id'	    => $this->input->post('student_id'),				'report_three'	=> $file,				'created_on'		=> date("Y-m-d H:i:s")			);			$this->db->insert('tbl_student_progree_report', $data);		} else {			$data = array(				'report_three'	    => $file,			);			$this->db->where('student_id', $this->input->post('student_id'));			$this->db->update('tbl_student_progree_report', $data);		}		$profile = $this->Admin_model->get_profile();		$log_description = $profile->first_name . " " . $profile->last_name . " has uploaded progress report three on " . date("d/m/Y");		$log = array(			'user_id' 		=> $this->session->userdata('admin_id'),			'student_id' 	=> $this->input->post('student_id'),			'description' 	=> $log_description,			'date' 			=> date("Y-m-d"),			'created_on' 	=> date("Y-m-d H:i:s"),		);		$this->Setting_model->set_log($log);		return true;	}	public function upload_progress_report_four($file)	{		$this->db->where('student_id', $this->input->post('student_id'));		$exist = $this->db->get('tbl_student_progree_report');		$exist = $exist->row();		if (empty($exist)) {			$data = array(				'student_id'	    => $this->input->post('student_id'),				'report_four'	=> $file,				'created_on'		=> date("Y-m-d H:i:s")			);			$this->db->insert('tbl_student_progree_report', $data);		} else {			$data = array(				'report_four'	    => $file,			);			$this->db->where('student_id', $this->input->post('student_id'));			$this->db->update('tbl_student_progree_report', $data);		}		$profile = $this->Admin_model->get_profile();		$log_description = $profile->first_name . " " . $profile->last_name . " has uploaded progress report four on " . date("d/m/Y");		$log = array(			'user_id' 		=> $this->session->userdata('admin_id'),			'student_id' 	=> $this->input->post('student_id'),			'description' 	=> $log_description,			'date' 			=> date("Y-m-d"),			'created_on' 	=> date("Y-m-d H:i:s"),		);		$this->Setting_model->set_log($log);		return true;	}	public function upload_progress_report_five($file)	{		$this->db->where('student_id', $this->input->post('student_id'));		$exist = $this->db->get('tbl_student_progree_report');		$exist = $exist->row();		if (empty($exist)) {			$data = array(				'student_id'	    => $this->input->post('student_id'),				'report_five'	=> $file,				'created_on'		=> date("Y-m-d H:i:s")			);			$this->db->insert('tbl_student_progree_report', $data);		} else {			$data = array(				'report_five'	    => $file,			);			$this->db->where('student_id', $this->input->post('student_id'));			$this->db->update('tbl_student_progree_report', $data);		}		$profile = $this->Admin_model->get_profile();		$log_description = $profile->first_name . " " . $profile->last_name . " has uploaded progress report five on " . date("d/m/Y");		$log = array(			'user_id' 		=> $this->session->userdata('admin_id'),			'student_id' 	=> $this->input->post('student_id'),			'description' 	=> $log_description,			'date' 			=> date("Y-m-d"),			'created_on' 	=> date("Y-m-d H:i:s"),		);		$this->Setting_model->set_log($log);		return true;	}	public function upload_progress_report_six($file)	{		$this->db->where('student_id', $this->input->post('student_id'));		$exist = $this->db->get('tbl_student_progree_report');		$exist = $exist->row();		if (empty($exist)) {			$data = array(				'student_id'	    => $this->input->post('student_id'),				'report_six'		=> $file,				'created_on'		=> date("Y-m-d H:i:s")			);			$this->db->insert('tbl_student_progree_report', $data);		} else {			$data = array(				'report_six'	    => $file,			);			$this->db->where('student_id', $this->input->post('student_id'));			$this->db->update('tbl_student_progree_report', $data);		}		$profile = $this->Admin_model->get_profile();		$log_description = $profile->first_name . " " . $profile->last_name . " has uploaded progress report six on " . date("d/m/Y");		$log = array(			'user_id' 		=> $this->session->userdata('admin_id'),			'student_id' 	=> $this->input->post('student_id'),			'description' 	=> $log_description,			'date' 			=> date("Y-m-d"),			'created_on' 	=> date("Y-m-d H:i:s"),		);		$this->Setting_model->set_log($log);		return true;	}}