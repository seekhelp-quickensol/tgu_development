<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed'); class Payment_model extends CI_Model { 	public function set_direct_payment(){		$data = array(			'registration_number'=> $this->input->post('registration_number'),			'name' 				=> $this->input->post('name'),			'mobile_number' 	=> $this->input->post('mobile_number'),			'email' 			=> $this->input->post('email'),			'address' 			=> $this->input->post('address'),			'pincode' 			=> $this->input->post('pincode'),			'pay_for' 			=> $this->input->post('pay_for'),			'amount' 			=> $this->input->post('amount'),			'payment_date' 		=> date("Y-m-d"),			'created_on' 		=> date("Y-m-d H:i:s"),		);		$this->db->insert('tbl_direct_payment',$data);		$id = $this->db->insert_id();		redirect('direct_payment/'.base64_encode($id));	}	public function get_direct_payment(){		$this->db->where('id',base64_decode($this->uri->segment(2)));		$result = $this->db->get('tbl_direct_payment');		return $result->row();	}	public function get_phd_registration_fees(){		$this->db->where('id',base64_decode($this->uri->segment(2)));		$result = $this->db->get('tbl_phd_registration_form');		return $result->row();	}	public function update_freecharge_txn(){		$id = $this->input->GET('id');		if(isset($_REQUEST['status'])){			if($_REQUEST['status'] == 'COMPLETED'){				$data = array(					'payment_id' => $_REQUEST['txnId'],					'reference_number' => $_REQUEST['merchantTxnId'],					'amount' => $_REQUEST['amount'],					'payment_status' => '1',				);				$this->db->where('id',$id);				$this->db->update('tbl_direct_payment',$data);			}else{				$data = array(					'payment_id' => $_REQUEST['txnId'],					'reference_number' => $_REQUEST['merchantTxnId'],					'amount' => $_REQUEST['amount'],					'payment_status' => '0',				);				$this->db->where('id',$id);				$this->db->update('tbl_direct_payment',$data);			}					$this->db->where('id',$id);			$result = $this->db->get('tbl_direct_payment');			return $result->row();		}else{			redirect(base_url());		}	}	public function update_admission_payment(){		$id = $this->input->GET('id');		$this->db->where('student_id',$id);		$this->db->order_by('id','DESC');		$fees = $this->db->get('tbl_student_fees');		$fees = $fees->row();		if(isset($_REQUEST['status'])){			if($_REQUEST['status'] == 'COMPLETED'){ 				$data = array(					'transaction_id' 	=> $_REQUEST['txnId'],					'payment_status' 	=> '1',				);				$this->db->where('id',$fees->id);				$this->db->update('tbl_student_fees',$data);												$this->db->where('id',$id);				$student_details = $this->db->get("tbl_student");				$student_details = $student_details->row();				$this->db->where('id',$student_details->faculty_id);				$faculty = $this->db->get('tbl_faculty');				$faculty = $faculty->row();				$this->db->where('faculty',$student_details->faculty_id);				$this->db->where('course',$student_details->course_id);				$this->db->where('stream',$student_details->stream_id);				$this->db->where('is_deleted','0');				$this->db->where('status','1');				$course_code = $this->db->get('tbl_course_stream_relation');				$course_code = $course_code->row();				$enrollment = "20100";				if(!empty($faculty)){					$enrollment .= $faculty->faculty_code;				}				if(!empty($course_code)){					$enrollment .= $course_code->course_code;				}				$enrollment .=$student_details->id;								$enorlled_data = array(					'admission_status' 	=> '1',					'enrollment_number' => $enrollment,					'enrollment_date' 	=> date("Y-m-d"),				);				$this->db->where('id',$id);				$this->db->update("tbl_student",$enorlled_data); 			}else{				$data = array(					'transaction_id' =>  $_REQUEST['txnId'],				);				$this->db->where('id',$fees->id);				$this->db->update('tbl_student_fees',$data);			}		 			$this->db->where('id',$id);			$result = $this->db->get('tbl_student');			return $result->row();		}else{			redirect(base_url());		}	}		public function update_phd_payment(){		$id = $this->input->GET('id');		if(isset($_REQUEST['status'])){			if($_REQUEST['status'] == 'COMPLETED'){				$data = array(					'payment_id' => $_REQUEST['txnId'],					'payment_status' => '1',				);				$this->db->where('id',$id);				$this->db->update('tbl_phd_registration_form',$data);			}else{				$data = array(					'payment_id' => $_REQUEST['txnId'],					'payment_status' => '0',				);				$this->db->where('id',$id);				$this->db->update('tbl_phd_registration_form',$data);			}					$this->db->where('id',$id);			$result = $this->db->get('tbl_phd_registration_form');			return $result->row();		}else{			redirect(base_url());		}	}		public function get_current_fees($id){		$this->db->where('student_id',$id);		$this->db->order_by('id','DESC');		$result = $this->db->get('tbl_student_fees');		return $result->row();	}		public function update_exam_payment(){		$id = $this->input->GET('id');		if(isset($_REQUEST['status'])){			if($_REQUEST['status'] == 'COMPLETED'){				$data = array(					'transaction_id' => $_REQUEST['txnId'],					'payment_status' => '1',				);				$this->db->where('id',$id);				$this->db->update('tbl_student_fees',$data);								$this->db->where('id',$id);				$fee_data = $this->db->get('tbl_student_fees');				$fee_data = $fee_data->row();				$exam_data = array(					'payment_id' 		=> $_REQUEST['txnId'],					'payment_status'	=> '1',					'exam_status'		=> '0',				);				$this->db->where('id',$fee_data->examination_id);				$this->db->update('tbl_examination_form',$exam_data);			}else{				$data = array(					'transaction_id' => $_REQUEST['txnId'],					'payment_status' => '0',				);				$this->db->where('id',$id);				$this->db->update('tbl_student_fees',$data);			}					$this->db->where('id',$id);			$result = $this->db->get('tbl_student_fees');			return $result->row();		}else{			redirect(base_url());		}	}	public function update_phd_course_work_payment(){			if(isset($_REQUEST['status'])){				if($_REQUEST['status'] == 'COMPLETED'){ 					$data = array(						'transaction_id' 	=> $_REQUEST['txnId'],						'payment_status' 	=> '1',					);				$this->db->where('id',$this->input->GET('id'));				$this->db->update('tbl_phd_course_work',$data);			}		}		$this->db->select("tbl_phd_course_work.*,countries.name as country_name,states.name as state_name,cities.name as city_name,tbl_course.course_name,tbl_stream.stream_name");		$this->db->where("tbl_phd_course_work.id",$this->input->GET('id'));		$this->db->join("countries","countries.id=tbl_phd_course_work.country_id");		$this->db->join("states","states.id=tbl_phd_course_work.state_id");		$this->db->join("cities","cities.id=tbl_phd_course_work.city_id");		$this->db->join("tbl_course","tbl_course.id=tbl_phd_course_work.course_id");		$this->db->join("tbl_stream","tbl_stream.id=tbl_phd_course_work.stream_id");		$result = $this->db->get("tbl_phd_course_work");		return $result->row();	}    public function update_document_verification_payment(){		if(isset($_REQUEST['status'])){			if($_REQUEST['status'] == 'COMPLETED'){ 				$data = array(					'transaction_id' 	=> $_REQUEST['txnId'],					'payment_status' 	=> '1',				);				$this->db->where('id',$this->input->GET('id'));				$this->db->update('tbl_document_verification',$data);			}			$this->db->where("tbl_document_verification.is_deleted","0");			$this->db->where("tbl_document_verification.status","1");			$this->db->where("tbl_document_verification.id",$this->input->GET('id'));			$document_verification_result = $this->db->get('tbl_document_verification')->row();			$this->db->where("tbl_document_verification_data.is_deleted","0");			$this->db->where("tbl_document_verification_data.status","1");			$this->db->where("tbl_document_verification_data.document_verification_rel",$this->input->GET('id'));			$document_verification_result_data = $this->db->get('tbl_document_verification_data')->result();			$email_text = `					<div>						dear Admin, <br>						You received one document verification enquery						<br>						name : `.$document_verification_result->name.`<br>						address : `.$document_verification_result->address.`<br>						city : `.$document_verification_result->city.`<br>						mobile_number : `.$document_verification_result->mobile_number.`<br>						email : `.$document_verification_result->email.`<br>						student_name : `.$document_verification_result->student_name.`<br>						enrollment_number : `.$document_verification_result->enrollment_number.`<br>						passing_year : `.$document_verification_result->passing_year.`<br>						course_name : `.$document_verification_result->course_name.`<br>						query : `.$document_verification_result->query.`<br>						date : `.$document_verification_result->created_on.`<br>					</div>					<h3>Please find the documents below.</h3>			`;			foreach ($document_verification_result_data as $files) {				$email_text .= '<br><a href="'.base_url("uploads/document_verification/".$files->document).'"> '.$files->document_name.'</a>'; 			}             $to = array(        		"email" => 'info@theglobaluniversity.edu.in',        		"name" => 'TGU Verification',        	);        	$subject = 'Document Verification |'.no_reply_name;                $this->Admin_model->send_send_blue($to,$subject,$email_text);            			// sending email             /*			$this->load->library('email');			$config['protocol'] = 'sendmail';			$config['mailpath'] = '/usr/sbin/sendmail';			$config['charset'] = 'iso-8859-1';			$this->email->initialize($config);			$this->email->from($document_verification_result->email, $document_verification_result->student_name);			$this->email->to('info@theglobaluniversity.edu.in');			$this->email->set_mailtype('HTML');			$this->email->subject('Document Verification');			$this->email->message($email_text);			$this->email->send();*/		}		return $document_verification_result;	}		public function get_center_payment_details(){		$this->db->select('tbl_center_payment.id as fees_id,tbl_center_payment.center_id,tbl_center_payment.amount,tbl_center.*');		$this->db->where('tbl_center_payment.id',base64_decode($this->uri->segment(3)));		$this->db->join('tbl_center','tbl_center.id = tbl_center_payment.center_id');		$fees = $this->db->get('tbl_center_payment');		return $fees->row();	}} 