<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed'); class Course_work_model extends CI_Model { 	function __construct(){    	parent::__construct();    }	public function check_couse_work_login(){		$this->db->where('username',$this->input->post('username'));		$this->db->where('password',$this->input->post('student_password'));		$this->db->where('payment_status','1');		$result = $this->db->get('tbl_phd_course_work');		$result = $result->row();		// echo "<pre>";print_r($result);exit;		if(!empty($result)){			$data = array(				'stud_id'       => $result->id,				'student_email' => $result->email,				'student_name'  => $result->student_name,				'stream_id'     => $result->stream_id,			);				$this->session->set_userdata($data);			return true;		}else{			return false;		}	}	public function get_course_work_examination_list(){		$this->db->select('exam_id');		$this->db->where('student_id',$this->session->userdata('stud_id'));		$this->db->where('is_deleted','0');		$this->db->where('status','1');		$exist_exam=$this->db->get('tbl_course_work_exam_student');		$exist_exam=$exist_exam->result();		// echo "<pre>";print_r($exist_exam);exit;		$exam_id=array();		foreach($exist_exam as $exist_exam_res){			$exam_id[]=$exist_exam_res->exam_id;		}		// print_r($exam_id);exit;		$stream_id = $this->session->userdata('stream_id');		//echo $stream_id;exit();		if(!empty($exam_id)){		    $this->db->where_not_in('id',$exam_id);		}		$this->db->where('is_deleted','0');		$this->db->where('status','1');		$this->db->where('exam_type','2');		$this->db->where('exam_date',date('Y-m-d'));				$this->db->where('stream',$stream_id);			$result_one = $this->db->get('tbl_course_work_exam');		$result_one = $result_one->result();			    if(!empty($exam_id)){		    $this->db->where_not_in('id',$exam_id);		}		$this->db->where('is_deleted','0');		$this->db->where('status','1');		$this->db->where('exam_type','1');		$this->db->where('exam_date',date('Y-m-d'));					$result_two = $this->db->get('tbl_course_work_exam');		$result_two = $result_two->result();				$result = array_merge($result_one,$result_two);		return $result;		// echo"<pre>";		// print_r($result);	}		public function get_appeared_course_work_exam_list(){        $this->db->select('tbl_course_work_exam_student.exam_date,tbl_course_work_exam.exam_name');		$this->db->where('tbl_course_work_exam_student.is_deleted','0');		$this->db->where('tbl_course_work_exam_student.status','1');		$this->db->where('tbl_course_work_exam_student.student_id',$this->session->userdata('stud_id'));		$this->db->join('tbl_course_work_exam','tbl_course_work_exam.id=tbl_course_work_exam_student.exam_id');		$result = $this->db->get('tbl_course_work_exam_student');		return $result->result();		// echo"<pre>";		// print_r($result);	}	public function get_score_of_student($student_email,$exam_id){		$this->db->select('score');		$this->db->where('student_email',$student_email);		$this->db->where('test_id',$exam_id);		$result = $this->db->get('tbl_course_work_ent_scores');		return $result->row();	}	public function get_question_paper(){        // print_r($row);exit();          $this->db->where('id',$this->uri->segment(2));        $exam_res = $this->db->get('tbl_course_work_exam');        $exam_res = $exam_res->row();        if(!empty($exam_res)){    	    $this->db->where('course_work_data_id',$this->uri->segment(2));    		$this->db->where('status','1');    		$this->db->where('is_deleted','0');    		$this->db->order_by('id','RANDOM');    		$this->db->limit($exam_res->no_of_question,0);    		$result_1 = $this->db->get('tbl_course_work_question');    		$result_1 = $result_1->result();			// echo "<pre>";print_r($result_1);exit;    		return $result_1;        }	}	public function get_test_title(){		$this->db->where('id',$this->uri->segment(2));		$result = $this->db->get('tbl_course_work_exam');		if($result->num_rows() > 1){			return "";		}else{			return $result->row()->exam_name;		}	}	public function get_test_time(){	    $this->db->where('id',$this->uri->segment(2));		$result = $this->db->get('tbl_course_work_exam');		if($result->num_rows() > 1){			return "";		}else{			return $result->row();		}	}	public function submit_save_test_answers($test_no){		// echo"<pre>";		// print_r($_POST);exit();		$exam_data =array(			'exam_id'=>$this->uri->segment(2),			'student_id'=>$this->session->userdata('stud_id'),			'exam_date'=> date('Y-m-d'),			'score'=>'0',			'created_on'=> date("Y-m-d H:i:s"),		);		$this->db->insert('tbl_course_work_exam_student',$exam_data);         $store_exam_id= $this->db->insert_id();         $total_score=0;		$question_name=$this->input->post('question_name');		$question_detail= array();		if(!empty($question_name)){    		$a=0;    		for($q=0; $q < count($question_name); $q++){    			$this->db->where('id',$question_name[$q]);    			$this->db->where('correct_ans',$this->input->post('question_'.$question_name[$q]));    			$right_ans=$this->db->get('tbl_course_work_question');    			$right_ans=$right_ans->num_rows();    			if( $right_ans==1){    				 $total_score =$total_score+1;    			}     			$question_detail[] = array(                     'exam_id'=> $this->uri->segment(2) ,                     'student_id'=> $this->session->userdata('stud_id') ,                     'question_id'=> $question_name[$q],                     'correct_answer'=>$this->input->post('question_'.$question_name[$q]) ,                     'created_on'=> date("Y-m-d H:i:s"),    			);    $a++;    		}		}		// echo"<pre>";		// print_r($question_detail);exit();    if(empty($question_detail)){    redirect('thankyou-submission');            }		$this->db->insert_batch('tbl_course_work_exam_details',$question_detail);		$update_score=array(			'score'=> $total_score,		);		$this->db->where('id', $store_exam_id);		$this->db->update('tbl_course_work_exam_student',$update_score);	}		public function get_question_ids_of_test($test){		$this->db->select('id');		$this->db->where('course_work_data_id',$test);		$this->db->where('status','1');		$result = $this->db->get('tbl_course_work_question');		return $result->result();	}	public function get_question_id_ans($test_no){		$this->db->select('id,correct_ans');		$this->db->where('test_id',$test_no);		$this->db->where('status','1');		$result = $this->db->get('tbl_test_course_work_students');		return $result->result();	}} 