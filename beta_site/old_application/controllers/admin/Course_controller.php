<?php if (! defined('BASEPATH')) exit('No direct script access allowed');class Course_controller extends CI_Controller{	public function __construct()	{		parent::__construct();		$this->is_logged();		$this->check_access();	}	public function is_logged()	{		if ($this->session->userdata('admin_id') == "") {			redirect('erp-access');		}	}	public function direct_fee_list()	{		$data['fees'] = $this->Course_model->direct_fee_list();		$this->load->view('admin/direct_fees_list', $data);	}	public function check_access()	{		if ($this->session->userdata('admin_id') != "1") {			$access = $this->Setting_model->get_user_privilege_link();			if (!in_array($this->uri->segment(1), $access)) {				$this->session->set_flashdata('message', 'Sorry! You dont have access to this module!');				redirect(base_url());			}		}	}	public function manage_course()	{		$this->form_validation->set_rules('course_name', 'course name', 'required');		if ($this->form_validation->run() === FALSE) {			$data['single'] = $this->Course_model->get_single_course();			$this->load->view('admin/manage_course', $data);		} else {			$photo = '';			if ($_FILES['userfile']['name'] != "") {				$photo = $this->Digitalocean_model->upload_photo($filename = "userfile", $path = "images/course/");				/*$tmp = explode('.', $_FILES['userfile']['name']);				$ext = end($tmp);				$config = array(					'upload_path' 	=> "images/course/",					'allowed_types' => "*",					'encrypt_name'	=> TRUE,				);							$this->upload->initialize($config);				if($this->upload->do_upload('userfile')){					$data = $this->upload->data();									$photo = $data['file_name'];					}else{ 					$error = array('error' => $this->upload->display_errors());						$this->upload->display_errors();				}*/			}			$slider_image = '';			if ($_FILES['slider_image']['name'] != "") {				$slider_image = $this->Digitalocean_model->upload_photo($filename = "slider_image", $path = "images/course/");				/*$tmp = explode('.', $_FILES['slider_image']['name']);				$ext = end($tmp);				$config = array(					'upload_path' 	=> "images/course/",					'allowed_types' => "*",					'encrypt_name'	=> TRUE,				);							$this->upload->initialize($config);				if($this->upload->do_upload('slider_image')){					$data = $this->upload->data();									$slider_image = $data['file_name'];					}else{ 					$error = array('error' => $this->upload->display_errors());						$this->upload->display_errors();				}*/			}			$result = $this->Course_model->set_course($photo, $slider_image);			if ($result == "0") {				$this->session->set_flashdata('success', 'Course added successfully');			} else {				$this->session->set_flashdata('success', 'Course updated successfully');			}			redirect('manage_course');		}	}	public function manage_course_faq()	{		$this->form_validation->set_rules('course_id', 'course name', 'required');		if ($this->form_validation->run() === FALSE) {			$data['single'] = $this->Course_model->get_single_faq();			$data['faq'] = $this->Course_model->get_all_faq();			$data['course'] = $this->Course_model->get_single_course();			$this->load->view('admin/manage_course_faq', $data);		} else {			$result = $this->Course_model->set_course_faq();			if ($result == "0") {				$this->session->set_flashdata('success', 'Course added successfully');			} else {				$this->session->set_flashdata('success', 'Course updated successfully');			}			redirect('manage_course_faq/' . $this->input->post('course_id'));		}	}	public function manage_stream()	{		$this->form_validation->set_rules('stream_name', 'stream name', 'required');		if ($this->form_validation->run() === FALSE) {			$data['single'] = $this->Course_model->get_single_stream();			$this->load->view('admin/manage_stream', $data);		} else {			$result = $this->Course_model->set_stream();			if ($result == "0") {				$this->session->set_flashdata('success', 'Stream added successfully');			} else {				$this->session->set_flashdata('success', 'Stream updated successfully');			}			redirect('manage_stream');		}	}	public function manage_faculty()	{		$this->form_validation->set_rules('faculty_name', 'faculty name', 'required');		if ($this->form_validation->run() === FALSE) {			$data['single'] = $this->Course_model->get_single_faculty();			$this->load->view('admin/manage_faculty', $data);		} else {			$result = $this->Course_model->set_faculty();			if ($result == "0") {				$this->session->set_flashdata('success', 'Faculty added successfully');			} else {				$this->session->set_flashdata('success', 'Faculty updated successfully');			}			redirect('manage_faculty');		}	}	public function manage_session()	{		$this->form_validation->set_rules('session_name', 'session name', 'required');		if ($this->form_validation->run() === FALSE) {			$data['single'] = $this->Course_model->get_single_session();			$this->load->view('admin/manage_session', $data);		} else {			$result = $this->Course_model->set_session();			if ($result == "0") {				$this->session->set_flashdata('success', 'Session added successfully');			} else {				$this->session->set_flashdata('success', 'Session updated successfully');			}			redirect('manage_session');		}	}	public function manage_course_type()	{		$this->form_validation->set_rules('course_type', 'course type', 'required');		if ($this->form_validation->run() === FALSE) {			$data['single'] = $this->Course_model->get_single_course_type();			$this->load->view('admin/manage_course_type', $data);		} else {			$result = $this->Course_model->set_course_type();			if ($result == "0") {				$this->session->set_flashdata('success', 'Category added successfully');			} else {				$this->session->set_flashdata('success', 'Category updated successfully');			}			redirect('manage_course_type');		}	}	public function course_stream_relation()	{		$this->form_validation->set_rules('course', 'course', 'required');		if ($this->form_validation->run() === FALSE) {			$data['single'] = $this->Course_model->get_single_course_stream_relation();			$data['course_type'] = $this->Course_model->get_active_couse_type();			$data['faculty'] = $this->Course_model->get_active_faculty();			$data['course'] = $this->Course_model->get_active_course();			$data['stream'] = $this->Course_model->get_active_stream();			$this->load->view('admin/course_stream_relation', $data);		} else {			$photo = '';			if ($_FILES['userfile']['name'] != "") {				$photo = $this->Digitalocean_model->upload_photo($filename = "userfile", $path = "images/course/");				/*$tmp = explode('.', $_FILES['userfile']['name']);				$ext = end($tmp);				$config = array(					'upload_path' 	=> "images/course/",					'allowed_types' => "*",					'encrypt_name'	=> TRUE,				);							$this->upload->initialize($config);				if($this->upload->do_upload('userfile')){					$data = $this->upload->data();									$photo = $data['file_name'];					}else{ 					$error = array('error' => $this->upload->display_errors());						$this->upload->display_errors();				}*/			}			$slider_image = '';			if ($_FILES['slider_image']['name'] != "") {				$slider_image = $this->Digitalocean_model->upload_photo($filename = "slider_image", $path = "images/course/");				/*$tmp = explode('.', $_FILES['slider_image']['name']);				$ext = end($tmp);				$config = array(					'upload_path' 	=> "images/course/",					'allowed_types' => "*",					'encrypt_name'	=> TRUE,				);							$this->upload->initialize($config);				if($this->upload->do_upload('slider_image')){					$data = $this->upload->data();									$slider_image = $data['file_name'];					}else{ 					$error = array('error' => $this->upload->display_errors());						$this->upload->display_errors();				}*/			}			$result = $this->Course_model->set_course_stream_relation($photo, $slider_image);			if ($result == "0") {				$this->session->set_flashdata('success', 'Relation added successfully');			} else {				$this->session->set_flashdata('success', 'Relation updated successfully');			}			redirect('course_stream_relation');		}	}	public function list_course_stream_relation()	{		$this->load->view('admin/list_course_stream_relation');	}	public function manage_fees()	{		$this->form_validation->set_rules('course', 'course', 'required');		if ($this->form_validation->run() === FALSE) {			$data['single'] = $this->Course_model->get_single_course_stream_fees();			$data['session'] = $this->Course_model->get_all_session();			$data['course'] = $this->Course_model->get_all_course_stream_relation();			$this->load->view('admin/manage_fees', $data);		} else {			$result = $this->Course_model->set_course_stream_fees();			if ($result == "0") {				$this->session->set_flashdata('success', 'Fees added successfully');			} else {				$this->session->set_flashdata('success', 'Fees updated successfully');			}			redirect('manage_fees');		}	}	public function list_manage_fees()	{		$this->load->view('admin/list_manage_fees');	}	public function manage_subject()	{		$this->form_validation->set_rules('course', 'course', 'required');		if ($this->form_validation->run() === FALSE) {			$data['single'] = $this->Course_model->get_single_course_stream_relation();			$data['session'] = $this->Course_model->get_all_session();			$data['course'] = $this->Course_model->get_all_course_stream_relation();			// echo "<pre>";print_r($data['course']);exit;			$this->load->view('admin/manage_subject', $data);		} else {			if ($this->input->post('upload') == "Upload") {				$store_data = array();				$stream = $this->input->post('stream');				$exp = explode("@@@", $stream);				$this->load->library('excel');				if (isset($_FILES["userfile"]["name"])) {					$path = $_FILES["userfile"]["tmp_name"];					$object = PHPExcel_IOFactory::load($path);					// echo "<pre>";print_r($object->getWorksheetIterator());exit;					foreach ($object->getWorksheetIterator() as $worksheet) {						$highestRow = $worksheet->getHighestRow();						$highestColumn = $worksheet->getHighestColumn();						for ($row = 2; $row <= $highestRow; $row++) {							if ($worksheet->getCellByColumnAndRow(1, $row)->getValue() != '') {								$subject_code 			= $worksheet->getCellByColumnAndRow(1, $row)->getValue();								$subject_name 			= $worksheet->getCellByColumnAndRow(2, $row)->getValue();								$subject_type 			= $worksheet->getCellByColumnAndRow(3, $row)->getValue();								$intrnal		 		= $worksheet->getCellByColumnAndRow(4, $row)->getValue();								$external 				= $worksheet->getCellByColumnAndRow(5, $row)->getValue();								$credit 				= $worksheet->getCellByColumnAndRow(6, $row)->getValue();								if ($subject_type == "") {									$subject_type = '0';								}								if ($subject_type == "0") {									$subject_type = '0';								}								if ($subject_type == "1") {									$subject_type = '1';								} else {									$subject_type = '0';								}								$store_data[] = array(									'course' 			=> $this->input->post('course'),									'stream'		 	=> $exp[1],									'year_sem' 			=> $this->security->xss_clean($this->input->post('year_sem')),									'mode' 				=> $this->security->xss_clean($this->input->post('course_mode')),									'subject_code' 		=> $subject_code,									'subject_name' 		=> $subject_name,									'subject_type' 		=> $subject_type,									'internal_marks' 	=> $intrnal,									'external_mark' 	=> $external,									'credit' 			=> $credit,									'center_id' 		=> '1',									'created_on' 		=> date("Y-m-d H:i:s"),								);							}							//echo "<pre>";print_r($store_data);exit;						}					}					// echo "<pre>";print_r($store_data);exit;					if (!empty($store_data)) {						$this->Course_model->insert_batch_subject($store_data);						$this->session->set_flashdata('success', 'Subject added successfully');					}				}			} else {				$result = $this->Course_model->set_subject();				if ($result == "0") {					$this->session->set_flashdata('success', 'Subject added successfully');				} else {					$this->session->set_flashdata('success', 'Subject updated successfully');				}			}			redirect('manage_subject');		}	}	public function edit_subject()	{		$this->form_validation->set_rules('course', 'course', 'required');		if ($this->form_validation->run() === FALSE) {			$data['single'] = $this->Course_model->get_single_subject();			$data['session'] = $this->Course_model->get_all_session();			$data['course'] = $this->Course_model->get_all_course_stream_relation();			$this->load->view('admin/edit_subject', $data);		} else {			$result = $this->Course_model->set_edit_subject();			if ($result == "0") {				$this->session->set_flashdata('success', 'Subject added successfully');			} else {				$this->session->set_flashdata('success', 'Subject updated successfully');			}			redirect($_SERVER['HTTP_REFERER']);		}	}	public function list_subject()	{		$data['course'] = $this->Course_model->get_all_course_stream_relation();		// echo "<pre>";print_r($data['course']);exit;		$data['stream'] = $this->Course_model->get_course_stream();		// echo "<pre>";print_r($data['stream']);exit;		$data['mode'] = $this->Course_model->get_course_stream_mode_search();		$data['subject'] = $this->Course_model->get_selected_subject();		// echo "<pre>";print_r($data['subject']);exit;		$this->load->view('admin/list_subject', $data);	}	public function lateral_manage_fees()	{		$this->form_validation->set_rules('fees_amount', 'fees amount', 'required');		if ($this->form_validation->run() === FALSE) {			$data['single'] = $this->Course_model->get_lateral_entry_fees();			$this->load->view('admin/lateral_manage_fees', $data);		} else {			$result = $this->Course_model->set_lateral_entry_fees();			if ($result == "0") {				$this->session->set_flashdata('success', 'Fees added successfully');			} else {				$this->session->set_flashdata('success', 'Fees updated successfully');			}			redirect('lateral_manage_fees');		}	}	// public function emp_syllabus_list(){	// 	$this->load->view('admin/syllabus_list');	// }	public function emp_syllabus_list()	{		$data['faculty'] = $this->Course_model->get_all_faculty();		$data['result'] = $this->Course_model->get_all_course_syllabus();		$this->load->view('admin/course_syllabus_list', $data);	}	public function add_course_syllabus()	{		$this->form_validation->set_rules('faculty', 'Faculty', 'required');		if ($this->form_validation->run() === FALSE) {			$data['faculty'] = $this->Course_model->get_all_faculty();			$data['single'] = $this->Course_model->get_single_syllabus();			$data['course_result'] = $this->Course_model->get_all_course_syllabus();			$this->load->view('admin/add_course_syllabus', $data);		} else {			$slider_image = '';			if ($_FILES['file']['name'] != "") {				$slider_image = $this->Digitalocean_model->upload_photo($filename = "file", $path = "course_syllabus/");			}			$result = $this->Course_model->set_course_syllabus($slider_image);			if ($result == "0") {				$this->session->set_flashdata('success', 'Course syllabus added successfully');			} else {				$this->session->set_flashdata('success', 'Course syllabus updated successfully');			}			redirect('add_course_syllabus');		}	}}