<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed'); require_once APPPATH.'vendor/autoload.php';class Faculty_staff_controller extends CI_Controller { 	public function __construct(){		parent::__construct();		$this->is_logged();	}	public function is_logged(){		if($this->session->userdata('faculty_id') == ""){			redirect('faculty_login');		}	}	public function faculty_dashboard(){		$this->load->view('admin/faculty_dashboard');	} 	public function faculty_profile(){		$this->form_validation->set_rules('password','Password','required');		if($this->form_validation->run() === FALSE){	     	$this->load->view('admin/faculty_profile');		}		if($this->input->post('password_submit') == "password_submit"){			$this->Faculty_model->set_password();			$this->session->set_flashdata('success','Password updated successfully');			redirect('faculty_profile');		}			}	public function faculty_profile_setting(){		$this->form_validation->set_rules('first_name','first name','required');		$data['state'] = $this->Faculty_model->get_india_state(); 		if($this->form_validation->run() === FALSE){			$this->load->view('admin/faculty_profile_setting',$data);		}else{		$file ='';			if(isset($_FILES['userfile']) && $_FILES['userfile']['name'] != ""){				$file = $this->Digitalocean_model->upload_photo($filename="userfile",$path="images/faculty_staff/photo/");    			/*$config = array(    				'upload_path' 	=> "images/faculty_staff/photo",    				'allowed_types' => "*",    				'encrypt_name'	=> true,    			);			    			$this->upload->initialize($config);    			if($this->upload->do_upload('userfile')){    				$data = $this->upload->data();				    				$file = $data['file_name'];    					    			}else{    				$error = array('error' => $this->upload->display_errors());	    				$this->upload->display_errors();    			}*/			}			$signature ='';			if(isset($_FILES['signature']) && $_FILES['signature']['name'] != ""){				$signature = $this->Digitalocean_model->upload_photo($filename="signature",$path="images/faculty_staff/photo/");    			/*$config = array(    				'upload_path' 	=> "images/faculty_staff/photo",    				'allowed_types' => "*",    				'encrypt_name'	=> true,    			);			    			$this->upload->initialize($config);    			if($this->upload->do_upload('userfile')){    				$data = $this->upload->data();				    				$file = $data['file_name'];    					    			}else{    				$error = array('error' => $this->upload->display_errors());	    				$this->upload->display_errors();    			}*/			}			$adhar ='';			if(isset($_FILES['userfile1']) && $_FILES['userfile1']['name'] != ""){				$adhar = $this->Digitalocean_model->upload_photo($filename="userfile1",$path="images/faculty_staff/document/");    			/*$config = array(    				'upload_path' 	=> "images/faculty_staff/document",    				'allowed_types' => "*",    				'encrypt_name'	=> true,    			);			    			$this->upload->initialize($config);    			if($this->upload->do_upload('userfile1')){    				$data = $this->upload->data();				    				$adhar = $data['file_name'];    					    			}else{    				$error = array('error' => $this->upload->display_errors());	    				$this->upload->display_errors();    			}*/			} 			$cv_document ='';			if(isset($_FILES['userfile2']) && $_FILES['userfile2']['name'] != ""){				$cv_document = $this->Digitalocean_model->upload_photo($filename="userfile2",$path="images/faculty_staff/cv/");    			/*$config = array(    				'upload_path' 	=> "images/faculty_staff/cv",    				'allowed_types' => "*",    				'encrypt_name'	=> true,    			);			    			$this->upload->initialize($config);    			if($this->upload->do_upload('userfile2')){    				$data = $this->upload->data();				    				$cv_document = $data['file_name'];    					    			}else{    				$error = array('error' => $this->upload->display_errors());	    				$this->upload->display_errors();    			}*/			}			$eligible_document ='';			if(isset($_FILES['userfile3']) && $_FILES['userfile3']['name'] != ""){				$eligible_document = $this->Digitalocean_model->upload_photo($filename="userfile3",$path="images/faculty_staff/eligible_document/");    			/*$config = array(    				'upload_path' 	=> "images/faculty_staff/ed",    				'allowed_types' => "*",    				'encrypt_name'	=> true,    			);			    			$this->upload->initialize($config);    			if($this->upload->do_upload('userfile3')){    				$data = $this->upload->data();				    				$eligible_document = $data['file_name'];    					    			}else{    				$error = array('error' => $this->upload->display_errors());	    				$this->upload->display_errors();    			}*/			}      			$this->Faculty_model->set_profile($file,$adhar,$cv_document,$eligible_document,$signature);			$this->session->set_flashdata('success','Profile updated successfully');			redirect('faculty_profile_setting');	} }	public function add_daily_report(){ 		$this->form_validation->set_rules('date','date','required');		if($this->form_validation->run() === FALSE){			$this->load->view('admin/add_daily_report');		}else{ 		    $file_name ='';			if(isset($_FILES['file']) && $_FILES['file']['name'] != ""){				$file_name = $this->Digitalocean_model->upload_photo($filename="file",$path="images/faculty_staff/photo/");			}   			$this->Faculty_model->set_daily_report($file_name);			$this->session->set_flashdata('success','Report created successfully');			redirect('add_daily_report');		}	} 	public function update_daily_report(){ 		$this->form_validation->set_rules('id','date','required');		if($this->form_validation->run() === FALSE){			$data['single'] = $this->Faculty_model->get_single_daily_report();			$this->load->view('admin/update_daily_report',$data);		}else{ 			$this->Faculty_model->set_update_daily_report();			$this->session->set_flashdata('success','Report updated successfully');			redirect('new_daily_report');		}	}	public function my_daily_report(){		$this->load->view('admin/my_daily_report');	}	public function new_daily_report(){		$this->load->view('admin/new_daily_report');	}	public function all_daily_report(){		$this->load->view('admin/all_daily_report');	}	public function create_faculty_progress_report(){		$this->form_validation->set_rules('month','month','required');		if($this->form_validation->run() === FALSE){			$this->load->view('admin/create_faculty_progress_report');		}else{			$result = $this->Faculty_model->set_progress_report();			$this->session->set_flashdata('success','Report added successfully!');			redirect('create_faculty_progress_report');		}	}	public function my_faculty_progress_report(){		$this->load->view('admin/my_faculty_progress_report');	}	 	public function print_faculty_progress_report(){		//phpinfo();		$data['training_details'] = $this->Faculty_model->get_printable_profress_report();		$html = $this->load->view('admin/print_faculty_progress_report',$data,true);		$footer = '<h5>TGU/PR/'.$data['training_details']->id.'</h5>';		$mpdf = new \Mpdf\Mpdf(['mode' => 'utf-8', 'format' => 'A4','setAutoBottomMargin' => 'stretch','setAutoTopMargin' => 'pad', 'defaultheaderline'=>'0','margin_top' => '7','default_font' => 'Barlow']);		$mpdf->SetDisplayMode('fullpage');		$mpdf->SetFooter($footer);		$mpdf->WriteHTML($html);		$pdf_file_name = $data['training_details']->first_name.'-'.$data['training_details']->month.'-'.$data['training_details']->year.'-Progress Report.pdf';		$mpdf->Output($pdf_file_name, 'I');	}	public function add_register(){		$this->form_validation->set_rules('register_name','register name','required');		if($this->form_validation->run() === FALSE){			$data['single'] = $this->Faculty_model->get_single_register();			$data['course'] = $this->Course_model->get_active_course();			$this->load->view('admin/add_register',$data);		}else{ 			$fileName = ""; 			$fileName = $this->Digitalocean_model->upload_photo_multiple($filename="userfile",$path="uploads/syllabus/");			/*if(!empty($_FILES['userfile']['name'][0])){				$files = $_FILES;				$cpt = count($_FILES['userfile']['name']);				for($i=0; $i<$cpt; $i++){					$_FILES['userfile']['name']= $files['userfile']['name'][$i];					$_FILES['userfile']['type']= $files['userfile']['type'][$i];					$_FILES['userfile']['tmp_name']= $files['userfile']['tmp_name'][$i];					$_FILES['userfile']['error']= $files['userfile']['error'][$i];					$_FILES['userfile']['size']= $files['userfile']['size'][$i];					$this->upload->initialize($this->set_upload_syllabus_file());					if($this->upload->do_upload()){						$data =  $this->upload->data();						$fileName = $data['file_name'];						$images[] = $fileName;					}else{						$this->session->set_flashdata('message','Wrong type of file you are uploading.');						redirect($_SERVER['HTTP_REFERER']);					}				}				$fileName = implode(',',$images);			}else{				$fileName = '';			}*/			$result = $this->Faculty_model->set_register($fileName);			if($result == "0"){				$this->session->set_flashdata('success','Register added successfully');			}else{				$this->session->set_flashdata('success','Register updated successfully');			}			redirect('add_register');		}	}	public function view_register_student(){		$this->form_validation->set_rules('register_name','register name','required');		if($this->form_validation->run() === FALSE){			$data['register'] = $this->Faculty_model->get_my_single_register();			if(!empty($data['register'])){				$data['student'] = $this->Faculty_model->get_my_single_register_student($data['register']->id); 			}			$data['single'] = $this->Faculty_model->get_single_register_student();			$this->load->view('admin/view_register_student',$data);		}else{ 			$result = $this->Faculty_model->set_update_register();			if($result == "0"){				$this->session->set_flashdata('success','Student added successfully');			}else{				$this->session->set_flashdata('success','Student updated successfully');			}			redirect('view_register_student/'.$this->input->post('register_name'));		}	}	public function add_student_attendance(){		$this->form_validation->set_rules('register_name','register name','required');		if($this->form_validation->run() === FALSE){			$data['register'] = $this->Faculty_model->get_my_single_register();			if(!empty($data['register'])){				$data['student'] = $this->Faculty_model->get_my_single_register_student($data['register']->id); 			}			$data['single'] = $this->Faculty_model->get_single_student_attendance();			$this->load->view('admin/add_student_attendance',$data);		}else{ 			$result = $this->Faculty_model->set_student_attendance();			if($result == "0"){				$this->session->set_flashdata('success','Register added successfully');			}else{				$this->session->set_flashdata('success','Register updated successfully');			}			redirect('add_register');		}	}	public function add_syllabus(){		$this->form_validation->set_rules('syllabus_name','syllabus name','required');		if($this->form_validation->run() === FALSE){ 			$data['single'] = $this->Faculty_model->get_single_syllabus();			$this->load->view('admin/add_syllabus',$data);		}else{ 			$fileName = "";			$fileName = $this->Digitalocean_model->upload_photo_multiple($filename="userfile",$path="uploads/syllabus/");			/*if(!empty($_FILES['userfile']['name'][0])){				$files = $_FILES;				$cpt = count($_FILES['userfile']['name']);				for($i=0; $i<$cpt; $i++){					$_FILES['userfile']['name']= $files['userfile']['name'][$i];					$_FILES['userfile']['type']= $files['userfile']['type'][$i];					$_FILES['userfile']['tmp_name']= $files['userfile']['tmp_name'][$i];					$_FILES['userfile']['error']= $files['userfile']['error'][$i];					$_FILES['userfile']['size']= $files['userfile']['size'][$i];					$this->upload->initialize($this->set_upload_syllabus_file());					if($this->upload->do_upload()){						$data =  $this->upload->data();						$fileName = $data['file_name'];						$images[] = $fileName;					}else{						$this->session->set_flashdata('message','Wrong type of file you are uploading.');						redirect($_SERVER['HTTP_REFERER']);					}				}				$fileName = implode(',',$images);			}else{				$fileName = '';			}*/ 			$result = $this->Faculty_model->set_syllabus($fileName);			if($result == "0"){				$this->session->set_flashdata('success','Syllabus added successfully');			}else{				$this->session->set_flashdata('success','Syllabus updated successfully');			}			redirect('add_syllabus');		}	}	private function set_upload_syllabus_file(){ 		$config = array();		$config['upload_path'] = 'uploads/syllabus'; 		$config['allowed_types'] = 'csv|pdf|xls|xlsx|ppt|tar|zip|txt|doc|docx|xlsx|word|png|jpeg|jpg';		$config['remove_spaces'] = TRUE;		$config['max_size'] = '0';		$config['overwrite'] = FALSE;		return $config;	}	public function give_feedbak(){		$this->form_validation->set_rules('feedback','feedback','required');		if($this->form_validation->run() === FALSE){			$data['feedback'] = $this->Faculty_model->get_my_feed_back();			$this->load->view('admin/add_feedbak',$data);		}else{			$result = $this->Faculty_model->set_feedback();			if($result == "0"){				$this->session->set_flashdata('success','Feedback added successfully');			}else{				$this->session->set_flashdata('success','Feedback updated successfully');			}			redirect('give_feedbak');		}	}	public function faculty_logout(){		/*$this->db->where('staff_faculty_id',$this->session->userdata('faculty_id'));		$this->db->where('date',date('Y-m-d'));		$this->db->where('is_deleted','0');		$this->db->where('status','1');		$attendance = $this->db->get('tbl_staff_faculty_in_out');		$attendance = $attendance->row();		if(!empty($attendance)){			$att = array(				'out_time' => date('H:i:s'),			);			$this->db->where('id',$attendance->id);			$this->db->update('tbl_staff_faculty_in_out',$att);		}*/		$this->session->sess_destroy();		redirect('faculty_login');	}	public function faculty_documents(){		$this->form_validation->set_rules('head','document name','required');		if($this->form_validation->run() === FALSE){			$data['exist'] = $this->Faculty_model->get_available_documents();			$this->load->view('admin/faculty_documents',$data);		}else{			$file ='';			if($_FILES['userfile']['name'] !=""){				$file = $this->Digitalocean_model->upload_photo($filename="userfile",$path="uploads/faculty_documents/");				/*$tmp = explode('.', $_FILES['userfile']['name']);				$ext = end($tmp);				$config = array(					'upload_path' 	=> "uploads/faculty_documents",					'allowed_types' => "*",					'encrypt_name'	=> TRUE,				);							$this->upload->initialize($config);				if($this->upload->do_upload('userfile')){					$data = $this->upload->data();									$file = $data['file_name'];					}else{ 					$error = array('error' => $this->upload->display_errors());						$this->upload->display_errors();				}*/			}			$result = $this->Faculty_model->set_faculty_documents($file);			if($result == "0"){				$this->session->set_flashdata('success','Document added successfully');			}else{				$this->session->set_flashdata('success','Document updated successfully');			}			redirect('faculty_documents');		}	}	public function assignments_mcq(){		if($this->input->post('save_question') == "save_question"){			if($this->input->post('upload_type') == "Form"){				$this->Faculty_model->set_mcq_question();			}else{				$store_data = array();				error_reporting('e_all');				$this->load->library('excel');								if(isset($_FILES["userfile"]["name"])){					$path = $_FILES["userfile"]["tmp_name"];					$object = PHPExcel_IOFactory::load($path);					foreach($object->getWorksheetIterator() as $worksheet){						$highestRow = $worksheet->getHighestRow();						$highestColumn = $worksheet->getHighestColumn();						for($row=2; $row<=$highestRow; $row++){							if($worksheet->getCellByColumnAndRow(1, $row)->getValue() != ''){								$question 			= $worksheet->getCellByColumnAndRow(1,$row)->getValue();								$option_a 			= $worksheet->getCellByColumnAndRow(2,$row)->getValue();								$option_b 			= $worksheet->getCellByColumnAndRow(3,$row)->getValue();								$option_c		 	= $worksheet->getCellByColumnAndRow(4,$row)->getValue();								$option_d 			= $worksheet->getCellByColumnAndRow(5,$row)->getValue();								$correct_answer 	= $worksheet->getCellByColumnAndRow(6,$row)->getValue();								if (trim($correct_answer) == 'A') {									$correct_answer = '1';								}else if(trim($correct_answer) == 'B'){									$correct_answer = '2';								}else if(trim($correct_answer) == 'C'){									$correct_answer = '3';								}else if(trim($correct_answer) == 'D'){									$correct_answer = '4';								}								$store_data[] = array(									'added_by' 			=> $this->session->userdata('faculty_id'),									'added_type' 		=> '1',									'course_id' 		=> $this->input->post('course'),									'stream_id' 		=> $this->input->post('stream'),									'year_sem' 			=> $this->input->post('year_sem'),									'subject_id' 		=> $this->input->post('subject'),									'question' 			=> $question,									'option_a' 			=> $option_a,									'option_b' 			=> $option_b,									'option_c' 			=> $option_c,									'option_d' 			=> $option_d,									'correct_answer' 	=> $correct_answer,									'created_on' 		=> date("Y-m-d H:i:s"),								);							}						}					} 					if(!empty($store_data)){						$this->Faculty_model->insert_batch_mcq_question($store_data);						$this->session->set_flashdata('success','Questions added successfully');					}  				} 			}			$this->session->set_flashdata('success','Question added successfully');			redirect($_SERVER['HTTP_REFERER']);		}		$data['course'] = $this->Web_model->get_all_course_stream_relation();		$this->load->view('admin/assignments_mcq',$data);	}	public function view_mcq_list(){		$data['questions'] = $this->Faculty_model->get_mcq_my_question();		$data['course_name'] = $this->Faculty_model->get_course_stream_subject_name();		$this->load->view('admin/view_mcq_list',$data);	}	public function add_theoretical_questions(){		if($this->input->post('save_question') == "save_question"){			if($this->input->post('upload_type') == "Form"){				$this->Faculty_model->set_theoretical_questions();			}else{				$store_data = array();				error_reporting('e_all');				$this->load->library('excel');								if(isset($_FILES["userfile"]["name"])){					$path = $_FILES["userfile"]["tmp_name"];					$object = PHPExcel_IOFactory::load($path);					foreach($object->getWorksheetIterator() as $worksheet){						$highestRow = $worksheet->getHighestRow();						$highestColumn = $worksheet->getHighestColumn();						for($row=2; $row<=$highestRow; $row++){							if($worksheet->getCellByColumnAndRow(1, $row)->getValue() != ''){								$question 			= $worksheet->getCellByColumnAndRow(1,$row)->getValue();								$store_data[] = array(									'added_by' 			=> $this->session->userdata('faculty_id'),									'added_type' 		=> '1',									'course_id' 		=> $this->input->post('course'),									'stream_id' 		=> $this->input->post('stream'),									'year_sem' 			=> $this->input->post('year_sem'),									'subject_id' 		=> $this->input->post('subject'),									'question' 			=> $question,									'created_on' 		=> date("Y-m-d H:i:s"),								);							}						}					} 					if(!empty($store_data)){						$this->Faculty_model->insert_batch_theoretical_questions($store_data);						$this->session->set_flashdata('success','Questions added successfully');					}  				} 			}			$this->session->set_flashdata('success','Question added successfully');			redirect($_SERVER['HTTP_REFERER']);			$this->session->set_flashdata('success','Question added successfully');			redirect($_SERVER['HTTP_REFERER']);		}		$data['course'] = $this->Web_model->get_all_course_stream_relation();		$data['questions'] = $this->Faculty_model->get_theoretical_my_question();		$data['course_name'] = $this->Faculty_model->get_course_stream_subject_name_theoretical();		$this->load->view('admin/add_theoretical_questions',$data);	}	public function course_video_add(){		$this->form_validation->set_rules("course","course","required");		if($this->form_validation->run()===FALSE){			if(!empty($this->uri->segment(2))){				$data["data"] = $this->Faculty_model->get_course_video($this->uri->segment(2));				//print_r($data["data"]);exit;			}			$data['course'] = $this->Web_model->get_all_course_stream_relation();			$this->load->view("admin/course_video_add",$data);		}else{			$res = $this->Faculty_model->course_video_add();			if($res=="saved"){				$this->session->set_flashdata('success','added successfully');				redirect("course_video_add");			}else{				$this->session->set_flashdata('success','updated successfully');				redirect("course_video_list");			}					}			}	public function faculty_online_class_meet(){		if($this->input->post('upload_video') == "upload_video"){			$res = $this->Faculty_model->set_faculty_online_class_meet_video();			$this->session->set_flashdata('success','Video uploaded successfully');			redirect("faculty_online_class_meet"); 		}		$this->form_validation->set_rules("course","course","required");		if($this->form_validation->run()===FALSE){  			$data['course'] = $this->Course_model->get_active_course();			$data['video'] = $this->Faculty_model->get_class_for_video();			$this->load->view("admin/faculty_online_class_meet",$data);		}else{			$res = $this->Faculty_model->set_faculty_online_class_meet();			if($res=="saved"){				$this->session->set_flashdata('success','Meeting added successfully');				redirect("faculty_online_class_meet");			}else{				$this->session->set_flashdata('success','Meeting updated successfully');				redirect("faculty_online_class_meet");			}					} 	}	public function course_video_list(){		$this->load->view("admin/course_video_list");	}		public function manage_attendance(){		$this->form_validation->set_rules('course','course name','required');		if($this->form_validation->run() === FALSE){			$data['single'] = $this->Faculty_model->get_single_register();			$data['course'] = $this->Course_model->get_active_course();			$this->load->view('admin/manage_attendance',$data);		}else{ 			$result = $this->Faculty_model->set_bulk_attendance();			if($result == "0"){				$this->session->set_flashdata('success','Attendance added successfully');			}else{				$this->session->set_flashdata('success','Attendance updated successfully');			}			redirect('manage_attendance');		}	}	public function staff_attendance(){		$data['staff'] = $this->Faculty_model->get_staff_attebdance();		$this->load->view('admin/staff_attendance',$data);	}	public function staff_added_mcq_report(){		$data['staff'] = $this->Faculty_model->get_staff_attebdance();		$this->load->view('admin/staff_added_mcq_report',$data);	}	public function view_report_comments(){		$data['comments'] = $this->Faculty_model->get_report_all_comments();		$this->load->view('admin/view_report_comments',$data);	}}