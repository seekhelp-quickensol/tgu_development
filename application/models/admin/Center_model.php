<?php if (! defined('BASEPATH')) exit('No direct script access allowed');class Center_model extends CI_Model{	public function get_my_wallet_balance($center_id){		$this->db->where('center_id', $center_id);		$this->db->where('is_deleted', '0');		$this->db->where('status', '1');		$result = $this->db->get('tbl_center_wallet');		$result = $result->row();		return $result;	}		public function set_center($photo, $identity_file,$mou,$pan_card,$passport)	{		if ($photo == "") {			$photo = $this->input->post('old_photo');		}		if ($identity_file == "") {			$identity_file = $this->input->post('old_identity_file');		}		if($pan_card == ""){			$pan_card = $this->input->post('old_pan_card');		}		if($passport == ""){			$passport = $this->input->post('old_passport');		}		$data = array(			'center_name' 				=> $this->input->post('center_name'),			'collaboration_status'		=> $this->input->post('collaboration_status'),			'head_name' 				=> $this->input->post('head_name'),			'head_email' 				=> $this->input->post('head_email'),			'head_contact_number' 		=> $this->input->post('head_contact_number'),			'contact_person_name' 		=> $this->input->post('contact_person_name'),			'contact_person_contact' 	=> $this->input->post('contact_person_contact'),			'contact_person_email' 		=> $this->input->post('contact_person_email'),			'address' 					=> $this->input->post('address'),			'country' 					=> $this->input->post('country'),			'state' 					=> $this->input->post('state'),			'city' 						=> $this->input->post('city'),			'pincode' 					=> $this->input->post('pincode'),			'payment_term' 				=> $this->input->post('payment_term'),			'operation' 				=> $this->input->post('operation'),			'reference' 				=> $this->input->post('reference'),			// 'is_information' 		=> $this->input->post('is_information'),			'start_date' 				=> date("Y-m-d", strtotime($this->input->post('start_date'))),			'end_date' 					=> date("Y-m-d", strtotime($this->input->post('end_date'))),			'photo' 					=> $photo,			// 'adhar_card' 			=> $adharcard,			// 'pan_card' 				=> $pan_card,			// 'passport' 				=> $passport,			'adhar_card'            	=> $identity_file,			'pan_card' 					=> $pan_card,			'passport' 					=> $passport,			'lateral_entry_fees' 		=> $this->input->post('lateral_entry_fees'),		);		$password = rand();		if ($this->input->post('id') == "") {			$date = array(				'created_on' => date("Y-m-d"),				'password' => md5($password)			);			$new_arr = array_merge($data, $date);			$this->db->insert('tbl_center', $new_arr);			$id = $this->db->insert_id();			if (strlen($id) == 1) {				$code = "000" . $id;			} else if (strlen($id) == 2) {				$code = "00" . $id;			} else if (strlen($id) == 3) {				$code = "0" . $id;			} else if (strlen($id) == 4) {				$code = $id;			} else {				$code = $id;			}			$center_code = array(				'center_code' => $code			);			$this->db->where('id', $id);			$this->db->update('tbl_center', $center_code);			if ($mou != "") {				$mou_data = array(					'center_id' 	=> $id,					'mou' 			=> $mou,					'added_date' 	=> date("Y-m-d"),				);				$this->db->insert('tbl_center_mous', $mou_data);			}			return 0;		} else {			$this->db->where('id', $this->input->post('id'));			$this->db->update('tbl_center', $data);			if ($mou != "") {				$mou_data = array(					'center_id' 	=> $this->input->post('id'),					'mou' 			=> $mou,					'added_date' 	=> date("Y-m-d"),				);				$this->db->insert('tbl_center_mous', $mou_data);			}			return 1;		}	}	public function get_center_unique_email()	{		$this->db->where('head_email', $this->input->post('head_email'));		if ($this->input->post('id') != "") {			$this->db->where('id !=', $this->input->post('id'));		}		$this->db->where('is_deleted', '0');		$result = $this->db->get('tbl_center');		echo $result->num_rows();	}	public function get_center_unique_contact_number()	{		$this->db->where('head_contact_number', $this->input->post('head_contact_number'));		if ($this->input->post('id') != "") {			$this->db->where('id !=', $this->input->post('id'));		}		$this->db->where('is_deleted', '0');		$result = $this->db->get('tbl_center');		echo $result->num_rows();	}	public function get_single_center()	{		$this->db->where('is_deleted', '0');		$this->db->where('id', $this->uri->segment(2));		$this->db->where('is_deleted', '0');		$result = $this->db->get('tbl_center');		return $result->row();	}	public function get_single_center_mous()	{		$this->db->select('tbl_center_mous.*');		$this->db->where('tbl_center_mous.is_deleted', '0');		$this->db->where('tbl_center_mous.center_id', $this->uri->segment(2));		$this->db->join('tbl_center', 'tbl_center.id = tbl_center_mous.center_id', 'left');		$result = $this->db->get('tbl_center_mous');		return $result->row();	}	public function get_all_information_center_ajax($length, $start, $search)	{		$this->db->select('tbl_center.*,countries.name as country_name,states.name as state_name,cities.name as city_name');		$this->db->where('tbl_center.is_deleted', '0');		$this->db->where('tbl_center.status', '1');		// $this->db->where('tbl_center.is_information','1');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_center.reference', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->or_like('tbl_center.head_name', $search);			$this->db->or_like('tbl_center.head_email', $search);			$this->db->or_like('tbl_center.head_contact_number', $search);			$this->db->or_like('tbl_center.contact_person_name', $search);			$this->db->or_like('tbl_center.contact_person_contact', $search);			$this->db->or_like('tbl_center.contact_person_email', $search);			$this->db->or_like('tbl_center.pincode', $search);			$this->db->or_like('tbl_center.address', $search);			$this->db->group_end();		}		$this->db->join('countries', 'countries.id = tbl_center.country');		$this->db->join('states', 'states.id = tbl_center.state');		$this->db->join('cities', 'cities.id = tbl_center.city');		$this->db->order_by('tbl_center.id', 'DESC');		$this->db->limit($length, $start);		$result = $this->db->get('tbl_center');		return $result->result();	}	public function get_all_information_center_ajax_count($search)	{		$this->db->where('tbl_center.is_deleted', '0');		$this->db->where('tbl_center.status', '1');		// $this->db->where('tbl_center.is_information','1');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_center.reference', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->or_like('tbl_center.head_name', $search);			$this->db->or_like('tbl_center.head_email', $search);			$this->db->or_like('tbl_center.head_contact_number', $search);			$this->db->or_like('tbl_center.contact_person_name', $search);			$this->db->or_like('tbl_center.contact_person_contact', $search);			$this->db->or_like('tbl_center.contact_person_email', $search);			$this->db->or_like('tbl_center.pincode', $search);			$this->db->or_like('tbl_center.address', $search);			$this->db->group_end();		}		$this->db->join('countries', 'countries.id = tbl_center.country');		$this->db->join('states', 'states.id = tbl_center.state');		$this->db->join('cities', 'cities.id = tbl_center.city');		// $this->db->order_by('tbl_center.center_name','ASC');		$this->db->order_by('tbl_center.id', 'DESC');		$result = $this->db->get('tbl_center');		return $result->num_rows();	}	public function get_all_center_ajax($length, $start, $search)	{		$this->db->select('tbl_center.*,countries.name as country_name,states.name as state_name,cities.name as city_name');		$this->db->where('tbl_center.is_deleted', '0');		$this->db->where('tbl_center.status', '1');		$this->db->where('tbl_center.operation', '1');		if ($this->input->post('type') != "") {			$this->db->where('tbl_center.center_type', $this->input->post('type'));		}		if ($search != "") {			$this->db->group_start();			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_center.reference', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->or_like('tbl_center.head_name', $search);			$this->db->or_like('tbl_center.head_email', $search);			$this->db->or_like('tbl_center.head_contact_number', $search);			$this->db->or_like('tbl_center.contact_person_name', $search);			$this->db->or_like('tbl_center.contact_person_contact', $search);			$this->db->or_like('tbl_center.contact_person_email', $search);			$this->db->or_like('tbl_center.pincode', $search);			$this->db->group_end();		}		$this->db->join('countries', 'countries.id = tbl_center.country');		$this->db->join('states', 'states.id = tbl_center.state');		$this->db->join('cities', 'cities.id = tbl_center.city');		$this->db->order_by('tbl_center.id', 'DESC');		$this->db->limit($length, $start);		$result = $this->db->get('tbl_center');		return $result->result();		// echo "<pre>";print_r($result);exit;	}	public function get_all_center_count($search)	{		$this->db->select('tbl_center.*,countries.name as country_name,states.name as state_name,cities.name as city_name');		$this->db->where('tbl_center.is_deleted', '0');		$this->db->where('tbl_center.status', '1');		$this->db->where('tbl_center.operation', '1');		if ($this->input->post('type') != "") {			$this->db->where('tbl_center.center_type', $this->input->post('type'));		}		// $this->db->where('tbl_center.is_information','0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_center.reference', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->or_like('tbl_center.head_name', $search);			$this->db->or_like('tbl_center.head_email', $search);			$this->db->or_like('tbl_center.head_contact_number', $search);			$this->db->or_like('tbl_center.contact_person_name', $search);			$this->db->or_like('tbl_center.contact_person_contact', $search);			$this->db->or_like('tbl_center.contact_person_email', $search);			$this->db->or_like('tbl_center.pincode', $search);			$this->db->group_end();		}		$this->db->join('countries', 'countries.id = tbl_center.country');		$this->db->join('states', 'states.id = tbl_center.state');		$this->db->join('cities', 'cities.id = tbl_center.city');		$this->db->order_by('tbl_center.id', 'DESC');		$result = $this->db->get('tbl_center');		return $result->num_rows();	}	public function get_all_pending_center_ajax($length, $start, $search)	{		$this->db->select('tbl_center.*, countries.name as country_name, states.name as state_name, cities.name as city_name');		$this->db->where('tbl_center.is_deleted', '0');		// Group for the first AND combination of conditions		$this->db->group_start();		$this->db->group_start();		$this->db->where('tbl_center.status', '1');		$this->db->where('tbl_center.operation', '0');		$this->db->group_end();		// OR conditions with new groups		$this->db->or_group_start();		$this->db->where('tbl_center.status', '0');		$this->db->where('tbl_center.operation', '1');		$this->db->group_end();		$this->db->or_group_start();		$this->db->where('tbl_center.status', '0');		$this->db->where('tbl_center.operation', '0');		$this->db->group_end();		$this->db->group_end(); // Close the entire group for the conditions		if ($this->input->post('type') != "") {			$this->db->where('tbl_center.center_type', $this->input->post('type'));		}		// Search filters if a search term is provided		if ($search != "") {			$this->db->group_start(); // Start a group for the search OR conditions			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_center.reference', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->or_like('tbl_center.head_name', $search);			$this->db->or_like('tbl_center.head_email', $search);			$this->db->or_like('tbl_center.head_contact_number', $search);			$this->db->or_like('tbl_center.contact_person_name', $search);			$this->db->or_like('tbl_center.contact_person_contact', $search);			$this->db->or_like('tbl_center.contact_person_email', $search);			$this->db->or_like('tbl_center.pincode', $search);			//$this->db->or_like('tbl_center.address', $search); // Uncomment if needed			$this->db->group_end(); // End the search group		}		// Joins for countries, states, and cities		$this->db->join('countries', 'countries.id = tbl_center.country');		$this->db->join('states', 'states.id = tbl_center.state');		$this->db->join('cities', 'cities.id = tbl_center.city');		// Order and pagination		$this->db->order_by('tbl_center.id', 'DESC');		$this->db->limit($length, $start);		// Execute the query and return the result		$result = $this->db->get('tbl_center');		return $result->result();		// echo "<pre>";print_r($result);exit;	}	public function get_all_pending_center_count($search)	{		$this->db->select('tbl_center.*, countries.name as country_name, states.name as state_name, cities.name as city_name');		$this->db->where('tbl_center.is_deleted', '0');		// Group for the first AND combination of conditions		$this->db->group_start();		$this->db->group_start();		$this->db->where('tbl_center.status', '1');		$this->db->where('tbl_center.operation', '0');		$this->db->group_end();		// OR conditions with new groups		$this->db->or_group_start();		$this->db->where('tbl_center.status', '0');		$this->db->where('tbl_center.operation', '1');		$this->db->group_end();		$this->db->or_group_start();		$this->db->where('tbl_center.status', '0');		$this->db->where('tbl_center.operation', '0');		$this->db->group_end();		$this->db->group_end(); // Close the entire group for the conditions		if ($this->input->post('type') != "") {			$this->db->where('tbl_center.center_type', $this->input->post('type'));		}		// Search filters if a search term is provided		if ($search != "") {			$this->db->group_start(); // Start a group for the search OR conditions			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_center.reference', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->or_like('tbl_center.head_name', $search);			$this->db->or_like('tbl_center.head_email', $search);			$this->db->or_like('tbl_center.head_contact_number', $search);			$this->db->or_like('tbl_center.contact_person_name', $search);			$this->db->or_like('tbl_center.contact_person_contact', $search);			$this->db->or_like('tbl_center.contact_person_email', $search);			$this->db->or_like('tbl_center.pincode', $search);			//$this->db->or_like('tbl_center.address', $search); // Uncomment if needed			$this->db->group_end(); // End the search group		}		// Joins for countries, states, and cities		$this->db->join('countries', 'countries.id = tbl_center.country');		$this->db->join('states', 'states.id = tbl_center.state');		$this->db->join('cities', 'cities.id = tbl_center.city');		// Order and pagination		$this->db->order_by('tbl_center.id', 'DESC');		$result = $this->db->get('tbl_center');		return $result->num_rows();	}	public function get_all_hold_center_ajax($length, $start, $search)	{		$this->db->select('tbl_center.*,countries.name as country_name,states.name as state_name,cities.name as city_name');		$this->db->where('tbl_center.is_deleted', '0');		$this->db->where('tbl_center.status', '0');		$this->db->where_in('tbl_center.operation', array('0', '1'));		if ($search != "") {			$this->db->group_start();			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_center.reference', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->or_like('tbl_center.head_name', $search);			$this->db->or_like('tbl_center.head_email', $search);			$this->db->or_like('tbl_center.head_contact_number', $search);			$this->db->or_like('tbl_center.contact_person_name', $search);			$this->db->or_like('tbl_center.contact_person_contact', $search);			$this->db->or_like('tbl_center.contact_person_email', $search);			$this->db->or_like('tbl_center.pincode', $search);			$this->db->or_like('tbl_center.address', $search);			$this->db->group_end();		}		$this->db->join('countries', 'countries.id = tbl_center.country');		$this->db->join('states', 'states.id = tbl_center.state');		$this->db->join('cities', 'cities.id = tbl_center.city');		$this->db->order_by('tbl_center.id', 'DESC');		$this->db->limit($length, $start);		$result = $this->db->get('tbl_center');		return $result->result();	}	public function get_all_hold_center_count($search)	{		$this->db->select('tbl_center.*,countries.name as country_name,states.name as state_name,cities.name as city_name');		$this->db->where('tbl_center.is_deleted', '0');		$this->db->where('tbl_center.status', '0');		// $this->db->where('tbl_center.is_information','0');		$this->db->where_in('tbl_center.operation', array('0', '1'));		if ($search != "") {			$this->db->group_start();			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_center.reference', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->or_like('tbl_center.head_name', $search);			$this->db->or_like('tbl_center.head_email', $search);			$this->db->or_like('tbl_center.head_contact_number', $search);			$this->db->or_like('tbl_center.contact_person_name', $search);			$this->db->or_like('tbl_center.contact_person_contact', $search);			$this->db->or_like('tbl_center.contact_person_email', $search);			$this->db->or_like('tbl_center.pincode', $search);			$this->db->or_like('tbl_center.address', $search);			$this->db->group_end();		}		$this->db->join('countries', 'countries.id = tbl_center.country');		$this->db->join('states', 'states.id = tbl_center.state');		$this->db->join('cities', 'cities.id = tbl_center.city');		// $this->db->order_by('tbl_center.center_name','DESC');		$this->db->order_by('tbl_center.id', 'DESC');		$result = $this->db->get('tbl_center');		return $result->num_rows();	}	public function get_all_deactive_center_ajax($length, $start, $search)	{		$this->db->select('tbl_center.*,countries.name as country_name,states.name as state_name,cities.name as city_name');		$this->db->where('tbl_center.is_deleted', '0');		$this->db->where('tbl_center.operation', '1');		$this->db->where('tbl_center.status', '0');		// $this->db->where('tbl_center.is_information','0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_center.reference', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->or_like('tbl_center.head_name', $search);			$this->db->or_like('tbl_center.head_email', $search);			$this->db->or_like('tbl_center.head_contact_number', $search);			$this->db->or_like('tbl_center.contact_person_name', $search);			$this->db->or_like('tbl_center.contact_person_contact', $search);			$this->db->or_like('tbl_center.contact_person_email', $search);			$this->db->or_like('tbl_center.pincode', $search);			$this->db->or_like('tbl_center.address', $search);			$this->db->group_end();		}		$this->db->join('countries', 'countries.id = tbl_center.country');		$this->db->join('states', 'states.id = tbl_center.state');		$this->db->join('cities', 'cities.id = tbl_center.city');		$this->db->order_by('tbl_center.id', 'DESC');		$this->db->limit($length, $start);		$result = $this->db->get('tbl_center');		return $result->result();	}	public function get_all_deactive_center_ajax_count($search)	{		$this->db->select('tbl_center.*,countries.name as country_name,states.name as state_name,cities.name as city_name');		$this->db->where('tbl_center.is_deleted', '0');		$this->db->where('tbl_center.operation', '1');		$this->db->where('tbl_center.status', '0');		// $this->db->where('tbl_center.is_information','0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->or_like('tbl_center.reference', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->or_like('tbl_center.head_name', $search);			$this->db->or_like('tbl_center.head_email', $search);			$this->db->or_like('tbl_center.head_contact_number', $search);			$this->db->or_like('tbl_center.contact_person_name', $search);			$this->db->or_like('tbl_center.contact_person_contact', $search);			$this->db->or_like('tbl_center.contact_person_email', $search);			$this->db->or_like('tbl_center.pincode', $search);			$this->db->or_like('tbl_center.address', $search);			$this->db->group_end();		}		$this->db->join('countries', 'countries.id = tbl_center.country');		$this->db->join('states', 'states.id = tbl_center.state');		$this->db->join('cities', 'cities.id = tbl_center.city');		$this->db->order_by('tbl_center.center_name', 'DESC');		$result = $this->db->get('tbl_center');		return $result->num_rows();	}	public function set_center_mou($mou)	{		$data = array(			'center_id'     => $this->input->post('id'),			'document_name' => $this->input->post('document_name'),			'mou'		    => $mou,			'added_date'    => date("Y-m-d"),			'created_on'    => date("Y-m-d H:i:s"),		);		$this->db->insert('tbl_center_mous', $data);		return true;	}	public function get_all_center_mou_ajax($length, $start, $search)	{		$this->db->where('is_deleted', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_center_mous.added_date', $search);			$this->db->group_end();		}		$this->db->where('center_id', $this->input->post('center_id'));		$this->db->limit($length, $start);		$result = $this->db->get('tbl_center_mous');		return $result->result();	}	public function get_all_center_mou_count($search)	{		$this->db->where('is_deleted', '0');		$this->db->where('center_id', $this->input->post('center_id'));		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_center_mous.added_date', $search);			$this->db->group_end();		}		$result = $this->db->get('tbl_center_mous');		return $result->num_rows();	}	public function set_center_finance()	{		$data = array(			'center_id' 		=> $this->input->post('center_id'),			'payment_mode'		=> $this->input->post('payment_mode'),			'payment_date'		=> date("Y-m-d", strtotime($this->input->post('payment_date'))),			'transaction_no'	=> $this->input->post('transaction_no'),			'amount'			=> $this->input->post('amount'),			'payment_status'	=> $this->input->post('payment_status'),		);		if ($this->input->post('id') == "") {			$date = array(				'created_on' => date("Y-m-d H:i:s")			);			$new_arr = array_merge($data, $date);			$this->db->insert('tbl_center_payment', $new_arr);			return 0;		} else {			$this->db->where('id', $this->input->post('id'));			$this->db->update('tbl_center_payment', $data);			return 1;		}	}	public function get_all_center_payment_ajax($length, $start, $search)	{		$this->db->where('is_deleted', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('payment_date', $search);			$this->db->or_like('transaction_no', $search);			$this->db->or_like('amount', $search);			$this->db->group_end();		}		$this->db->where('center_id', $this->input->post('center_id'));		$this->db->limit($length, $start);		$result = $this->db->get('tbl_center_payment');		return $result->result();	}	public function get_all_center_payment_count($search)	{		$this->db->where('is_deleted', '0');		$this->db->where('center_id', $this->input->post('center_id'));		if ($search != "") {			$this->db->group_start();			$this->db->or_like('payment_date', $search);			$this->db->or_like('transaction_no', $search);			$this->db->or_like('amount', $search);			$this->db->group_end();		}		$result = $this->db->get('tbl_center_payment');		return $result->num_rows();	}	public function get_single_center_payment()	{		$this->db->where('is_deleted', '0');		$this->db->where('center_id', $this->uri->segment(2));		$this->db->where('id', $this->uri->segment(3));		$result = $this->db->get('tbl_center_payment');		return $result->row();	}	public function get_all_added_subject($length, $start, $search)	{		$this->db->select('tbl_subject.*,tbl_course.course_name,tbl_stream.stream_name,tbl_center.center_name');		$this->db->where('tbl_subject.is_deleted', '0');		$this->db->where('tbl_subject.status', '0');		$this->db->where('tbl_subject.is_center', '1');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_course.course_name', $search);			$this->db->or_like('tbl_stream.stream_name', $search);			$this->db->group_end();		}		$this->db->join('tbl_course', 'tbl_course.id = tbl_subject.course');		$this->db->join('tbl_stream', 'tbl_stream.id = tbl_subject.stream');		$this->db->join('tbl_center', 'tbl_center.id = tbl_subject.center_id');		$this->db->limit($length, $start);		$result = $this->db->get('tbl_subject');		return $result->result();	}	public function get_all_added_subject_count($search)	{		$this->db->select('tbl_subject.*,tbl_course.course_name,tbl_stream.stream_name,tbl_center.center_name');		$this->db->where('tbl_subject.is_deleted', '0');		$this->db->where('tbl_subject.status', '0');		$this->db->where('tbl_subject.is_center', '1');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_course.course_name', $search);			$this->db->or_like('tbl_stream.stream_name', $search);			$this->db->group_end();		}		$this->db->join('tbl_course', 'tbl_course.id = tbl_subject.course');		$this->db->join('tbl_stream', 'tbl_stream.id = tbl_subject.stream');		$this->db->join('tbl_center', 'tbl_center.id = tbl_subject.center_id');		$result = $this->db->get('tbl_subject');		return $result->num_rows();	}	public function set_reset_center_password()	{		$data = array(			'password' => md5($this->input->post('password')),			'org_password' => $this->input->post('password')		);		$this->db->where('id', $this->input->post('center_id'));		$this->db->update('tbl_center', $data);		return true;	}	public function set_center_password()	{		$pass = rand();		$data = array(			'password' => md5($pass)		);		$this->db->where('id', $this->input->post('center_id'));		$this->db->update('tbl_center', $data);		$this->db->where('id', $this->input->post('center_id'));		$result = $this->db->get('tbl_center');		$result = $result->row();		// echo "<pre>";print_r($result);exit;		$this->load->library('email');		$config['protocol'] = 'sendmail';		$config['mailpath'] = '/usr/sbin/sendmail';		$config['mailtype'] = 'html';		$config['charset'] = 'iso-8859-1';		$config['wordwrap'] = TRUE;		$this->email->initialize($config);		$this->email->from(no_reply_mail);		$this->email->to($result->head_email);		$this->email->subject('Reset Password |' . no_reply_name);		$this->email->set_mailtype('html');		$message = "Dear " . $result->head_name . "<br> Your password has been reset, below are the login details to continue.<br>";		$message .= "<br>URL: " . base_url() . "center-access";		$message .= "<br>Username: " . $result->head_email;		$message .= "<br>Password: " . $pass;		$message .= "<br>Best Regards<br>IT Team";		$this->email->message($message);		if ($this->email->send()) {		} else {		}	}	public function get_all_center_new_enquiry_ajax($length, $start, $search)	{		$this->db->select('tbl_center_enquiry.*,countries.name as country_name,states.name as state_name,cities.name as city_name');		$this->db->where('tbl_center_enquiry.is_deleted', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_center_enquiry.center_name', $search);			$this->db->or_like('tbl_center_enquiry.head_name', $search);			$this->db->or_like('tbl_center_enquiry.contact_person_name', $search);			$this->db->or_like('tbl_center_enquiry.mobile', $search);			$this->db->or_like('tbl_center_enquiry.email', $search);			$this->db->or_like('tbl_center_enquiry.pincode', $search);			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->group_end();		}		$this->db->join('countries', 'countries.id = tbl_center_enquiry.country');		$this->db->join('states', 'states.id = tbl_center_enquiry.state');		$this->db->join('cities', 'cities.id = tbl_center_enquiry.city');		$this->db->order_by('tbl_center_enquiry.id', 'DESC');		$this->db->limit($length, $start);		$result = $this->db->get('tbl_center_enquiry');		return $result->result();	}	public function get_all_center_new_enquiry_ajax_count($search)	{		$this->db->select('tbl_center_enquiry.*,countries.name as country_name,states.name as state_name,cities.name as city_name');		$this->db->where('tbl_center_enquiry.is_deleted', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_center_enquiry.center_name', $search);			$this->db->or_like('tbl_center_enquiry.head_name', $search);			$this->db->or_like('tbl_center_enquiry.contact_person_name', $search);			$this->db->or_like('tbl_center_enquiry.mobile', $search);			$this->db->or_like('tbl_center_enquiry.email', $search);			$this->db->or_like('tbl_center_enquiry.pincode', $search);			$this->db->or_like('countries.name', $search);			$this->db->or_like('states.name', $search);			$this->db->or_like('cities.name', $search);			$this->db->group_end();		}		$this->db->join('countries', 'countries.id = tbl_center_enquiry.country');		$this->db->join('states', 'states.id = tbl_center_enquiry.state');		$this->db->join('cities', 'cities.id = tbl_center_enquiry.city');		$result = $this->db->get('tbl_center_enquiry');		return $result->num_rows();	}	public function get_active_course_all()	{		$this->db->select('tbl_course.course_name,tbl_course.id');		$this->db->where('tbl_course_stream_relation.is_deleted', '0');		$this->db->where('tbl_course_stream_relation.status', '1');		$this->db->order_by('tbl_course.course_name', 'ASC');		$this->db->group_by('tbl_course_stream_relation.course');		$this->db->join('tbl_faculty', 'tbl_faculty.id = tbl_course_stream_relation.faculty');		$this->db->join('tbl_course', 'tbl_course.id = tbl_course_stream_relation.course');		$result = $this->db->get('tbl_course_stream_relation');		return $result->result();	}	public function get_active_course(){ 		$this->db->where('id',$this->uri->segment(2));		$center = $this->db->get('tbl_center');		$center = $center->row();		$this->db->select('tbl_course.course_name,tbl_course.id'); 		$this->db->where('tbl_course_stream_relation.is_deleted', '0'); 		$this->db->where('tbl_course_stream_relation.status', '1'); 		$this->db->order_by('tbl_course.course_name', 'ASC'); 		$this->db->group_by('tbl_course_stream_relation.course'); 			if($center->center_type == "0"){		    $course_type = ['0','2'];		    $this->db->where_in('tbl_course.course_type', $course_type); 			//$this->db->where('tbl_course.course_type', '0'); 		}else if($center->center_type == "1"){			$this->db->where('tbl_course.course_type', '1'); 		}else if($center->center_type == "2"){			$this->db->where('tbl_course.course_type', '2'); 		}		if (isset($_GET['search']) && $_GET['search']) { 			$searchTerm = $this->input->get('search', true); 			$this->db->like('tbl_course.course_name', $searchTerm); 		} 		$this->db->join('tbl_faculty', 'tbl_faculty.id = tbl_course_stream_relation.faculty'); 		$this->db->join('tbl_course', 'tbl_course.id = tbl_course_stream_relation.course'); 		$result = $this->db->get('tbl_course_stream_relation'); 		return $result->result(); 	}	public function get_active_course_pulp()	{		$this->db->select('tbl_course.course_name,tbl_course.id');		$this->db->where('tbl_course.is_deleted', '0');		$this->db->where('tbl_course.status', '1');		$this->db->where('tbl_course.course_type', '1');		 		$this->db->order_by('tbl_course.course_name', 'ASC');		$result = $this->db->get('tbl_course');		return $result->result();	}	public function update_center_course(){ 		$stream_id = $this->input->post('stream_data');		$fees = $this->input->post('fees');		$percentage = $this->input->post('percentage');		$total_paid_fees = $this->input->post('total_paid_fees');		$foregin_fees = $this->input->post('foreign_fees');		$registration_fees = $this->input->post('registration_fees');		$examination_fees = $this->input->post('examination_fees');		$total_paid_fees = $this->input->post('total_paid_fees');				$old_course = array(			'is_deleted' => '1'		);		$this->db->where('center_id',$this->input->post('id'));		$this->db->where('course_id',$this->input->post('course_id')); 		$this->db->update('tbl_center_fees',$old_course); 		if(!empty($stream_id)){			for ($f = 0; $f < count($stream_id); $f++) {				$this->db->where('center_id',$this->input->post('id'));				$this->db->where('course_id',$this->input->post('course_id'));				$this->db->where('stream_id',$stream_id[$f]);				$exist = $this->db->get('tbl_center_fees');				$exist = $exist->row();				if(!empty($exist)){					$update_data = array(						'old_id' 			=> $exist->id,						'actual_fees' 		=> $exist->actual_fees,						'percentage'	 	=> $exist->percentage,						'center_id' 		=> $exist->center_id,						'course_id' 		=> $exist->course_id,						'stream_id' 		=> $exist->stream_id,						'fees' 				=> $exist->fees,						'exam_fees' 		=> $exist->exam_fees,						'registration_fees' => $exist->registration_fees,						'foregin_fees' 		=> $exist->foregin_fees, 						'created_on' 		=> date("Y-m-d H:i:s"),					);					$this->db->insert('tbl_center_fees_history',$update_data);										$update_data = array(						'actual_fees' 		=> $fees[$f],						'percentage'	 	=> $percentage[$f],						'center_id' 		=> $this->input->post('id'),						'course_id' 		=> $this->input->post('course_id'),						'stream_id' 		=> $stream_id[$f],						'fees' 				=> $total_paid_fees[$f],						'exam_fees' 		=> $examination_fees[$f],						'registration_fees' => $registration_fees[$f],						'foregin_fees' 		=> $foregin_fees[$f],						'status' 			=> '1',						'is_deleted'		=> '0',					);					$this->db->where('id',$exist->id);					$this->db->update('tbl_center_fees',$update_data);				}else{					$update_data = array(						'actual_fees' 		=> $fees[$f],						'percentage'	 	=> $percentage[$f],						'center_id' 		=> $this->input->post('id'),						'course_id' 		=> $this->input->post('course_id'),						'stream_id' 		=> $stream_id[$f],						'fees' 				=> $total_paid_fees[$f],						'exam_fees' 		=> $examination_fees[$f],						'registration_fees' => $registration_fees[$f],						'foregin_fees' 		=> $foregin_fees[$f],						'status' 			=> '1',						'is_deleted' 		=> '0',						'created_on' 		=> date("Y-m-d H:i:s"),					);					$this->db->insert('tbl_center_fees',$update_data);				}			}		}		return true; 	 		/*$course = implode(',', $_POST['stream']);		$data = array(			'courses' => $course		);		$this->db->where('id', $this->input->post('id'));		$this->db->update('tbl_center', $data);		return true;*/	}	public function get_course_stream($course)	{		$this->db->select('tbl_stream.stream_name,tbl_course_stream_relation.id');		$this->db->where('tbl_course_stream_relation.is_deleted', '0');		$this->db->where('tbl_course_stream_relation.status', '1');		$this->db->where('tbl_course_stream_relation.course', $course);		$this->db->order_by('tbl_stream.stream_name', 'ASC');		$this->db->join('tbl_stream', 'tbl_stream.id = tbl_course_stream_relation.stream');		$result = $this->db->get('tbl_course_stream_relation');		return $result->result();	}	public function get_course_stream_with_fees($course, $center)	{		$this->db->select('tbl_stream.stream_name, tbl_course_stream_relation.stream, tbl_course_stream_relation.id');		$this->db->where('tbl_course_stream_relation.is_deleted', '0');		$this->db->where('tbl_course_stream_relation.status', '1');		$this->db->where('tbl_course_stream_relation.course', $course);		$this->db->order_by('tbl_stream.stream_name', 'ASC');		$this->db->join('tbl_stream', 'tbl_stream.id = tbl_course_stream_relation.stream');		$course_streams = $this->db->get('tbl_course_stream_relation')->result();		if (empty($course_streams)) {			return [];		} 		$stream_ids = array_column($course_streams, 'stream'); 		$this->db->where('course_id', $course);		$this->db->where('center_id', $center);		$this->db->where_in('stream_id', $stream_ids);		$this->db->where('is_deleted', '0');		$center_fees = $this->db->get('tbl_center_fees')->result_array();		$center_fees_map = [];		foreach ($center_fees as $fee) {			$center_fees_map[$fee['stream_id']] = $fee;		}		// Fetch general fees for all streams in one query 		$this->db->where('course_id', $course);		$this->db->where_in('stream_id', $stream_ids);		$this->db->where('is_deleted', '0');		$fees_data = $this->db->get('tbl_fees_realtion')->result_array();		$fees_data_map = [];		foreach ($fees_data as $fee) {			$fees_data_map[$fee['stream_id']] = $fee;		}		// Iterate through each stream and attach fees/center information		foreach ($course_streams as $i => $stream) {			$stream_id = $stream->stream;			// Attach center fee information			if (isset($center_fees_map[$stream_id])) {				$center_fee = $center_fees_map[$stream_id];				$course_streams[$i]->center_course_id = $center_fee['course_id'];				$course_streams[$i]->center_stream_id = $center_fee['stream_id'];				$course_streams[$i]->fees_peky = $center_fee['id'];				$course_streams[$i]->actual_fees = $center_fee['actual_fees'];				$course_streams[$i]->percentage = $center_fee['percentage'];				$course_streams[$i]->exam_fees = $center_fee['exam_fees'];				$course_streams[$i]->registration_fees = $center_fee['registration_fees'];				$course_streams[$i]->paid_fees = $center_fee['fees'];				$course_streams[$i]->foregin_fees = $center_fee['foregin_fees'];				$course_streams[$i]->fees_session_id = $center_fee['session_id'];			} else {				$course_streams[$i]->center_course_id = 0;				$course_streams[$i]->center_stream_id = 0;				$course_streams[$i]->fees_peky = "0";				$course_streams[$i]->percentage = "";				$course_streams[$i]->exam_fees = "";				$course_streams[$i]->registration_fees = "";				$course_streams[$i]->paid_fees = "";				$course_streams[$i]->foregin_fees = "";				$course_streams[$i]->fees_session_id = "";				$course_streams[$i]->actual_fees = "0";			}			// Attach fee information			if (isset($fees_data_map[$stream_id])) {				$fee = $fees_data_map[$stream_id];				$course_streams[$i]->fees = $fee['fees'];				// $course_streams[$i]->actual_fees = $fee['actual_fees'];			} else {				$course_streams[$i]->fees = 0;				//$course_streams[$i]->actual_fees = "0";			}		}		return $course_streams;	}	public function center_send_login()	{		$password = date("Ymd");		$data = array(			'password' => md5($password)		);		$this->db->where('id', $this->uri->segment(2));		$this->db->update('tbl_center', $data);		$this->db->where('id', $this->uri->segment(2));		$result = $this->db->get('tbl_center');		$result = $result->row();		$this->load->library('email');		$config['protocol'] = 'sendmail';		$config['mailpath'] = '/usr/sbin/sendmail';		$config['mailtype'] = 'html';		$config['charset'] = 'iso-8859-1';		$config['wordwrap'] = TRUE;		$this->email->initialize($config);		$this->email->from(no_reply_mail);		$this->email->to($result->head_email);		$this->email->subject('Login Details |' . no_reply_name);		$this->email->set_mailtype('html');		$message = "Dear " . $result->head_name . ",<br><br> I hope this email finds you well. Below is the Login Detail for Center Login.<br>";		$message .= "<br>URL: " . base_url() . "center-access";		$message .= "<br>Username: " . $result->head_email;		$message .= "<br>Password: " . $password;		$message .= "<br><br>Best Regards,<br>IT Team";		$this->email->message($message);		if ($this->email->send()) {		} else {		}		return true;	}	public function get_course_stream_subject_ajax()	{		$this->db->select('id, subject_name');		$this->db->where('is_deleted', '0');		$this->db->where('status', '1');		$this->db->where('course', $this->input->post('course'));		$this->db->where('stream', $this->input->post('stream'));		$result = $this->db->get('tbl_subject');		echo json_encode($result->result());	}	public function get_active_center()	{		$this->db->where('operation', '1');		$this->db->where('is_deleted', '0');		$this->db->where('status', '1');		$this->db->order_by('center_name', 'ASC');		$result = $this->db->get('tbl_center');		return $result->result();	}	public function set_center_subject_share()	{		$data = array(			'center_id' 	=> $this->input->post('center'),			'course_id'		=> $this->input->post('course'),			'stream_id'		=> $this->input->post('stream'),			'share'			=> $this->input->post('share'),		);		if ($this->input->post('id') == "") {			$date = array(				'created_on' => date("Y-m-d H:i:s")			);			$new_arr = array_merge($data, $date);			$this->db->insert('tbl_center_subject_share', $new_arr);			return 0;		} else {			$this->db->where('id', $this->input->post('id'));			$this->db->update('tbl_center_subject_share', $data);			return 1;		}	}	public function get_all_course_share($length, $start, $search)	{		$this->db->select('tbl_center_subject_share.*,tbl_stream.stream_name,tbl_center.center_name,tbl_course.course_name');		$this->db->where('tbl_center_subject_share.is_deleted', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_stream.stream_name', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->or_like('tbl_course.course_name', $search);			$this->db->or_like('tbl_center_subject_share.share', $search);			$this->db->group_end();		}		$this->db->join('tbl_stream', 'tbl_stream.id = tbl_center_subject_share.stream_id');		$this->db->join('tbl_center', 'tbl_center.id = tbl_center_subject_share.center_id');		$this->db->join('tbl_course', 'tbl_course.id = tbl_center_subject_share.course_id');		$this->db->order_by('tbl_center_subject_share.id', 'ASC');		$result = $this->db->get('tbl_center_subject_share');		return $result->result();	}	public function get_all_course_share_count($search)	{		$this->db->select('tbl_center_subject_share.*,tbl_stream.stream_name,tbl_center.center_name,tbl_course.course_name');		$this->db->where('tbl_center_subject_share.is_deleted', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_stream.stream_name', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->or_like('tbl_course.course_name', $search);			$this->db->or_like('tbl_center_subject_share.share', $search);			$this->db->group_end();		}		$this->db->join('tbl_stream', 'tbl_stream.id = tbl_center_subject_share.stream_id');		$this->db->join('tbl_center', 'tbl_center.id = tbl_center_subject_share.center_id');		$this->db->join('tbl_course', 'tbl_course.id = tbl_center_subject_share.course_id');		$result = $this->db->get('tbl_center_subject_share');		return $result->num_rows();	}	public function get_single_course_share()	{		$this->db->where('id', $this->uri->segment(2));		$result = $this->db->get('tbl_center_subject_share');		return $result->row();	}	public function get_selected_stram($course)	{		$this->db->select('tbl_course_stream_relation.*,tbl_stream.stream_name');		$this->db->where('tbl_course_stream_relation.is_deleted', '0');		$this->db->where('tbl_course_stream_relation.course', $course);		$this->db->order_by('tbl_stream.stream_name', 'ASC');		$this->db->join('tbl_stream', 'tbl_stream.id = tbl_course_stream_relation.stream');		$result = $this->db->get('tbl_course_stream_relation');		return $result->result();	}	public function get_center_active_admissions($center)	{		$this->db->where('center_id', $center);		$this->db->where('admission_status', '1');		$this->db->where('is_deleted', '0');		$result = $this->db->get('tbl_student');		return $result->num_rows();	}	public function get_active_centers()	{		$this->db->where('is_deleted', '0');		$this->db->where('status', '1');		$this->db->order_by('center_name', 'ASC');		$result = $this->db->get('tbl_center');		return $result->result();	}	public function get_single_center_login()	{		$this->db->where('is_deleted', '0');		$this->db->where('id', $this->uri->segment(2));		$result = $this->db->get('tbl_center_login');		return $result->row();	}	public function get_all_centers_login()	{		$this->db->select('tbl_center_login.*,tbl_center.center_name');		$this->db->join('tbl_center', 'tbl_center.id = tbl_center_login.center_id');		$this->db->where('tbl_center_login.is_deleted', '0');		$result = $this->db->get('tbl_center_login');		return $result->result();	}	public function set_center_login()	{		$data = array(			'center_id' 	=> $this->input->post('center'),			'username'		=> $this->input->post('username'),			'password'		=> $this->input->post('password'),		);		if ($this->input->post('old_id') == "") {			$date = array(				'created_on' => date("Y-m-d H:i:s")			);			$new_arr = array_merge($data, $date);			$this->db->insert('tbl_center_login', $new_arr);			return 0;		} else {			$this->db->where('id', $this->input->post('old_id'));			$this->db->update('tbl_center_login', $data);			return 1;		}	}	public function set_cluster_center()	{		$centers_array = $this->input->post('center');		$centers = implode(',', $centers_array);		$data = array(			'name' 			=> $this->input->post('name'),			'centers' 		=> $centers,			'remark'		=> $this->input->post('remark'),			'username'		=> $this->input->post('username'),			'password'		=> $this->input->post('password'),		);		if ($this->input->post('old_id') == "") {			$date = array(				'created_on' => date("Y-m-d H:i:s")			);			$new_arr = array_merge($data, $date);			$this->db->insert('tbl_cluster_center', $new_arr);			return 0;		} else {			$this->db->where('id', $this->input->post('old_id'));			$this->db->update('tbl_cluster_center', $data);			return 1;		}	}	public function get_single_cluster_center()	{		$this->db->where('is_deleted', '0');		$this->db->where('id', $this->uri->segment(2));		$result = $this->db->get('tbl_cluster_center');		return $result->row();	}	public function get_all_cluster_center()	{		$this->db->where('is_deleted', '0');		$this->db->order_by('id', 'DESC');		$result = $this->db->get('tbl_cluster_center');		return $result->result();	}	public function set_private_received_account()	{		$data = array(			'center_id' 		=> $this->input->post('center_id'),			'bank_name' 		=> $this->input->post('bank_name'),			'recipient_name' 	=> $this->input->post('recipient_name'),			'benificiary_name' 	=> $this->input->post('benificiary_name'),			'benificiary_bank' 	=> $this->input->post('benificiary_bank'),			'date' 				=> date("Y-m-d", strtotime($this->input->post('date'))),			'amount'			=> $this->input->post('center_amount'),			'remark'			=> $this->input->post('remark'),			'created_on'		=> date("Y-m-d H:i:s"),		);		$this->db->insert('tbl_center_private_received_amount', $data);		$last_id = $this->db->insert_id();		$ref = date("Ymd") . $last_id;		$update_data = array(			'ref_number' => $ref		);		$this->db->where('id', $last_id);		$this->db->update('tbl_center_private_received_amount', $update_data);		return 0;	}	public function get_private_received_account()	{		$this->db->where('is_deleted', '0');		$this->db->where('center_id', $this->uri->segment(2));		$this->db->order_by('date', 'DESC');		$result = $this->db->get('tbl_center_private_received_amount');		$result = $result->result();		if (!empty($result)) {			$k = 0;			foreach ($result as $result_res) {				$this->db->select('SUM(tbl_center_student_separate_ledger.amount) as total');				$this->db->where('tbl_center_student_separate_ledger.is_deleted', '0');				$this->db->where('tbl_center_student_separate_ledger.reference_number', $result_res->ref_number);				$this->db->join('tbl_student', 'tbl_student.enrollment_number = tbl_center_student_separate_ledger.enrollment_number');				$sum_data = $this->db->get('tbl_center_student_separate_ledger');				$sum_data = $sum_data->row();				$result[$k]->balance = $sum_data->total;				$k++;			}			//echo "<pre>";print_r($result);exit;			return $result;		}	}	public function set_center_ledger_account()	{		$data = array(			'center_id' 			=> $this->input->post('center'),			'enrollment_number' 	=> $this->input->post('enrollment_number'),			'student_name' 			=> $this->input->post('student_name'),			'session'				=> $this->input->post('session'),			'total_amount'			=> $this->input->post('total_amount'),			'amount'				=> $this->input->post('amount'),			'installment'			=> $this->input->post('installment'),			'reference_number'		=> $this->input->post('reference_number'),			'date'					=> date("Y-m-d"),			'created_on'			=> date("Y-m-d H:i:s"),		);		$this->db->insert('tbl_center_student_separate_ledger', $data);		return 0;	}	public function set_center_bulk_ledger_account($data)	{		$this->db->insert_batch('tbl_center_student_separate_ledger', $data);		return 0;	}	public function delete_multiple_account_id()	{		$id = $this->input->post('delete_multiple');		$data = array(			'is_deleted' => '1'		);		$ids = array();		if (count($id) > 0) {			for ($i = 0; $i <= count($id); $i++) {				$ids[] = $id[$i];			}			if (!empty($ids)) {				$this->db->where_in('id', $ids);				$this->db->update('tbl_center_student_separate_ledger', $data);			}		}		return true;	}	public function get_center_ledger()	{		$this->db->select('tbl_center_student_separate_ledger.*');		$this->db->where('tbl_center_student_separate_ledger.center_id', $this->uri->segment(2));		$this->db->where('tbl_center_student_separate_ledger.is_deleted', '0');		$this->db->join('tbl_student', 'tbl_student.enrollment_number = tbl_center_student_separate_ledger.enrollment_number');		$this->db->group_by('tbl_center_student_separate_ledger.enrollment_number');		$this->db->order_by('tbl_center_student_separate_ledger.id', 'DESC');		$result = $this->db->get('tbl_center_student_separate_ledger');		return $result->result();	}	public function get_student_ledger_individual($enrollment_number)	{		$this->db->select('tbl_center_student_separate_ledger.*,tbl_student.student_name,tbl_course.course_name,tbl_stream.stream_name,tbl_session.session_name,');		$this->db->where('tbl_center_student_separate_ledger.enrollment_number', $enrollment_number);		$this->db->where('tbl_center_student_separate_ledger.is_deleted', '0');		$this->db->join('tbl_student', 'tbl_student.enrollment_number = tbl_center_student_separate_ledger.enrollment_number');		$this->db->join('tbl_course', 'tbl_course.id = tbl_student.course_id', 'left');		$this->db->join('tbl_stream', 'tbl_stream.id = tbl_student.stream_id', 'left');		$this->db->join('tbl_session', 'tbl_session.id = tbl_student.session_id', 'left');		$this->db->order_by('tbl_center_student_separate_ledger.installment', 'ASC');		$result = $this->db->get('tbl_center_student_separate_ledger');		return $result->result();	}	public function get_student_ledger_statement()	{		$this->db->where('tbl_center_student_separate_ledger.center_id', $this->uri->segment(2));		$this->db->where('tbl_center_student_separate_ledger.is_deleted', '0');		$this->db->order_by('installment', 'ASC');		$result = $this->db->get('tbl_center_student_separate_ledger');		return $result->result();	}	public function get_ledger_center_student()	{		$this->db->where('enrollment_number', $this->input->post('enrollment_number'));		$this->db->where('center_id', $this->input->post('center'));		$result = $this->db->get('tbl_student');		$result = $result->row();		if (!empty($result)) {			$this->db->where('enrollment_number', $result->enrollment_number);			$ledger = $this->db->get('tbl_center_student_separate_ledger');			$ledger = $ledger->row();			if (!empty($ledger)) {				$session = $ledger->session;				$total_amount = $ledger->total_amount;			} else {				$session = "";				$total_amount = "";			}			echo $result->student_name . '@@@' . $session . '@@@' . $total_amount;		} else {			echo "";		}	}	public function get_all_information_center_failed_list($length, $start, $search)	{		$this->db->where('is_deleted', '0');		$this->db->where('payment_status', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('center_reference_number', $search);			$this->db->or_like('center_name', $search);			$this->db->or_like('information_person_name', $search);			$this->db->or_like('information_email', $search);			$this->db->or_like('information_mobile', $search);			$this->db->or_like('information_address', $search);			$this->db->or_like('payment_id', $search);			$this->db->group_end();		}		$this->db->order_by('id', 'DESC');		$this->db->limit($length, $start);		$result = $this->db->get('tbl_information_center_leads');		return $result->result();	}	public function get_all_information_center_failed_list_count($search)	{		$this->db->where('is_deleted', '0');		$this->db->where('payment_status', '0');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('center_reference_number', $search);			$this->db->or_like('center_name', $search);			$this->db->or_like('information_person_name', $search);			$this->db->or_like('information_email', $search);			$this->db->or_like('information_mobile', $search);			$this->db->or_like('information_address', $search);			$this->db->or_like('payment_id', $search);			// $this->db->or_like('amount',$search); 			// $this->db->or_like('payment_date',$search); 			$this->db->group_end();		}		$result = $this->db->get('tbl_information_center_leads');		return $result->num_rows();	}	public function get_all_information_center_success_list($length, $start, $search)	{		$this->db->where('is_deleted', '0');		$this->db->where('payment_status', '1');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('center_reference_number', $search);			$this->db->or_like('center_name', $search);			$this->db->or_like('information_person_name', $search);			$this->db->or_like('information_email', $search);			$this->db->or_like('information_mobile', $search);			$this->db->or_like('information_address', $search);			$this->db->or_like('payment_id', $search);			$this->db->group_end();		}		$this->db->order_by('id', 'DESC');		$this->db->limit($length, $start);		$result = $this->db->get('tbl_information_center_leads');		return $result->result();	}	public function get_all_information_center_success_list_count($search)	{		$this->db->where('is_deleted', '0');		$this->db->where('payment_status', '1');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('center_reference_number', $search);			$this->db->or_like('center_name', $search);			$this->db->or_like('information_person_name', $search);			$this->db->or_like('information_email', $search);			$this->db->or_like('information_mobile', $search);			$this->db->or_like('information_address', $search);			$this->db->or_like('payment_id', $search);			$this->db->group_end();		}		$result = $this->db->get('tbl_information_center_leads');		return $result->num_rows();	}	public function get_single_information_center_data()	{		$this->db->where('id', $this->uri->segment(2));		$result = $this->db->get('tbl_information_center_leads');		return $result->row();	}	public function set_update_information_payment()	{		$data = array(			'amount' 			=> $this->input->post('amount'),			'payment_id' 		=> $this->input->post('payment_id'),			'payment_status' 	=> $this->input->post('payment_status'),		);		$this->db->where('id', $this->input->post('id'));		$this->db->update('tbl_information_center_leads', $data);		return true;	}	public function get_all_documents()	{		$this->db->where('is_deleted', '0');		$this->db->where('id', $this->uri->segment(2));		$result = $this->db->get('tbl_center');		return $result->result();	}	public function get_all_documents_count($search)	{		$this->db->where('is_deleted', '0');		$this->db->where('id', $this->uri->segment(2));		// if($search !=""){		// 	$this->db->group_start();		// 	$this->db->or_like('description',$search);		// 	$this->db->group_end();		// }		$result = $this->db->get('tbl_center');		return $result->num_rows();	}	public function get_all_enquiry_documents()	{		$this->db->where('is_deleted', '0');		$this->db->where('id', $this->uri->segment(2));		$result = $this->db->get('tbl_center_enquiry');		return $result->result();	}	public function get_all_enquiry_documents_count($search)	{		$this->db->where('is_deleted', '0');		$this->db->where('id', $this->uri->segment(2));		// if($search !=""){		// 	$this->db->group_start();		// 	$this->db->or_like('description',$search);		// 	$this->db->group_end();		// }		$result = $this->db->get('tbl_center_enquiry');		return $result->num_rows();	}	public function get_all_session()	{		$this->db->where('is_deleted', '0');		$this->db->order_by('id', 'DESC');		$result = $this->db->get('tbl_session');		return $result->result();	}	public function get_all_session_course()	{		$this->db->where('is_deleted', '0');		$this->db->order_by('id', 'ASC');		$result = $this->db->get('tbl_session');		return $result->result();	}	public function set_center_fees_ajax(){		$data = array(			'course_id' 		=> $this->input->post('course_id'),			'stream_id' 		=> $this->input->post('stream_id'),			'actual_fees' 		=> $this->input->post('fees'),			'percentage' 		=> $this->input->post('percentage'),			'fees' 				=> $this->input->post('total_paid_fees'),			'foregin_fees' 		=> $this->input->post('foreign_fees'),			'registration_fees' => $this->input->post('registration_fees'),			'exam_fees' 		=> $this->input->post('examination_fees'),			'center_id' 		=> $this->input->post('center'),			'session_id' 		=> 0,		);		$this->db->where('course_id', $this->input->post('course_id'));		$this->db->where('stream_id', $this->input->post('stream_id'));		$this->db->where('center_id', $this->input->post('center'));		//$this->db->where('session_id', $this->input->post('session'));		$this->db->where('is_deleted', '0');		$exist = $this->db->get('tbl_center_fees');		$exist = $exist->row();		if (empty($exist)) {			$date = array(				'created_on' => date("Y-m-d H:i:s")			);			$new_arr = array_merge($data, $date);			$this->db->insert('tbl_center_fees', $new_arr);			echo $this->db->insert_id();		} else {			$this->db->where('course_id', $this->input->post('course_id'));			$this->db->where('stream_id', $this->input->post('stream_id'));			$this->db->where('center_id', $this->input->post('center')); 			$this->db->where('is_deleted', '0');			$this->db->update('tbl_center_fees', $data);			echo $this->input->post('id');		}		return true;	}	public function remove_course_fees_center()	{		$data = array(			'is_deleted' => '1'		);		$this->db->where('id', $this->input->post('id'));		$this->db->update('tbl_center_fees', $data);		return true;	}	public function get_all_wallet_transaction_ajax($length, $start, $search)	{		$this->db->select('tbl_center.center_name,tbl_center_wallet_history.*');		$this->db->where('tbl_center_wallet_history.is_deleted', '0');		$this->db->where('tbl_center_wallet_history.transaction_type', '1');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_center_wallet_history.transaction_id', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->group_end();		}		$this->db->order_by('tbl_center_wallet_history.id', 'DESC');		$this->db->limit($length, $start);		$this->db->join('tbl_center', 'tbl_center.id = tbl_center_wallet_history.center_id');		$result = $this->db->get('tbl_center_wallet_history');		return $result->result();	}	public function get_all_wallet_transaction_ajax_count($search)	{		$this->db->select('tbl_center.center_name,tbl_center_wallet_history.*');		$this->db->where('tbl_center_wallet_history.is_deleted', '0');		$this->db->where('tbl_center_wallet_history.transaction_type', '1');		if ($search != "") {			$this->db->group_start();			$this->db->or_like('tbl_center_wallet_history.transaction_id', $search);			$this->db->or_like('tbl_center.center_name', $search);			$this->db->group_end();		}		$this->db->order_by('tbl_center_wallet_history.id', 'DESC');		$this->db->join('tbl_center', 'tbl_center.id = tbl_center_wallet_history.center_id');		$result = $this->db->get('tbl_center_wallet_history');		return $result->num_rows();	}	public function get_single_wallet_data()	{		$this->db->where('is_deleted', '0');		//$this->db->where('transaction_type','1');		$this->db->where('id', $this->uri->segment(2));		$result = $this->db->get('tbl_center_wallet_history');		return $result->row();	}	public function set_update_wallet()	{		$data = array(			'payment_date' 		=> date("Y-m-d", strtotime($this->input->post('payment_date'))),			'amount' 			=> $this->input->post('amount'),			'transaction_id' 	=> $this->input->post('transaction_id'),			'payment_status' 	=> $this->input->post('payment_status'),			'updated_by' 		=> $this->session->userdata('admin_id'),		);		$this->db->where('id', $this->input->post('id'));		$this->db->update('tbl_center_wallet_history', $data);		if ($this->input->post('payment_status') == "1") {			$this->db->where('center_id', $this->input->post('center_id'));			$wallet = $this->db->get('tbl_center_wallet');			$wallet = $wallet->row();			$wallet_data = array(				'amount' => $wallet->amount + $this->input->post('amount')			);			$this->db->where('center_id', $this->input->post('center_id'));			$wallet = $this->db->update('tbl_center_wallet', $wallet_data);		}		return true;	}	public function set_center_course_fees()	{		$update_records = array(			'is_deleted' => '1'		);		$this->db->where('center_id', $this->input->post('to_center'));		$this->db->update('tbl_center_fees', $update_records);				$this->db->where('center_id', $this->input->post('from_center'));		$this->db->where('is_deleted', '0');		$this->db->where('status', '1');		$from_center = $this->db->get('tbl_center_fees');		$from_center = $from_center->result();		$data = array();		if (!empty($from_center)) {			foreach ($from_center as $from_center_result) {				$data[] = array(					'session_id' 		=> '0',					'actual_fees'		=> $from_center_result->actual_fees,					'percentage' 		=> $from_center_result->percentage,					'center_id' 		=> $this->input->post('to_center'),					'course_id' 		=> $from_center_result->course_id,					'stream_id' 		=> $from_center_result->stream_id,					'fees' 				=> $from_center_result->fees,					'exam_fees' 		=> $from_center_result->exam_fees,					'registration_fees' => $from_center_result->registration_fees,					'foregin_fees' 		=> $from_center_result->foregin_fees,					'created_on' 		=> date("Y-m-d H:i:s"),				);			}		}		if (!empty($data)) {			$this->db->insert_batch('tbl_center_fees', $data);		}		redirect('assign_course/' . $this->input->post('to_center'));	}	public function get_center_data_for_dropdown()	{		$this->db->select('tbl_center.id,tbl_center.center_name');		$this->db->where("is_deleted", "0");		$result = $this->db->get("tbl_center")->result();		return $result;	}	public function set_wallet_payment()	{		$this->db->where('center_id', $this->input->post('center'));		$wallet = $this->db->get('tbl_center_wallet')->row();		$data = array(			'payment_date' 		=> date("Y-m-d", strtotime($this->input->post('payment_date'))),			'amount' 			=> $this->input->post('amount'),			'transaction_id' 	=> $this->input->post('transaction_id'),			'payment_status' 	=> $this->input->post('payment_status'),			'updated_by' 		=> $this->session->userdata('admin_id'),			'center_id' 		=> $this->input->post('center'),		);		if ($wallet) {			$data['wallet_id'] = $wallet->id;		} else {			$data['wallet_id'] = '0';		}		if ($this->input->post('id') == "") {			$date = array(				'created_on' => date("Y-m-d H:i:s")			);			$new_arr = array_merge($data, $date);			$this->db->insert('tbl_center_wallet_history', $new_arr);			if ($this->input->post('payment_status') == "1") {				$this->db->where('center_id', $this->input->post('center'));				$wallet = $this->db->get('tbl_center_wallet');				if ($wallet->num_rows() > 0) {					$wallet = $wallet->row();					$wallet_data = array(						'amount' => $wallet->amount + $this->input->post('amount')					);					$this->db->where('center_id', $this->input->post('center'));					$this->db->update('tbl_center_wallet', $wallet_data);				} else {					$wallet_data = array(						'center_id' => $this->input->post('center'),						'amount' => $this->input->post('amount')					);					$this->db->insert('tbl_center_wallet', $wallet_data);				}			}			return true;		}	}	public function check_unique_transaction()	{		$this->db->where('is_deleted', '0');		if ($this->input->post('id') != '' && $this->input->post('id') != '0') {			$this->db->where("id !=", $this->input->post('id'));		}		$this->db->where('transaction_id', $this->input->post('transaction'));		$res = $this->db->get('tbl_center_wallet_history')->row();		if (!empty($res)) {			echo "1";		} else {			echo "0";		}	}			public function get_all_center_document_status_ajax($length, $start, $search){		$this->db->select('tbl_center.*, countries.name as country_name, states.name as state_name, cities.name as city_name'); 		$this->db->where('tbl_center.is_deleted', '0');		$this->db->where('tbl_center.status', '1');		$this->db->where('tbl_center.operation', '1');		if ($search != "") {			$this->db->group_start();						$this->db->or_like('tbl_center.center_name', $search);			$this->db->or_like('tbl_center.head_name', $search);			$this->db->group_end();		} 		$this->db->join('countries', 'countries.id = tbl_center.country');		$this->db->join('states', 'states.id = tbl_center.state');		$this->db->join('cities', 'cities.id = tbl_center.city'); 		$this->db->order_by('tbl_center.id', 'DESC'); 		if ($length <= 0) $length = 10; // default length		if ($start < 0) $start = 0; // default start		$this->db->limit($length, $start); 		$result = $this->db->get('tbl_center');		$result = $result->result();		return $result;	}	public function get_all_center_document_status_count($search){		$this->db->select('tbl_center.*, countries.name as country_name, states.name as state_name, cities.name as city_name');				// Basic filtering conditions		$this->db->where('tbl_center.is_deleted', '0');		$this->db->where('tbl_center.status', '1');		$this->db->where('tbl_center.operation', '1');		// Search query block (only apply if search term is provided)		if ($search != "") {			$this->db->group_start();						$this->db->or_like('tbl_center.center_name', $search);			$this->db->or_like('tbl_center.head_name', $search);			$this->db->group_end();		}		// Join related tables		$this->db->join('countries', 'countries.id = tbl_center.country');		$this->db->join('states', 'states.id = tbl_center.state');		$this->db->join('cities', 'cities.id = tbl_center.city');		// Order by latest records		$this->db->order_by('tbl_center.id', 'DESC');		// Execute query and return results		$result = $this->db->get('tbl_center');		return $result->num_rows();	} }