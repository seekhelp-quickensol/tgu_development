<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed'); class Consolidated_model extends CI_Model { 	function __construct(){    	parent::__construct();    }	public function get_name_student(){		$this->db->select('tbl_student.*,tbl_course.course_name,tbl_stream.stream_name');		$this->db->where('tbl_student.is_deleted','0');		$this->db->where('tbl_student.enrollment_number',$this->input->post('enrollment_number'));		$this->db->join('tbl_course','tbl_course.id = tbl_student.course_id');		$this->db->join('tbl_stream','tbl_stream.id = tbl_student.stream_id');		$result =  $this->db->get('tbl_student');		$result = $result->row();		echo json_encode($result);    }    public function set_consolidated_data(){         $data = array (            'enrollment'	=> $this->input->post('enrollment'),            'note'			=> $this->input->post('note'),            'issue_date'	=> date("Y-m-d",strtotime($this->input->post('issue_date'))),            'payment_date'	=> date("Y-m-d",strtotime($this->input->post('payment_date'))),            'payment_id'	=> $this->input->post('payment_id'),             'issue_status'	=> $this->input->post('issue_status'),             'payment_status'=> $this->input->post('payment_status'),         );		$date = array('created_on'=>date('y-m-d H:i:s'));				$this->db->where('enrollment',$this->input->post('enrollment'));		$this->db->where('is_deleted','0');		$exist_con = $this->db->get('tbl_consolidated_marksheet');  		$exist_con = $exist_con->row();		 		if(!empty($exist_con)){ 		    $this->session->set_flashdata('message','Consolidate already added');		    redirect($_SERVER['HTTP_REFERER']);			$this->db->where('id',$exist_con->id);			$this->db->update('tbl_consolidated_marksheet',$data);  			$insert_id = $exist_con->id;					}else{  			$newData = array_merge($data,$date);			$this->db->insert('tbl_consolidated_marksheet',$newData);			$insert_id = $this->db->insert_id();		}		$subject_code    = $this->input->post('subject_code');		$subject_name    = $this->input->post('subject_name');		$year_sem        = $this->input->post('year_sem');       		$internal_mark   = $this->input->post('internal_mark');		$external_mark   = $this->input->post('external_mark'); 		$total           = $this->input->post('total'); 		$created_on      = date("Y-m-d H:i:s");		$total_marks     = $this->input->post('total_marks');		$grade     		 = $this->input->post('grade');		$credit     	 = $this->input->post('credit');		$result_val      = $this->input->post('result');		// echo "<pre>";print_r($subject_code);exit;		// $count = count($subject_code); 		$count = isset($subject_code) ? count($subject_code) : 0;		$data12 = array();		for($i=0;$i<$count;$i++){ 		     $this->db->where('consolidate_id',$insert_id);			    $this->db->where('subject_code',$subject_code[$i]);			    $this->db->where('subject_name',$subject_name[$i]); 			    $subject_exist = $this->db->get('tbl_consolidated_marksheet_details');			    $subject_exist = $subject_exist->row();			    if(empty($subject_exist)){			                			$data12 = array(        				"consolidate_id"	=> $insert_id,        				"subject_code"	    => $subject_code[$i],        				"subject_name"	    => $subject_name[$i],        				"year_sem"          => $year_sem[$i],        				"internal_mark"	    => $internal_mark[$i],        				"external_mark"	    => $external_mark[$i],        				"total"		   	    => $total[$i],        				"total_marks"		=> $total_marks[$i],        				"grade"				=> $grade[$i],        				"credit"			=> $credit[$i],        				"result"			=> $result_val[$i],        				"created_on"        => $created_on,        				"added_by"        	=> $this->session->userdata('admin_id'),        			);        			$this->db->insert('tbl_consolidated_marksheet_details',$data12);			    }		}		if($this->input->post('show_subject') == "Continue With other University Subject"){			redirect('add_other_university_subject/'.$this->input->post('enrollment'));		}		return 0;    } 	public function get_credit_transfer_subject($student_id){		$this->db->where('is_deleted','0');		$this->db->where('student_id',$student_id);		$this->db->order_by('year_sem','ASC');		$result = $this->db->get('tbl_student_credit_transfer_subjects');		return $result->result();	}	public function set_consolidated_other_university_subject($file){		$this->db->where('enrollment',$this->input->post('enrollment'));		$this->db->where('is_deleted','0');		$exist = $this->db->get('tbl_consolidated_marksheet');		$exist = $exist->row();		if(empty($exist)){			//$this->session->set_flashdata('message','Please add at least any sem result before adding other university data');			redirect($_SERVER['HTTP_REFERER']);		}else{			$credit_note_data = array(				'note' => $this->input->post('result_university'),			);			$this->db->where('id',$exist->id);			$this->db->update('tbl_consolidated_marksheet',$credit_note_data);			$subject_code    = $this->input->post('subject_code');			$subject_name    = $this->input->post('subject_name');			$year_sem        = $this->input->post('year_sem');       			$internal_mark   = $this->input->post('internal_mark');			$external_mark   = $this->input->post('external_mark'); 			$total           = $this->input->post('total'); 			$created_on      = date("Y-m-d H:i:s");			$total_marks     = $this->input->post('total_marks');			$grade     		 = $this->input->post('grade');			$credit     	 = $this->input->post('credit');			$result_val      = $this->input->post('result');			$year_sem      = $this->input->post('year_sem');			$count = 0;			if($subject_code != ""){				$count = count($subject_code); 			}			// $count = count($subject_code); 			$data = array();			for($i=0;$i<$count;$i++){ 			    $this->db->where('consolidate_id',$exist->id);			    $this->db->where('subject_code',$subject_code[$i]);			    $this->db->where('subject_name',$subject_name[$i]); 			    $subject_exist = $this->db->get('tbl_consolidated_marksheet_details');			    $subject_exist = $subject_exist->row();			    if(empty($subject_exist)){    				$data = array(    					"consolidate_id"	=> $exist->id,    					"subject_code"	    => $subject_code[$i],    					"subject_name"	    => $subject_name[$i],    					"year_sem"          => $year_sem[$i],    					"internal_mark"	    => $internal_mark[$i],    					"external_mark"	    => $external_mark[$i],    					"total"		   	    => $total[$i],    					"total_marks"		=> $total_marks[$i],    					"grade"				=> $grade[$i],    					"credit"			=> $credit[$i],    					"result"			=>"PASS",    					"created_on"        => $created_on,    					"added_by"        	=> $this->session->userdata('admin_id'),    					"university_name"   => $this->input->post('result_university'),    					"result_file"   	=> $file,    					"is_other"   		=> '1',    				);     				$this->db->insert('tbl_consolidated_marksheet_details',$data);			    }			}		}			}    public function get_consolidate_request_list($length,$start,$search){        $this->db->select('tbl_consolidated_marksheet.*,tbl_student.student_name,tbl_course.course_name,tbl_stream.stream_name,tbl_center.center_name');		$this->db->where('tbl_consolidated_marksheet.is_deleted','0'); 		$this->db->where('tbl_consolidated_marksheet.issue_status','0'); 		if($this->session->userdata('admin_id') == "62"){			$this->db->where('tbl_student.center_id','9');  		}		if($search !=""){            $this->db->group_start();             $this->db->or_like('tbl_consolidated_marksheet.enrollment',$search);            $this->db->or_like('tbl_student.student_name',$search);			$this->db->or_like('tbl_course.course_name',$search);			$this->db->or_like('tbl_stream.stream_name',$search);					$this->db->or_like('tbl_center.center_name',$search);					$this->db->group_end();		}        $this->db->join('tbl_student','tbl_student.enrollment_number = tbl_consolidated_marksheet.enrollment');        $this->db->join('tbl_course','tbl_course.id = tbl_student.course_id');        $this->db->join('tbl_stream','tbl_stream.id = tbl_student.stream_id');        $this->db->join('tbl_center','tbl_center.id = tbl_student.center_id');      	$this->db->order_by('tbl_consolidated_marksheet.id','DESC');		$this->db->limit($length,$start);		$result = $this->db->get('tbl_consolidated_marksheet');		return $result->result();	}	public function get_consolidate_request_list_count($search){        $this->db->select('tbl_consolidated_marksheet.enrollment,tbl_consolidated_marksheet.id,tbl_student.student_name,tbl_course.course_name,tbl_stream.stream_name,tbl_center.center_name');		$this->db->where('tbl_consolidated_marksheet.is_deleted','0'); 		$this->db->where('tbl_consolidated_marksheet.issue_status','0');		if($this->session->userdata('admin_id') == "62"){			$this->db->where('tbl_student.center_id','9');  		}				if($search !=""){			$this->db->group_start();             $this->db->or_like('tbl_consolidated_marksheet.enrollment',$search);            $this->db->or_like('tbl_student.student_name',$search);			$this->db->or_like('tbl_course.course_name',$search);			$this->db->or_like('tbl_stream.stream_name',$search);				$this->db->or_like('tbl_center.center_name',$search);			$this->db->group_end();		}        $this->db->join('tbl_student','tbl_student.enrollment_number = tbl_consolidated_marksheet.enrollment');        $this->db->join('tbl_course','tbl_course.id = tbl_student.course_id');        $this->db->join('tbl_stream','tbl_stream.id = tbl_student.stream_id');		$this->db->join('tbl_center','tbl_center.id = tbl_student.center_id');		$this->db->order_by('tbl_consolidated_marksheet.id','DESC');		$result = $this->db->get('tbl_consolidated_marksheet');		return $result->num_rows();	}    public function get_consolidate_list($length,$start,$search){        $this->db->select('tbl_consolidated_marksheet.*,tbl_student.student_name,tbl_student.username,tbl_student.password,tbl_course.course_name,tbl_stream.stream_name,tbl_center.center_name');		$this->db->where('tbl_consolidated_marksheet.is_deleted','0'); 		$this->db->where('tbl_consolidated_marksheet.issue_status','1'); 		if($this->session->userdata('admin_id') == "62"){			$this->db->where('tbl_student.center_id','9');  		}		if($search !=""){            $this->db->group_start();             $this->db->or_like('tbl_consolidated_marksheet.enrollment',$search);            $this->db->or_like('tbl_student.student_name',$search);			$this->db->or_like('tbl_course.course_name',$search);			$this->db->or_like('tbl_stream.stream_name',$search);				$this->db->or_like('tbl_center.center_name',$search); 				$this->db->group_end();		}        $this->db->join('tbl_student','tbl_student.enrollment_number = tbl_consolidated_marksheet.enrollment');        $this->db->join('tbl_course','tbl_course.id = tbl_student.course_id');        $this->db->join('tbl_stream','tbl_stream.id = tbl_student.stream_id');		$this->db->join("tbl_center","tbl_center.id = tbl_student.center_id");      	$this->db->order_by('tbl_consolidated_marksheet.id','DESC');		$this->db->limit($length,$start);		$result = $this->db->get('tbl_consolidated_marksheet');		return $result->result();	}	public function get_consolidate_list_count($search){        $this->db->select('tbl_consolidated_marksheet.*,tbl_student.student_name,tbl_student.username,tbl_student.password,tbl_course.course_name,tbl_stream.stream_name,tbl_center.center_name');		$this->db->where('tbl_consolidated_marksheet.is_deleted','0'); 		$this->db->where('tbl_consolidated_marksheet.issue_status','1'); 		if($this->session->userdata('admin_id') == "62"){			$this->db->where('tbl_student.center_id','9');  		}			if($search !=""){			$this->db->group_start();             $this->db->or_like('tbl_consolidated_marksheet.enrollment',$search);            $this->db->or_like('tbl_student.student_name',$search);			$this->db->or_like('tbl_course.course_name',$search);			$this->db->or_like('tbl_stream.stream_name',$search);			$this->db->or_like('tbl_center.center_name',$search); 				$this->db->group_end();		}        $this->db->join('tbl_student','tbl_student.enrollment_number = tbl_consolidated_marksheet.enrollment');        $this->db->join('tbl_course','tbl_course.id = tbl_student.course_id');        $this->db->join('tbl_stream','tbl_stream.id = tbl_student.stream_id');		$this->db->join("tbl_center","tbl_center.id = tbl_student.center_id");		$this->db->order_by('tbl_consolidated_marksheet.id','DESC');		$result = $this->db->get('tbl_consolidated_marksheet');		return $result->num_rows();	}	public function delete_consolidate(){		$this->db->where('id',$this->uri->segment(2));		$this->db->delete('tbl_consolidated_marksheet');		$this->db->where('consolidate_id',$this->uri->segment(2));		$this->db->delete('tbl_consolidated_marksheet_details');		return true;	}    public function get_single_consolidate(){        $this->db->where('is_deleted','0');        $this->db->where('consolidate_id',$this->uri->segment(2));        $result = $this->db->get('tbl_consolidated_marksheet_details');        $result = $result->result();        return $result;    }    public function edit_consolidate(){         $profile = $this->Admin_model->get_profile();        $this->db->where('id',$this->input->post('hidden_consolidate_id'));        $exist = $this->db->get('tbl_consolidated_marksheet');        $exist = $exist->row();                $this->db->where('enrollment_number',$exist->enrollment);        $student = $this->db->get('tbl_student');        $student = $student->row();        $data = array (            'note'			=>$this->input->post('note'), 			'issue_date'	=> date("Y-m-d",strtotime($this->input->post('issue_date'))),			'payment_date'	=> date("Y-m-d",strtotime($this->input->post('payment_date'))),            'payment_id'	=>$this->input->post('payment_id'),             'issue_status'	=>$this->input->post('issue_status'), 			'payment_status'=>$this->input->post('payment_status'), 			'signature_id'	=>$this->input->post('signature'),             );        if(!empty($this->input->post('hidden_consolidate_id'))){            $this->db->where('id',$this->input->post('hidden_consolidate_id'));            $this->db->update('tbl_consolidated_marksheet',$data);        }                if($exist->note != $this->input->post('note')){    		$log_description = $profile->first_name." ".$profile->last_name." has updated consolidate marksheet credit note from ".$exist->note." to ".$this->input->post('note')." of ".$student->student_name." (".$student->id.")". " on ".date("d/m/Y");    		$log = array(    			'user_id' 		=> $this->session->userdata('admin_id'),    			'student_id' 	=> $student->id,    			'description' 	=> $log_description,    			'date' 			=> date("Y-m-d"),    			'created_on' 	=> date("Y-m-d H:i:s"),    		);    		$this->Setting_model->set_log($log);        }        if($exist->issue_date != date("Y-m-d",strtotime($this->input->post('issue_date')))){    		$log_description = $profile->first_name." ".$profile->last_name." has added Issue date of consolidate marksheet from ".$exist->issue_date." to ".date("Y-m-d",strtotime($this->input->post('issue_date')))." of ".$student->student_name." (".$student->id.")". " on ".date("d/m/Y");    		    		$log = array(    			'user_id' 		=> $this->session->userdata('admin_id'),    			'student_id' 	=> $student->id,    			'description' 	=> $log_description,    			'date' 			=> date("Y-m-d"),    			'created_on' 	=> date("Y-m-d H:i:s"),    		);    		$this->Setting_model->set_log($log);        }         if($exist->payment_date != date("Y-m-d",strtotime($this->input->post('payment_date')))){    		$log_description = $profile->first_name." ".$profile->last_name." has updated Payment date of consolidate marksheet from ".$exist->payment_date." to ".date("Y-m-d",strtotime($this->input->post('payment_date')))." of ".$student->student_name." (".$student->id.")". " on ".date("d/m/Y");    		    		$log = array(    			'user_id' 		=> $this->session->userdata('admin_id'),    			'student_id' 	=> $student->id,    			'description' 	=> $log_description,    			'date' 			=> date("Y-m-d"),    			'created_on' 	=> date("Y-m-d H:i:s"),    		);    		$this->Setting_model->set_log($log);        }         if($exist->payment_id != $this->input->post('payment_id')){    		$log_description = $profile->first_name." ".$profile->last_name." has updated Payment ID of consolidate marksheet from ".$exist->payment_id." to ".$this->input->post('payment_id')." of ".$student->student_name." (".$student->id.")". " on ".date("d/m/Y");    		    		$log = array(    			'user_id' 		=> $this->session->userdata('admin_id'),    			'student_id' 	=> $student->id,    			'description' 	=> $log_description,    			'date' 			=> date("Y-m-d"),    			'created_on' 	=> date("Y-m-d H:i:s"),    		);    		$this->Setting_model->set_log($log);        }        		if($exist->issue_status != $this->input->post('issue_status')){    		$log_description = $profile->first_name." ".$profile->last_name." has updated Issue status of consolidate marksheet from ".$exist->issue_status." to ".$this->input->post('issue_status')." of ".$student->student_name." (".$student->id.")". " on ".date("d/m/Y");    		    		$log = array(    			'user_id' 		=> $this->session->userdata('admin_id'),    			'student_id' 	=> $student->id,    			'description' 	=> $log_description,    			'date' 			=> date("Y-m-d"),    			'created_on' 	=> date("Y-m-d H:i:s"),    		);    		$this->Setting_model->set_log($log);        }        if($exist->payment_status != $this->input->post('payment_status')){    		$log_description = $profile->first_name." ".$profile->last_name." has updated Payment Status of consolidate marksheet from ".$exist->payment_status." to ".$this->input->post('payment_status')." of ".$student->student_name." (".$student->id.")". " on ".date("d/m/Y");    		    		$log = array(    			'user_id' 		=> $this->session->userdata('admin_id'),    			'student_id' 	=> $student->id,    			'description' 	=> $log_description,    			'date' 			=> date("Y-m-d"),    			'created_on' 	=> date("Y-m-d H:i:s"),    		);    		$this->Setting_model->set_log($log);        }		/*        $this->db->where('consolidate_id',$this->input->post('hidden_consolidate_id'));        $this->db->delete('tbl_consolidated_marksheet_details');        $insert_id = $this->input->post('hidden_consolidate_id');        $subject_code    = $this->input->post('subject_code');        $subject_name    = $this->input->post('subject_name');        $year_sem        = $this->input->post('year_sem');               $internal_mark   = $this->input->post('internal_mark');        $external_mark   = $this->input->post('external_mark');        $total           = $this->input->post('total');        $total_marks     =$this->input->post('total_marks');		$grade     		 = $this->input->post('grade');		$credit     	 = $this->input->post('credit');		$result_val      = $this->input->post('result');        $created_on      = date("Y-m-d H:i:s");        $count = count($subject_code);         $data12 = array();        for($i=0;$i<$count;$i++){             $data12 = array(                "consolidate_id"	 =>$insert_id,                "subject_code"	    =>$subject_code[$i],                "subject_name"	    =>$subject_name[$i],                "year_sem"          =>$year_sem[$i],                "internal_mark"	    =>$internal_mark[$i],                "external_mark"	    =>$external_mark[$i],                "total"		   	    =>$total[$i],                "total_marks"		=>$total_marks[$i],                "grade"				=>$grade[$i],                "credit"			=>$credit[$i],                "result"			=>$result_val[$i],                "created_on"        =>$created_on,            );                $this->db->insert('tbl_consolidated_marksheet_details',$data12);            }*/    }	public function get_btu_subject_count($consolidate){		$this->db->where('is_deleted','0');		$this->db->where('status','1');		$this->db->where('is_other','0');		$this->db->where('consolidate_id',$consolidate);		$result = $this->db->get('tbl_consolidated_marksheet_details');		$btu = $result->result();				$this->db->where('is_deleted','0');		$this->db->where('status','1');		$this->db->where('is_other','1');		$this->db->where('consolidate_id',$consolidate);		$result = $this->db->get('tbl_consolidated_marksheet_details');		$other = $result->result();				$this->db->where('is_deleted','0');		$this->db->where('status','1');		$this->db->where('is_other','1');		$this->db->where('consolidate_id',$consolidate);		$result = $this->db->get('tbl_consolidated_marksheet_details');		$other_name = $result->row();		if(!empty($other_name)){			$uni = $other_name->university_name;		}else{			$uni = "";		}		return count($btu).'@@@'.count($other).'@@@'.$uni;	}    public function get_name_separate_student(){            $this->db->select('	tbl_separate_student.*,tbl_course.course_name,tbl_stream.stream_name');            $this->db->where('tbl_separate_student.is_deleted','0');            $this->db->where('tbl_separate_student.enrollment_number',$this->input->post('enrollment_number'));            $this->db->join('tbl_course','tbl_course.id = 	tbl_separate_student.course_id');            $this->db->join('tbl_stream','tbl_stream.id = 	tbl_separate_student.stream_id');            $result =  $this->db->get('tbl_separate_student');            $result = $result->row();            echo json_encode($result);        }    public function set_consolidated_separate_student(){        $data = array (            'enrollment'	=> $this->input->post('enrollment'),            'note'			=> $this->input->post('note'),			'issue_date'	=> date("Y-m-d",strtotime($this->input->post('issue_date'))),			'payment_date'	=> date("Y-m-d",strtotime($this->input->post('payment_date'))),            'payment_id'	=> $this->input->post('payment_id'),             'issue_status'	=> $this->input->post('issue_status'), 			'payment_status'=> $this->input->post('payment_status'),         );        $date = array('created_on'=>date('y-m-d H:i:s'));         $newData = array_merge($data,$date);        $this->db->insert('tbl_consolidated_marksheet_separate_student',$newData);        $insert_id = $this->db->insert_id();        $subject_code    = $this->input->post('subject_code');        $subject_name    = $this->input->post('subject_name');        $year_sem        = $this->input->post('year_sem');               $internal_mark   = $this->input->post('internal_mark');        $external_mark   = $this->input->post('external_mark');        $total           = $this->input->post('total');        $total_marks     =$this->input->post('total_marks');		$grade     		 = $this->input->post('grade');		$credit     	 = $this->input->post('credit');		$result_val      = $this->input->post('result');        $created_on      = date("Y-m-d H:i:s");        $count = count($subject_code);             $data12 = array();            for($i=0;$i<$count;$i++){                 $data12 = array(                    "consolidate_id"	 =>$insert_id,                    "subject_code"	    =>$subject_code[$i],                    "subject_name"	    =>$subject_name[$i],                    "year_sem"          =>$year_sem[$i],                    "internal_mark"	    =>$internal_mark[$i],                    "external_mark"	    =>$external_mark[$i],                    "total"		   	    =>$total[$i],                    "total_marks"		=>$total_marks[$i],                    "grade"				=>$grade[$i],                    "credit"			=>$credit[$i],                    "result"			=>"PASS",                    "created_on"        =>$created_on,                );                    $this->db->insert('tbl_consolidated_marksheet_details_separate_student',$data12);            }            return 0;    }    public function consolidated_separate_request($length,$start,$search){        $this->db->select('tbl_consolidated_marksheet_separate_student.*,tbl_separate_student.student_name,tbl_course.course_name,tbl_stream.stream_name');		$this->db->where('tbl_consolidated_marksheet_separate_student.is_deleted','0'); 		$this->db->where('tbl_consolidated_marksheet_separate_student.issue_status','0'); 		        if($search !=""){            $this->db->group_start();             $this->db->or_like('tbl_consolidated_marksheet_separate_student.enrollment',$search);            $this->db->or_like('tbl_separate_student.student_name',$search);            $this->db->or_like('tbl_course.course_name',$search);            $this->db->or_like('tbl_stream.stream_name',$search);		            $this->db->group_end();        }        $this->db->join('tbl_separate_student','tbl_separate_student.enrollment_number = tbl_consolidated_marksheet_separate_student.enrollment');        $this->db->join('tbl_course','tbl_course.id = tbl_separate_student.course_id');        $this->db->join('tbl_stream','tbl_stream.id = tbl_separate_student.stream_id');        $this->db->order_by('tbl_consolidated_marksheet_separate_student.id','DESC');        $this->db->limit($length,$start);        $result = $this->db->get('tbl_consolidated_marksheet_separate_student');        return $result->result();    }    public function consolidated_separate_request_count($search){        $this->db->select('tbl_consolidated_marksheet_separate_student.enrollment,tbl_consolidated_marksheet_separate_student.id,tbl_separate_student.student_name,tbl_course.course_name,tbl_stream.stream_name');        $this->db->where('tbl_consolidated_marksheet_separate_student.is_deleted','0'); 		$this->db->where('tbl_consolidated_marksheet_separate_student.issue_status','0');  		if($search !=""){			$this->db->group_start();             $this->db->or_like('tbl_consolidated_marksheet_separate_student.enrollment',$search);            $this->db->or_like('tbl_separate_student.student_name',$search);			$this->db->or_like('tbl_course.course_name',$search);			$this->db->or_like('tbl_stream.stream_name',$search);					$this->db->group_end();		}        $this->db->join('tbl_separate_student','tbl_separate_student.enrollment_number = tbl_consolidated_marksheet_separate_student.enrollment');        $this->db->join('tbl_course','tbl_course.id = tbl_separate_student.course_id');        $this->db->join('tbl_stream','tbl_stream.id = tbl_separate_student.stream_id');		$this->db->order_by('tbl_consolidated_marksheet_separate_student.id','DESC');		$result = $this->db->get('tbl_consolidated_marksheet_separate_student');		return $result->num_rows();	}	public function get_consolidate_list_separate_student($length,$start,$search){        $this->db->select('tbl_consolidated_marksheet_separate_student.*,tbl_separate_student.student_name,tbl_course.course_name,tbl_stream.stream_name');		$this->db->where('tbl_consolidated_marksheet_separate_student.is_deleted','0'); 		$this->db->where('tbl_consolidated_marksheet_separate_student.issue_status','1'); 		        if($search !=""){            $this->db->group_start();             $this->db->or_like('tbl_consolidated_marksheet_separate_student.enrollment',$search);            $this->db->or_like('tbl_separate_student.student_name',$search);            $this->db->or_like('tbl_course.course_name',$search);            $this->db->or_like('tbl_stream.stream_name',$search);		            $this->db->group_end();        }        $this->db->join('tbl_separate_student','tbl_separate_student.enrollment_number = tbl_consolidated_marksheet_separate_student.enrollment');        $this->db->join('tbl_course','tbl_course.id = tbl_separate_student.course_id');        $this->db->join('tbl_stream','tbl_stream.id = tbl_separate_student.stream_id');        $this->db->order_by('tbl_consolidated_marksheet_separate_student.id','DESC');        $this->db->limit($length,$start);        $result = $this->db->get('tbl_consolidated_marksheet_separate_student');        return $result->result();    }    public function get_consolidate_list_separate_student_count($search){        $this->db->select('tbl_consolidated_marksheet_separate_student.enrollment,tbl_consolidated_marksheet_separate_student.id,tbl_separate_student.student_name,tbl_course.course_name,tbl_stream.stream_name');        $this->db->where('tbl_consolidated_marksheet_separate_student.is_deleted','0'); 		$this->db->where('tbl_consolidated_marksheet_separate_student.issue_status','1');  		if($search !=""){			$this->db->group_start();             $this->db->or_like('tbl_consolidated_marksheet_separate_student.enrollment',$search);            $this->db->or_like('tbl_separate_student.student_name',$search);			$this->db->or_like('tbl_course.course_name',$search);			$this->db->or_like('tbl_stream.stream_name',$search);					$this->db->group_end();		}        $this->db->join('tbl_separate_student','tbl_separate_student.enrollment_number = tbl_consolidated_marksheet_separate_student.enrollment');        $this->db->join('tbl_course','tbl_course.id = tbl_separate_student.course_id');        $this->db->join('tbl_stream','tbl_stream.id = tbl_separate_student.stream_id');		$this->db->order_by('tbl_consolidated_marksheet_separate_student.id','DESC');		$result = $this->db->get('tbl_consolidated_marksheet_separate_student');		return $result->num_rows();	}    public function get_single_consolidate_separate_student(){        $this->db->where('is_deleted','0');        $this->db->where('consolidate_id',$this->uri->segment(2));        $result = $this->db->get('tbl_consolidated_marksheet_details_separate_student');        $result = $result->result();        return $result;    }    public function edit_consolidate_separate_student(){        $data = array (            'note'			=>$this->input->post('note'), 			'issue_date'	=> date("Y-m-d",strtotime($this->input->post('issue_date'))),			'payment_date'	=> date("Y-m-d",strtotime($this->input->post('payment_date'))),            'payment_id'	=>$this->input->post('payment_id'),             'issue_status'	=>$this->input->post('issue_status'), 			'payment_status'=>$this->input->post('payment_status'), 			'signature_id'	=>$this->input->post('signature'),             );        if(!empty($this->input->post('hidden_consolidate_id'))){            $this->db->where('id',$this->input->post('hidden_consolidate_id'));            $this->db->update('tbl_consolidated_marksheet_separate_student',$data);        }        $this->db->where('consolidate_id',$this->input->post('hidden_consolidate_id'));        $this->db->delete('tbl_consolidated_marksheet_details_separate_student');        $insert_id = $this->input->post('hidden_consolidate_id');        $subject_code    = $this->input->post('subject_code');        $subject_name    = $this->input->post('subject_name');        $year_sem        = $this->input->post('year_sem');               $internal_mark   = $this->input->post('internal_mark');        $external_mark   = $this->input->post('external_mark');         $total           = $this->input->post('total');         $total_marks     = $this->input->post('total_marks');		$grade     		 = $this->input->post('grade');		$credit     	 = $this->input->post('credit');		$result_val      = $this->input->post('result');        $created_on      = date("Y-m-d H:i:s");        $count = count($subject_code);         $data12 = array();        for($i=0;$i<$count;$i++){             $data12 = array(                "consolidate_id"	 =>$insert_id,                "subject_code"	    =>$subject_code[$i],                "subject_name"	    =>$subject_name[$i],                "year_sem"          =>$year_sem[$i],                "internal_mark"	    =>$internal_mark[$i],                "external_mark"	    =>$external_mark[$i],                "total"		   	    =>$total[$i],                "total_marks"       =>$total_marks[$i],                "grade"       		=>$grade[$i],                "result"       		=>"PASS",                "credit"       		=>$credit[$i],                "created_on"        =>$created_on,                           );             $this->db->insert('tbl_consolidated_marksheet_details_separate_student',$data12);         }    }    public function get_single_note(){        $this->db->where('is_deleted','0');        $this->db->where('id',$this->uri->segment(2));        $result = $this->db->get('tbl_consolidated_marksheet');        return $result->row();    }    public function get_single_note_separate_student(){        $this->db->where('is_deleted','0');        $this->db->where('id',$this->uri->segment(2));        $result = $this->db->get('tbl_consolidated_marksheet_separate_student');        return $result->row();    }	public function get_single_marksheet_sign($id){		$this->db->select('tbl_consolidated_marksheet.*,tbl_signature.name as signature_name,tbl_signature.signature,tbl_signature.dispalay_signature');		$this->db->where('tbl_consolidated_marksheet.is_deleted','0');		$this->db->where('tbl_consolidated_marksheet.id',$id);		$this->db->join('tbl_signature','tbl_signature.id = tbl_consolidated_marksheet.signature_id','left');		$result = $this->db->get('tbl_consolidated_marksheet');		return $result->row();	}	    public function get_single_markshhet($id){		$this->db->select('tbl_consolidated_marksheet.*,tbl_signature.name as signature_name,tbl_signature.signature,tbl_signature.dispalay_signature');		$this->db->where('tbl_consolidated_marksheet.is_deleted','0');		$this->db->where('tbl_consolidated_marksheet.id',$id);		$this->db->join('tbl_signature','tbl_signature.id = tbl_consolidated_marksheet.signature_id','left');		$result = $this->db->get('tbl_consolidated_marksheet');		$enrollment =  $result->row()->enrollment;		$this->db->select('tbl_student.*,tbl_course.course_name,tbl_stream.stream_name');		$this->db->where('tbl_student.is_deleted','0');		$this->db->where('tbl_student.enrollment_number',$enrollment);		$this->db->join('tbl_course','tbl_course.id = tbl_student.course_id');		$this->db->join('tbl_stream','tbl_stream.id = tbl_student.stream_id');		$this->db->order_by('year_sem',"ASC");		$result =  $this->db->get('tbl_student');		$result = $result->row();		return $result;		// echo "<pre>";print_r($result);exit;    }    public function get_single_marksheet_id($id){        $this->db->where('is_deleted','0');        $this->db->where('id',$id);        $result = $this->db->get('tbl_consolidated_marksheet');        $result =  $result->row();        return $result;  		    }    public function get_selected_subject_for_result($id){		// print_r($id);exit;        $this->db->where('is_deleted','0');        $this->db->where('consolidate_id',$id);		$result =  $this->db->get('tbl_consolidated_marksheet_details');        return $result->num_rows();		// echo "<pre>";print_r($result->num_rows());exit;    }	public function get_selected_subject_for_result_all($id,$limit){        $this->db->where('is_deleted','0');        $this->db->where('consolidate_id',$id);        $this->db->order_by('year_sem','ASC');        $this->db->limit($limit);		$result =  $this->db->get('tbl_consolidated_marksheet_details');        return $result->result();    }    public function get_selected_subject_for_result_separate($id){        $this->db->where('is_deleted','0');        $this->db->where('consolidate_id',$id);		$result =  $this->db->get('tbl_consolidated_marksheet_details_separate_student');        return $result->num_rows();    }    public function get_selected_subject_for_result_loop($id,$limit,$start){        $this->db->where('is_deleted','0');        $this->db->where('consolidate_id',$id);        $this->db->order_by('year_sem,subject_code','ASC');        $this->db->limit($limit,$start);        $result =  $this->db->get('tbl_consolidated_marksheet_details');        return $result->result();    }    public function get_single_markshhet_seperate_student($id){		$this->db->select('tbl_stream.stream_name,tbl_course.course_name,tbl_consolidated_marksheet_separate_student.*,tbl_separate_student.id as student_id,tbl_separate_student.course_id,tbl_separate_student.stream_id,tbl_separate_student.course_type,tbl_separate_student.course_mode,tbl_separate_student.year_sem,tbl_separate_student.student_name,tbl_separate_student.father_name,tbl_separate_student.mother_name,tbl_signature.name as signature_name,tbl_signature.signature,tbl_signature.dispalay_signature');        $this->db->where('tbl_consolidated_marksheet_separate_student.is_deleted','0');        $this->db->where('tbl_consolidated_marksheet_separate_student.id',$id);		$this->db->join('tbl_separate_student','tbl_separate_student.enrollment_number = tbl_consolidated_marksheet_separate_student.enrollment');		$this->db->join('tbl_course','tbl_course.id = tbl_separate_student.course_id');		$this->db->join('tbl_stream','tbl_stream.id = tbl_separate_student.stream_id'); 		$this->db->join('tbl_signature','tbl_signature.id = tbl_consolidated_marksheet_separate_student.signature_id','left');        $result = $this->db->get('tbl_consolidated_marksheet_separate_student');        $result =  $result->row();        return $result;      }	public function get_separate_selected_subject_for_result($id){        $this->db->where('is_deleted','0');        $this->db->where('consolidate_id',$id);		$result =  $this->db->get('tbl_consolidated_marksheet_details_separate_student');        return $result->num_rows();    }	public function get_separate_selected_subject_for_result_loop($id,$limit,$start){        $this->db->where('is_deleted','0');        $this->db->where('consolidate_id',$id);        $this->db->order_by('year_sem','ASC');        $this->db->limit($limit,$start);        $result =  $this->db->get('tbl_consolidated_marksheet_details_separate_student');        return $result->result();    }	public function get_single_separate_marksheet_id($id){		$this->db->select('tbl_consolidated_marksheet_separate_student.*,tbl_signature.name as signature_name,tbl_signature.signature,tbl_signature.dispalay_signature');        $this->db->where('tbl_consolidated_marksheet_separate_student.is_deleted','0');        $this->db->where('tbl_consolidated_marksheet_separate_student.id',$id);		$this->db->join('tbl_signature','tbl_signature.id = tbl_consolidated_marksheet_separate_student.signature_id','left');        $result = $this->db->get('tbl_consolidated_marksheet_separate_student');        $result =  $result->row();        return $result;      }    public function get_total_marks_cons($year_sem,$id){        $this->db->select('SUM(tbl_consolidated_marksheet_details.total_marks) as sum_total_mark');        $this->db->where('tbl_consolidated_marksheet_details.is_deleted','0');        $this->db->where('tbl_consolidated_marksheet_details.consolidate_id',$id);        $this->db->where('tbl_consolidated_marksheet_details.year_sem',$year_sem);        $this->db->join('tbl_consolidated_marksheet','tbl_consolidated_marksheet.id = tbl_consolidated_marksheet_details.consolidate_id');        $result =  $this->db->get('tbl_consolidated_marksheet_details');        $result =$result->row();        if(!empty($result)){            return $result->sum_total_mark;        }else{            return 0;        }    }     public function get_total_obt_marks_cons($year_sem,$id){        //$this->db->select('SUM(tbl_consolidated_marksheet_details.internal_mark) as sum_internal_mark, SUM(tbl_consolidated_marksheet_details.external_mark) as sum_external_mark');        $this->db->where('tbl_consolidated_marksheet_details.is_deleted','0');        $this->db->where('tbl_consolidated_marksheet_details.consolidate_id',$id);        $this->db->where('tbl_consolidated_marksheet_details.year_sem',$year_sem);        //$this->db->join('tbl_consolidated_marksheet','tbl_consolidated_marksheet.id = tbl_consolidated_marksheet_details.consolidate_id');        $result =  $this->db->get('tbl_consolidated_marksheet_details');        $result = $result->result(); 		$total = 0;        if(!empty($result)){			foreach($result as $result_arr){				$total += $result_arr->internal_mark+$result_arr->external_mark; 			}			return $total;        }else{            return 0;        }    } 	/*	public function get_total_marks_cons($year_sem,$id){        $this->db->select('SUM(tbl_consolidated_marksheet_details.total_marks) as sum_total_mark');        $this->db->where('tbl_consolidated_marksheet_details.is_deleted','0');        $this->db->where('tbl_consolidated_marksheet_details.consolidate_id',$id);        $this->db->where('tbl_consolidated_marksheet_details.year_sem',$year_sem);        $this->db->join('tbl_consolidated_marksheet','tbl_consolidated_marksheet.id = tbl_consolidated_marksheet_details.consolidate_id');        $result =  $this->db->get('tbl_consolidated_marksheet_details');        $result =$result->row();        if(!empty($result)){            return $result->sum_total_mark;        }else{            return 0;        }    }*/ 	public function get_total_marks_cons_separate($year_sem,$id){        $this->db->select('SUM(tbl_consolidated_marksheet_details_separate_student.total_marks) as total_sum');        $this->db->where('tbl_consolidated_marksheet_details_separate_student.is_deleted','0');        $this->db->where('tbl_consolidated_marksheet_details_separate_student.consolidate_id',$id);        $this->db->where('tbl_consolidated_marksheet_details_separate_student.year_sem',$year_sem);        $this->db->join('tbl_consolidated_marksheet_separate_student','tbl_consolidated_marksheet_separate_student.id = tbl_consolidated_marksheet_details_separate_student.consolidate_id');        $result =  $this->db->get('tbl_consolidated_marksheet_details_separate_student');        $result =$result->row();        if(!empty($result)){            return $result->total_sum;        }else{            return 0;        }    }     public function get_total_obt_marks_cons_separate($year_sem,$id){        $this->db->select('SUM(tbl_consolidated_marksheet_details_separate_student.total) as sum_total_mark');        $this->db->where('tbl_consolidated_marksheet_details_separate_student.is_deleted','0');        $this->db->where('tbl_consolidated_marksheet_details_separate_student.consolidate_id',$id);        $this->db->where('tbl_consolidated_marksheet_details_separate_student.year_sem',$year_sem);        $this->db->join('tbl_consolidated_marksheet_separate_student','tbl_consolidated_marksheet_separate_student.id = tbl_consolidated_marksheet_details_separate_student.consolidate_id');        $result =  $this->db->get('tbl_consolidated_marksheet_details_separate_student');        $result =$result->row();        if(!empty($result)){            return $result->sum_total_mark;        }else{            return 0;        }    }	public function get_student_details(){		$this->db->select('tbl_student.*,tbl_course.print_name,tbl_stream.stream_name');		$this->db->where('tbl_student.is_deleted','0');		$this->db->where('tbl_student.enrollment_number',$this->uri->segment(2));		$this->db->join('tbl_course','tbl_course.id = tbl_student.course_id');		$this->db->join('tbl_stream','tbl_stream.id = tbl_student.stream_id');		$result = $this->db->get('tbl_student');		return $result->row();	}		public function get_student_result(){		$this->db->where('is_deleted','0');		$this->db->where('enrollment_number',$this->uri->segment(2)); 		$exam = $this->db->get('tbl_exam_results');		$exam = $exam->result();		$result_ids = array();		if(!empty($exam)){			foreach($exam as $exam_result){				$result_ids[] = $exam_result->id;			}		}// 		if(!empty($result_ids)){// 			$this->db->select('tbl_examination_result_details.*,tbl_subject.credit,tbl_subject.subject_code,tbl_subject.subject_name,tbl_subject.year_sem');// 			$this->db->where_in('tbl_examination_result_details.result_id',$result_ids);// 			$this->db->where('tbl_examination_result_details.is_deleted','0'); // 			$this->db->order_by('tbl_subject.year_sem','ASC');// 			$this->db->join('tbl_subject','tbl_subject.id = tbl_examination_result_details.subject_id');// 			$result = $this->db->get('tbl_examination_result_details');// 			return $result->result(); // 		}        if(!empty($result_ids)){			$this->db->select('tbl_examination_result_details.*,tbl_subject.credit,tbl_subject.subject_code,tbl_subject.subject_name,tbl_subject.year_sem');			$this->db->where_in('tbl_examination_result_details.result_id',$result_ids);			$this->db->where('tbl_examination_result_details.is_deleted','0'); 			$this->db->order_by('tbl_subject.year_sem','ASC');			$this->db->join('tbl_subject','tbl_subject.id = tbl_examination_result_details.subject_id');			$result = $this->db->get('tbl_examination_result_details')->result();			foreach ($result as $result_item) {				$result_item->year_sem_value = $this->find_exam_result_year_sem($result_item->result_id, $exam);			}			return $result; 		}	}		public function find_exam_result_year_sem($result_id, $exam_results) {		foreach ($exam_results as $exam_result) {			if ($exam_result->id === $result_id) {				return $exam_result->year_sem;			}		}		return null; 	}	public function get_separat_student_details(){		$this->db->select('tbl_separate_student.*,tbl_course.print_name,tbl_stream.stream_name');		$this->db->where('tbl_separate_student.is_deleted','0');		$this->db->where('tbl_separate_student.enrollment_number',$this->uri->segment(2));		$this->db->join('tbl_course','tbl_course.id = tbl_separate_student.course_id');		$this->db->join('tbl_stream','tbl_stream.id = tbl_separate_student.stream_id');		$result = $this->db->get('tbl_separate_student');		return $result->row();	}		public function get_separat_student_result(){		$this->db->where('is_deleted','0');		$this->db->where('enrollment_number',$this->uri->segment(2)); 		$exam = $this->db->get('tbl_separate_student_exam_results');		$exam = $exam->result();		$result_ids = array();		if(!empty($exam)){			foreach($exam as $exam_result){				$result_ids[] = $exam_result->id;			}		}		if(!empty($result_ids)){			$this->db->select('tbl_separate_student_examination_result_details.*,tbl_subject.subject_code,tbl_subject.subject_name,,tbl_subject.year_sem');			$this->db->where_in('tbl_separate_student_examination_result_details.result_id',$result_ids);			$this->db->where('tbl_separate_student_examination_result_details.is_deleted','0'); 			$this->db->order_by('tbl_subject.year_sem','ASC');			$this->db->join('tbl_subject','tbl_subject.id = tbl_separate_student_examination_result_details.subject_id');			$result = $this->db->get('tbl_separate_student_examination_result_details');			return $result->result(); 		}	}	    public function get_last_exam_year($student){		$this->db->where('student_id',$student);		$this->db->where('exam_status','1');		$this->db->where('payment_status','1');		$this->db->order_by('year_sem','DESC');		$result = $this->db->get('tbl_examination_form');		return $result->row();	}    public function get_last_exam_year_separate($student){		$this->db->where('student_id',$student); 		$this->db->order_by('year_sem','DESC');		$result = $this->db->get('tbl_separate_student_exam_results');		return $result->row();	}	public function get_selected_marksheet_course_stream_details($course_id,$stream_id,$course_type,$course_mode){		$this->db->where('course',$course_id);		$this->db->where('stream',$stream_id);		$this->db->where('course_type',$course_type);		$this->db->where('course_mode',$course_mode);		$this->db->where('is_deleted','0');		$result = $this->db->get('tbl_course_stream_relation');		return $result->row();			}	public function get_selected_semester_subject_for_result_year_sem($marksheet_id){		$this->db->where('is_deleted','0');        $this->db->where('consolidate_id',$marksheet_id);          $this->db->order_by('year_sem','ASC');        $min_year =  $this->db->get('tbl_consolidated_marksheet_details');        $min_year = $min_year->row();		$this->db->where('is_deleted','0');        $this->db->where('consolidate_id',$marksheet_id);          $this->db->order_by('year_sem','DESC');        $max_year =  $this->db->get('tbl_consolidated_marksheet_details');        $max_year = $max_year->row();		return $min_year->year_sem.'@@@'.$max_year->year_sem;	}	public function get_selected_semester_subject_for_result($marksheet_id,$sem){		$this->db->where('is_deleted','0');        $this->db->where('consolidate_id',$marksheet_id);        $this->db->where('year_sem',$sem);        $this->db->order_by('year_sem,subject_code','ASC');        //$this->db->limit($limit,$start);        $result =  $this->db->get('tbl_consolidated_marksheet_details');        return $result->result();	}	public function get_selected_semester_subject_for_result_new($marksheet_id,$limit,$start){		$this->db->where('is_deleted','0');        $this->db->where('consolidate_id',$marksheet_id);         $this->db->order_by('year_sem,subject_code','ASC');        $this->db->limit($limit,$start);        $result =  $this->db->get('tbl_consolidated_marksheet_details');        return $result->result();	}	public function get_selected_semester_subject_for_result_separate($marksheet_id,$sem){		$this->db->where('is_deleted','0');        $this->db->where('consolidate_id',$marksheet_id);        $this->db->where('year_sem',$sem);        $this->db->order_by('year_sem,subject_code','ASC');       // $this->db->limit($limit,$start);        $result =  $this->db->get('tbl_consolidated_marksheet_details_separate_student');        return $result->result();	}	public function get_student_last_exam_month_year($student_id){		$this->db->where('is_deleted','0');        $this->db->where('student_id',$student_id);        $this->db->order_by('year_sem','DESC');        $result = $this->db->get('tbl_exam_results');        $result = $result->row();		$exam_year_month = '';		if(!empty($result)){			$exam_year_month = $result->examination_month.' '.$result->examination_year;		}		return $exam_year_month;	}	public function get_student_last_exam_month_yea_separater($student_id){ 		$this->db->where('is_deleted','0');        $this->db->where('student_id',$student_id);        $this->db->order_by('year_sem','DESC');        $result = $this->db->get('tbl_separate_student_exam_results');        $result = $result->row(); 		$exam_year_month = '';		if(!empty($result)){			$exam_year_month = $result->examination_month.' '.$result->examination_year;		}		return $exam_year_month;	}	public function get_sinlge_consolidate_result_for_transcript($enrollment){		$this->db->where('enrollment',$enrollment);		$consolidate = $this->db->get('tbl_consolidated_marksheet');		$consolidate = $consolidate->row(); 		return $consolidate;	}	public function get_consolidate_result_for_transcript($consolidate){		$this->db->where('is_deleted','0');		$this->db->where('status','1');		$this->db->where('consolidate_id',$consolidate);		$this->db->order_by('year_sem','ASC');		$result = $this->db->get('tbl_consolidated_marksheet_details');		return $result->result();	}	public function get_subject_result_for_transcript($student){		$result_id = array();		$this->db->where('student_id',$student);		$this->db->where('is_deleted','0');		$exist = $this->db->get('tbl_marksheet');		$exist = $exist->result();		if(!empty($exist)){			foreach($exist as $exist_result){				$result_id[] = $exist_result->result_id;			}		}		$this->db->select('tbl_examination_result_details.*,tbl_subject.subject_name,tbl_subject.subject_code,tbl_subject.subject_type,tbl_subject.year_sem'); 		$this->db->where('tbl_examination_result_details.is_deleted',"0"); 		$this->db->where('tbl_examination_result_details.status',"1");		$this->db->where_in('tbl_examination_result_details.result_id',$result_id);		$this->db->join('tbl_subject','tbl_subject.id = tbl_examination_result_details.subject_id');		$this->db->order_by('tbl_subject.year_sem','ASC');		$result = $this->db->get('tbl_examination_result_details');// 		print_r($result->result());exit;		return $result->result();	}} 