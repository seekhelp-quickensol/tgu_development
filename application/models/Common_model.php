<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed'); class Common_model extends CI_Model { 	public function set_previous_url(){		$this->load->library('session');		if ($this->session->userdata('previous_urls')) {			$previous_urls = $this->session->userdata('previous_urls');		} else {			$previous_urls = array();		}		$current_url = current_url();		if (!isset($previous_urls[0]) || $previous_urls[0] !== $current_url) {			array_unshift($previous_urls, $current_url);			$previous_urls = array_slice($previous_urls, 0, 3);        			$this->session->set_userdata('previous_urls', $previous_urls);		}	}	public function generate_qrcode($name, $data, $path) {		// QR Code File Directory		$dir = FCPATH . $path;			// Check if the directory exists, if not create it		if (!is_dir($dir)) {			mkdir($dir, 0777, true);		}			// Check if QR code for the given name already exists		$existing_file = $dir . $name . '.png';		if (file_exists($existing_file)) {			// QR code already exists, return its URL			$final_file_name = base_url() . $path . $name . '.png';			return $final_file_name;		}			// Load the library		$this->load->library('ciqrcode');			// QR Configuration		$config['cacheable'] = true;		$config['imagedir'] = $dir;		$config['quality'] = true;		$config['size'] = '130';		$config['black'] = array(255, 255, 255);		$config['white'] = array(0, 0, 0);		$this->ciqrcode->initialize($config);			// QR Data		$params['data'] = $data;		$params['level'] = 'L';		$params['size'] = 10;		$params['savename'] = $dir . $name . '.png';		// Generate and Save QR Code		$this->ciqrcode->generate($params);			$final_file_name = base_url() . $path . $name . '.png';			return $final_file_name;	}	public function generate_qrcode_data($data) {		// Load the library		$this->load->library('ciqrcode');		// QR Configuration		$config['cacheable'] = true;		$config['quality'] = true;		$config['size'] = '150';		$config['black'] = array(255, 255, 255);		$config['white'] = array(0, 0, 0);		$this->ciqrcode->initialize($config);		// QR Data		$params['data'] = $data;		$params['level'] = 'L';		$params['size'] = 10;				// Generate QR Code and return data URI		ob_start();		$this->ciqrcode->generate($params);		$image_data = ob_get_contents();		ob_end_clean();				$final_image_data = "data:image/png;base64," . base64_encode($image_data);		return $final_image_data;	}	public function generate_qrcode_data_web($data) {		// Load the library		$this->load->library('ciqrcode');		// QR Configuration		$config['cacheable'] = true;		$config['quality'] = true;		$config['size'] = '150';		$config['black'] = array(255, 255, 255);		$config['white'] = array(0, 0, 0);		$this->ciqrcode->initialize($config);				// QR Data		$params['data'] = "https://tgu.ac.in/";		$params['level'] = 'L';		$params['size'] = 10;				// Generate QR Code and return data URI		ob_start();		$this->ciqrcode->generate($params);		$image_data = ob_get_contents();		ob_end_clean();				$final_image_data = "data:image/png;base64," . base64_encode($image_data);				return $final_image_data;	}	public function upload_center_document($center_id) {		$column = $this->input->post('submit_documents');		$this->db->select("id,center_name, $column");		$this->db->where('id', $center_id);		$center = $this->db->get('tbl_center')->row();			if (!empty($center)) {			$documents = $center->$column;			$doc_array = $documents != "" ? explode(',', $documents) : [];			$new_file = ($_FILES[$column]['name'] != "") ? $this->Digitalocean_model->upload_photo($column, "images/center/other_document/") : '';			if ($new_file != "") {				$doc_array[] = $new_file;			}			$updated_docs = array_values(array_filter($doc_array, function ($doc) {				return trim($doc) !== '';			}));			$this->db->where('id', $center->id);			$this->db->update('tbl_center', [				$column => !empty($updated_docs) ? implode(',', $updated_docs) : null			]);						$to = array(    			"email" => 'info@tgu.ac.in',    			"name" => 'TGU Administration Team',    		);			$subject = 'Document Uploaded by Center â€“ '.$center->center_name;						$message = "Dear Sir/Mam";    		$message .= ",<br><br>This is to inform you that the center ".$center->center_name." has successfully uploaded the required document(s) to the system.";    		$message .= "<br>Details:";      		$message .= "<br>Center Name : ".$center->center_name;      		$message .= "<br>Document Type : ".str_replace('_',' ',$column);     		$message .= "<br>Upload Date & Time : ".date('Y-m-d h:i A');    		$message .= "<br>You may now review the uploaded document(s) at your convenience.<br>Please let us know if any further action is needed.";    		$message .= "<br>Thanks<br>Team The Global University";    		    					$this->Admin_model->send_send_blue($to,$subject,$message);			return true;		}	}	public function delete_document() {		$id = $this->uri->segment(2);		$column = $this->uri->segment(3);		$this->db->select("id, $column");		$this->db->where('id', $id);		$center = $this->db->get('tbl_center')->row();		if (!empty($center)) {			$filename = base64_decode($this->uri->segment(4));			$documents = $center->$column;			$doc_array = $documents != "" ? explode(',', $documents) : [];			$updated_docs = array_values(array_filter($doc_array, function ($doc) use ($filename) {				return $doc !== $filename && trim($doc) !== '';			}));			$this->db->where('id', $center->id);			$this->db->update('tbl_center', [ $column => !empty($updated_docs) ? implode(',', $updated_docs) : null ]);			return true;		}	}}