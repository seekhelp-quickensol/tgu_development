<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed'); class Separate_student_certificate_controller extends CI_Controller { 	public function __construct(){		parent::__construct();		$this->is_logged();		$this->check_access();	}	public function is_logged(){		if($this->session->userdata('admin_id') == ""){			redirect('erp-access');		}	}	public function check_access(){		$access = $this->Setting_model->get_user_privilege_link();		if(!in_array($this->uri->segment(1),$access)){			//$this->session->set_flashdata('message','Sorry! You dont have access to this module!');			//redirect(base_url());		}	}	public function separate_student_degree_apply(){		if($this->input->post('find') == "Next"){			$result = $this->Separate_student_certificate_model->get_single_available_degree();			if(empty($result)){				$this->session->set_flashdata('message','Please enter valid enrollment number');				redirect('separate_student_degree_apply');			}else{				redirect('separate_student_degree_apply/'.$this->input->post('enrollment_number'));			}		}		$this->form_validation->set_rules("enrollment_number","enrollment number","required");		$data['single'] = $this->Separate_student_certificate_model->get_single_degree();		// echo "<pre>";print_r($data['single']);exit;		$data['amount'] = $this->Separate_student_certificate_model->get_certificate_fees('2');		// get_student_degree		$data['signature'] = $this->Separate_student_certificate_model->get_all_signature();		if($this->form_validation->run() === FALSE){ 			$this->load->view('admin/separate_student_degree_apply',$data);		}else{			$this->Separate_student_certificate_model->set_degree_application();			$this->session->set_flashdata("success","Application added successfully");			redirect('separate_student_degree_apply');		}	}	public function apply_for_migration(){		$this->form_validation->set_rules("enrollment_number","enrollment number","required");		$data['single'] = $this->Separate_student_certificate_model->get_single_migration_student();		$data['amount'] = $this->Separate_student_certificate_model->get_certificate_fees('0');		$data['signature'] = $this->Separate_student_certificate_model->get_all_signature();		if($this->form_validation->run() === FALSE){			$this->load->view("admin/apply_for_migration",$data);		}else{			$this->Separate_student_certificate_model->set_migration_application();			$this->session->set_flashdata("success","Application added successfully");			redirect('apply_for_migration');		}	}	public function apply_for_transfer(){		// exit;		$this->form_validation->set_rules("enrollment_number","enrollment number","required");		$data['single'] = $this->Separate_student_certificate_model->get_single_transfer_student();		// echo "<pre>";print_r($data['single']);exit;		$data['amount'] = $this->Separate_student_certificate_model->get_certificate_fees('1');		// echo "<pre>";print_r($data['amount']);exit;		$data['signature'] = $this->Separate_student_certificate_model->get_all_signature();		if($this->form_validation->run() === FALSE){			$this->load->view("admin/apply_for_transfer",$data);		}else{			$this->Separate_student_certificate_model->set_transfer_application();			$this->session->set_flashdata("success","Application added successfully");			redirect('apply_for_transfer');		}	}	public function separate_student_apply_transfer_certificate(){		if($this->input->post("next") == "Next"){			$result = $this->Separate_student_certificate_model->get_tranfer_certificate_details();			if(!empty($result)){				redirect('separate_student_apply_transfer_certificate/'.$result->enrollment_number);			}else{				$this->session->set_flashdata("message","Please enter valid enrollment_number");				redirect('separate_student_apply_transfer_certificate');			}		}		$this->form_validation->set_rules("enrollment_number","enrollment number","required");		$data['single'] = $this->Separate_student_certificate_model->get_tranfer_certificate_details_single();		// $data['sign'] = $this->Separate_student_certificate_model->get_single_transfer_student_new();		$data['signature'] = $this->Separate_student_certificate_model->get_all_signature();		// echo "<pre>";print_r($data['signature']);exit;		if($this->form_validation->run() === FALSE){			$this->load->view("admin/separate_student_apply_transfer_certificate",$data);		}else{			$this->Separate_student_certificate_model->set_separate_transfer_certificate();			$this->session->set_flashdata("success","Application added successfully");			redirect('separate_student_transfer_certificate_requests');		}	}	public function separate_student_apply_cherector_certificate(){		if($this->input->post("next") == "Next"){			$result = $this->Separate_student_certificate_model->get_charector_certificate_details();			if(!empty($result)){				redirect('separate_student_apply_cherector_certificate/'.$result->enrollment_number);			}else{				$this->session->set_flashdata("message","Please enter valid enrollment_number");				redirect('separate_student_apply_cherector_certificate');			}		}		$this->form_validation->set_rules("enrollment_number","enrollment number","required");		$data['single'] = $this->Separate_student_certificate_model->get_charector_certificate_details_single();		if($this->form_validation->run() === FALSE){			$this->load->view("admin/separate_student_apply_cherector_certificate",$data);		}else{			$file = $this->input->post('ppc_hidden');			if(isset($_FILES['ppc']) && $_FILES['ppc']['name'] !=""){				$file = $this->Digitalocean_model->upload_photo($filename="ppc",$path="images/pcc/");			}			$this->Separate_student_certificate_model->set_separate_charector_certificate($file);			$this->session->set_flashdata("success","Application added successfully");			redirect('separate_student_apply_cherector_certificate');		}	}	public function separate_student_list_cherector_certificate(){		if($this->input->post('send_btn') == "send_btn"){			$this->Separate_student_certificate_model->sent_charector_certificates_for_print();			$this->session->set_flashdata("success","Certificate sent to print successfully");			redirect('separate_student_list_cherector_certificate');		}		$this->load->view("admin/separate_student_list_cherector_certificate");	}	public function separate_student_print_cherector_certificate(){		$data['single'] = $this->Separate_student_certificate_model->get_charector_certificate_details_for_print($this->uri->segment(2));		$this->load->view("admin/separate_student_print_cherector_certificate",$data);	}	public function separate_student_print_transfer_certificate(){		// $data['transfer'] = $this->Separate_student_certificate_model->get_transfer_certificate($this->uri->segment(2));		$data['transfer'] = $this->Separate_student_certificate_model->get_transfer_certificate_new($this->uri->segment(2));		// echo "<pre>";print_r($data['transfer']);exit;		$this->load->view("admin/separate_student_print_transfer_certificate",$data);	}	// public function separate_student_print_bonafide_certificate(){	// 	// $data['bonafide'] = $this->Separate_student_certificate_model->get_bonafide_certificate_new($this->uri->segment(2));	// 	$data['single'] = $this->Separate_student_certificate_model->get_single_bona_application_print($this->uri->segment(2));	// 	$data['division'] = $this->Separate_student_certificate_model->get_student_division_for_degree($data['single']->student_id);	// 	$this->load->view("admin/separate_student_print_bonafide_certificate",$data);	// }	public function separate_student_migration_certificate_requests(){		$this->load->view("admin/separate_student_migration_certificate_requests");	}	public function separate_student_migration_certificates(){		if($this->input->post('send_btn') == "send_btn"){			$this->Separate_student_certificate_model->sent_migration_certificates_for_print();			$this->session->set_flashdata("success","Certificate sent to print successfully");			redirect('separate_student_migration_certificates');		}		$this->load->view("admin/separate_student_migration_certificates");	}	public function print_separate_student_migration_certificate(){		$data["migration"] = $this->Separate_student_certificate_model->get_migration_certificate($this->uri->segment(2));		$this->load->view("admin/print_separate_student_migration_certificate",$data);	}	public function verify_separate_student_migration_requests(){		$this->form_validation->set_rules("issue_date","issue date",'required');		if($this->form_validation->run() === FALSE){			$data['migration'] = $this->Separate_student_certificate_model->get_single_separate_student_migration();			$this->load->view("admin/update_separate_student_migration_issue_date",$data);		}else{			$this->Separate_student_certificate_model->update_separate_student_migration_issue_date();			$this->session->set_flashdata("success","Verified and Migration Certificate generated successfully");			redirect('separate_student_migration_certificate_requests');		}			}	public function unverify_separate_student_migration_certificate(){		$this->Separate_student_certificate_model->unverify_separate_student_migration_certificate();		$this->session->set_flashdata("success","Un-Verified and Migration Certificate deactivated successfully");		redirect($_SERVER["HTTP_REFERER"]);	}	public function separate_student_transfer_certificate_requests(){		$this->form_validation->set_rules("reason_of_transfer","reason","required");		if($this->form_validation->run() === FALSE){			$this->load->view("admin/separate_student_transfer_certificate_requests");		}else{			$this->Separate_student_certificate_model->approve_separate_student_transfer_certificate_requests();			$this->session->set_flashdata("success","Approved and Transfer Certificate Generated successfully");			redirect($_SERVER["HTTP_REFERER"]);		}	}	public function approved_separate_student_transfer_certificate(){		if($this->input->post('send_btn') == "send_btn"){			$this->Separate_student_certificate_model->sent_transfer_certificate_for_print();			$this->session->set_flashdata("success","Certificate sent to print successfully");			redirect('approved_separate_student_transfer_certificate');		}		$this->load->view("admin/approved_separate_student_transfer_certificate");	}	public function separate_student_transfer_certificate(){		$this->form_validation->set_rules("issue_date","issue date","required");		if($this->form_validation->run() === FALSE){			$data['transfer'] = $this->Separate_student_certificate_model->get_single_separate_student_transfer();			$this->load->view("admin/update_separate_student_transfer_issue_date",$data);	}else{		$this->Separate_student_certificate_model->update_separate_student_transfer_issue_date();		$this->session->set_flashdata("success","Verified and Transfer Certificate generated successfully");			redirect('separate_student_transfer_certificate_requests');		}	}	public function unapproved_separate_student_transfer_certificate(){		$this->Separate_student_certificate_model->unapproved_separate_student_transfer_certificate();		$this->session->set_flashdata("success","Un-Approved and Transfer Certificate deactivated successfully");		redirect($_SERVER["HTTP_REFERER"]);	}	public function separate_student_reccomendation_letter_requests(){		$this->load->view("admin/separate_student_reccomendation_letter_requests");	}	public function apply_for_recommendation_letter(){		$this->form_validation->set_rules("enrollment_number","enrollment number","required");		$data['single'] = $this->Separate_student_certificate_model->get_single_recommmendation_letter_student();		$data['amount'] = $this->Separate_student_certificate_model->get_certificate_fees('8');		$data['signature'] = $this->Separate_student_certificate_model->get_all_signature();		if($this->form_validation->run() === FALSE){			$this->load->view("admin/apply_for_recommendation_letter",$data);		}else{			$this->Separate_student_certificate_model->set_recommendation_letter_application();			$this->session->set_flashdata("success","Application added successfully");			redirect('apply_for_recommendation_letter');		}	}	public function separate_student_print_recommendation_letter(){		// $data['transfer'] = $this->Separate_student_certificate_model->get_transfer_certificate($this->uri->segment(2));		$data['recommendation'] = $this->Separate_student_certificate_model->get_recommendation_letter_new($this->uri->segment(2));		// echo "<pre>";print_r($data['recommendation']);exit;		$this->load->view("admin/separate_student_print_recommendation_letter",$data);	}	public function approve_separate_student_recommendation_letter(){		$this->Separate_student_certificate_model->approve_separate_student_recommendation_letter();		$this->session->set_flashdata("success","Approved and Reccomendation Letter Activated successfully");		redirect($_SERVER["HTTP_REFERER"]);	}	public function approved_separate_student_recommendation_letters(){		if($this->input->post('send_btn') == "send_btn"){			$this->Separate_student_certificate_model->sent_recommendation_letters_for_print();			$this->session->set_flashdata("success","Certificate sent to print successfully");			redirect('approved_separate_student_recommendation_letters');		}		$this->load->view("admin/approved_separate_student_recommendation_letters");	} 	public function unapproved_separate_student_recommendation_letter(){		$this->Separate_student_certificate_model->unapproved_separate_student_recommendation_letter();		$this->session->set_flashdata("success","Un-Approved and Reccomendation Letter Deactivated successfully");		redirect($_SERVER["HTTP_REFERER"]);	}	// public function apply_for_degree(){	// 	$this->form_validation->set_rules("enrollment_number","enrollment number","required");	// 	$data['single'] = $this->Separate_student_certificate_model->get_single_degree_student();	// 	$data['amount'] = $this->Separate_student_certificate_model->get_certificate_fees('2');	// 	$data['signature'] = $this->Separate_student_certificate_model->get_all_signature();	// 	if($this->form_validation->run() === FALSE){	// 		$this->load->view("admin/apply_for_degree",$data);	// 	}else{	// 		$this->Separate_student_certificate_model->set_degree_application();	// 		$this->session->set_flashdata("success","Application added successfully");	// 		redirect('apply_for_degree');	// 	}	// }	public function separate_student_print_degree(){		$data['single'] = $this->Separate_student_certificate_model->get_degree_details_for_print($this->uri->segment(2));		$data["division_degree"] = $this->Separate_student_certificate_model->get_student_division_for_degree_new_degree($data["single"]->student_id);		// echo "<pre>";print_r($data['single']);exit;		$this->load->view("admin/separate_student_print_degree",$data);	}	public function separate_student_degree_requests(){		$this->load->view("admin/separate_student_degree_requests");	}	public function approved_separate_student_degree_request(){		$this->form_validation->set_rules("issue_date","issue date",'required');		if($this->form_validation->run() === FALSE){			$data['degree'] = $this->Separate_student_certificate_model->get_single_separate_student_degree();			$this->load->view("admin/update_separate_student_degree_issue_date",$data);	}else{		$this->Separate_student_certificate_model->update_separate_student_degree_issue_date();		$this->session->set_flashdata("success","Verified and Degree Certificate generated successfully");			redirect('separate_student_degree_requests');		}	}	public function unapproved_separate_student_degree(){		$this->Separate_student_certificate_model->unapproved_separate_student_degree();		$this->session->set_flashdata("success","Un-Approved and Degree Deactivated successfully");		redirect($_SERVER["HTTP_REFERER"]);	}	public function approved_separate_student_degrees(){		if($this->input->post('send_btn') == "send_btn"){			$this->Separate_student_certificate_model->sent_student_degrees_for_print();			$this->session->set_flashdata("success","Certificate sent to print successfully");			redirect('approved_separate_student_degrees');		}		$this->load->view("admin/approved_separate_student_degrees");	}	public function separate_student_provisional_degree_requests(){		$this->load->view("admin/separate_student_provisional_degree_requests");	}	public function approved_separate_student_provisional_degrees(){		if($this->input->post('send_btn') == "send_btn"){			$this->Separate_student_certificate_model->sent_provisional_degrees_for_print();			$this->session->set_flashdata("success","Certificate sent to print successfully");			redirect('approved_separate_student_provisional_degrees');		}		$this->load->view("admin/approved_separate_student_provisional_degrees");	} 	public function print_separate_provisional_degree_certificate(){ 		$data['provisional_degree'] = $this->Separate_student_certificate_model->get_provisional_degrees_for_print($this->uri->segment(2));		$data["division"] = $this->Separate_student_certificate_model->get_print_division_for_degree($data['provisional_degree']->student_id,$data['provisional_degree']->course_id);		$this->load->view("admin/print_provisional_degree",$data);	}		public function separate_student_provisional_degrees(){		$this->form_validation->set_rules("issue_date","issue date",'required');		if($this->form_validation->run() === FALSE){			$data['provisional_degree'] = $this->Separate_student_certificate_model->get_single_separate_student_provisional_degrees();			$this->load->view("admin/update_separate_student_provisional_degrees_issue_date",$data);	}else{		$this->Separate_student_certificate_model->update_separate_student_provisional_degrees_issue_date();		$this->session->set_flashdata("success","Verified and Provisional Degree Certificate generated successfully");			redirect('separate_student_provisional_degree_requests');		}	}	public function separate_student_print_provisional_degree(){		// $data['single'] = $this->Separate_student_certificate_model->get_provisional_degree_details_for_print($this->uri->segment(2));		// $data["division_degree"] = $this->Separate_student_certificate_model->get_student_division_for_degree_new_degree($data["single"]->student_id);		$data['provisional_degree'] = $this->Separate_student_certificate_model->get_print_provisional_degree_certificate_regular($this->uri->segment(2));		$data["division"] = $this->Separate_student_certificate_model->get_print_division_for_degree_regular($data['provisional_degree']->student_id,$data['provisional_degree']->course_id);		$this->load->view("admin/separate_student_print_provisional_degree",$data);	}	public function student_transcript_certificate_failed(){		$this->load->view("admin/s_student_transcript_certificate_failed");	}	public function student_transcript_certificate_success(){		$this->load->view("admin/s_student_transcript_certificate_success");	}	public function student_transcript_certificate_approved(){		if($this->input->post('send_btn') == "send_btn"){			$this->Separate_student_certificate_model->sent_transcript_for_print();			$this->session->set_flashdata("success","Certificate sent to print successfully");			redirect('s_student_transcript_certificate_approved');		}		$this->load->view("admin/s_student_transcript_certificate_approved");	}	public function s_student_transcript_certificate_add(){		if($this->input->post('next') == "next"){		    $result = $this->Separate_student_certificate_model->get_vlaidate_student();  		}	    $this->form_validation->set_rules('enrollment_number','enrollment number','required');		if($this->form_validation->run() === FALSE){      	    $data['student'] = $this->Separate_student_certificate_model->get_student_profile_with_course();    		$this->load->view("admin/s_student_transcript_certificate_add",$data);		}else{		    $result = $this->Separate_student_certificate_model->set_transcript_form();		    $this->session->set_flashdata("success","Transcript updated successfully");		    redirect('s_student_transcript_certificate_add');		}	}	public function edit_transcript(){	    $this->form_validation->set_rules('enrollment_number','enrollment number','required');		if($this->form_validation->run() === FALSE){    	    $data['transcript'] = $this->Separate_student_certificate_model->get_single_transcript();    	    $data['details'] = $this->Separate_student_certificate_model->get_single_transcript_details();    		$this->load->view("admin/s_edit_transcript",$data);		}else{		    $result = $this->Separate_student_certificate_model->update_transcript();		    $this->session->set_flashdata("success","Transcript updated successfully");		    redirect($_SERVER['HTTP_REFERER']);		}	}	public function update_transcript_payment(){	    $this->form_validation->set_rules('bank','bank','required');		if($this->form_validation->run() === FALSE){		    $data['bank'] = $this->Setting_model->get_all_bank_list();    	    $data['transcript'] = $this->Separate_student_certificate_model->get_single_transcript(); 			$data['signature'] = $this->Separate_student_certificate_model->get_all_signature();    		$this->load->view("admin/s_update_transcript_payment",$data);		}else{		    $result = $this->Separate_student_certificate_model->update_transcript_payment();		    $this->session->set_flashdata("success","Transcript payment updated successfully");		    redirect($_SERVER['HTTP_REFERER']);		}	} 	public function approve_transcript(){		$this->form_validation->set_rules('issue_date','issue date','required');		if($this->form_validation->run() === FALSE){     	    $data['transcript'] = $this->Separate_student_certificate_model->get_single_transcript();     		$this->load->view("admin/update_transcript_issue_date",$data);		}else{		    $result = $this->Separate_student_certificate_model->approve_transcript();		    $this->session->set_flashdata("success","Transcript updated successfully");		    redirect('s_student_transcript_certificate_success');		} 	} 	public function disapprove_transcript(){	    $result = $this->Separate_student_certificate_model->disapprove_transcript();	    $this->session->set_flashdata("success","Transcript unapproved successfully");	    redirect($_SERVER['HTTP_REFERER']);	}	public function new_separate_thesis_list(){		$this->load->view("admin/new_separate_thesis_list");	}	public function separate_complete_thesis_list(){		$this->load->view("admin/separate_complete_thesis_list");	}	public function update_separate_thesis(){		$this->form_validation->set_rules("thesis_title","thesis title","required");		if($this->form_validation->run()===FALSE){			$data['single'] = $this->Separate_student_certificate_model->get_single_separate_thesis();			$data['guide'] = $this->Separate_student_certificate_model->get_active_separate_guide_list();			$this->load->view("admin/update_separate_thesis",$data);			}else{			$file1 ='';			if(isset($_FILES['file1'])){				$file1 = $this->Digitalocean_model->upload_photo($filename="file1",$path="images/thesis/");				/*				$config = array(					'upload_path' 	=> "images/thesis",					'allowed_types' => "*",					'encrypt_name'	=> true,				);				$this->upload->initialize($config);				if($this->upload->do_upload('userfile2')){					$data = $this->upload->data();						$file1 = $data['file_name'];				}else{					$error = array('error' => $this->upload->display_errors());						$this->upload->display_errors();				}*/		    }			$res = $this->Separate_student_certificate_model->get_update_separate_thesis($file1);			if($res == 1){			      $this->session->set_flashdata('sucess', 'Data updated successfully!!');			}				redirect ('new_separate_thesis_list');		}	}		// public function add_thesis(){	// 	$this->form_validation->set_rules("thesis_title","thesis title","required");	// 	if($this->form_validation->run()===FALSE){	// 		$data['single'] = $this->Separate_student_certificate_model->get_single_thesis();	// 		$data['guide_data'] = $this->Separate_student_certificate_model->get_active_guide_list();	// 		$this->load->view("admin/add_thesis",$data);		// 	}else{	// 		$file1 ='';	// 		if(isset($_FILES['file1'])){	// 			$file1 = $this->Digitalocean_model->upload_photo($filename="file1",$path="images/thesis/");	// 	    }	// 		$res = $this->Separate_student_certificate_model->set_separate_synopsis($file1);	// 		if($res == 1){	// 		    $this->session->set_flashdata("success","data added successfully!");	// 		}else{	// 			$this->session->set_flashdata('sucess', 'Data updated successfully!!');	// 		}		// 		redirect ('new_separate_synopsis_list');	// 	}	// }	public function new_separate_synopsis_list(){		$this->load->view("admin/new_separate_synopsis_list");	}	public function separate_complete_synopsis_list(){		$this->load->view("admin/separate_complete_synopsis_list");	}	public function update_separate_synopsis(){		$this->form_validation->set_rules("thesis_title","thesis title","required");		if($this->form_validation->run()===FALSE){			$data['single_synopsis'] = $this->Separate_student_certificate_model->get_single_separate_synopsis();			$data['guide_list'] = $this->Separate_student_certificate_model->get_active_separate_synopsis_guide_list();			$this->load->view("admin/update_separate_synopsis",$data);			}else{			$file1 ='';			if(isset($_FILES['file1'])){				$file1 = $this->Digitalocean_model->upload_photo($filename="file1",$path="images/thesis/");				/*$config = array(					'upload_path' 	=> "images/thesis",					'allowed_types' => "*",					'encrypt_name'	=> true,				);				$this->upload->initialize($config);				if($this->upload->do_upload('userfile1')){					$data = $this->upload->data();						$file1 = $data['file_name'];				}else{					$error = array('error' => $this->upload->display_errors());						$this->upload->display_errors();				}*/		    }			$res = $this->Separate_student_certificate_model->get_update_separate_synopsis($file1);			if($res == 1){			      $this->session->set_flashdata('success', 'Data updated successfully!!');			}else{			}			redirect ('new_separate_synopsis_list');		}	}	public function apply_separate_student_provisional_degrees(){		$this->form_validation->set_rules("issue_date","issue date","required");		if($this->form_validation->run() === FALSE){			$data['single'] = $this->Separate_student_certificate_model->get_single_provisional_student();			// echo "<pre>";print_r($data['single']);exit;			$data['signature'] = $this->Separate_student_certificate_model->get_all_signature();			$data['amount'] = $this->Separate_student_certificate_model->get_certificate_fees('3');			$this->load->view("admin/apply_separate_student_provisional_degrees",$data);	}else{		$this->Separate_student_certificate_model->apply_separate_student_provisional_degrees();		$this->session->set_flashdata("success","Details updated successfully");			redirect('separate_student_provisional_degree_requests');		} 	}	public function apply_for_course_work(){			if($this->input->post()){			if(!empty($this->input->post("generate"))){				$data["stu_data"] = $this->Admin_model->get_Separate_student_data_by_enrollment_no();				// echo "<pre>";print_r($data['stu_data']);exit;				$data["schedule_dates"] = $this->Web_model->get_phd_course_work_schedule_dates();				// exit;				$this->load->view("admin/phd_course_work_separate_student",$data);			}			if(!empty($this->input->post("payment_ammount"))){				$this->Admin_model->set_phd_course_work_form_data_separate_student();			}			// print_r( $this->input->post());			// exit;		}else{			if(!empty($this->uri->segment(2))){				$this->load->view("admin/phd_course_work_separate_student");							}else{				$this->load->view("admin/phd_course_work_separate_student_enrollment");								//$this->load->view("admin/phd_course_work_separate_student_enrollment ");			}		}	}	public function course_work_data_success(){		$this->load->view("admin/course_work_data_success");	}	public function course_work_data_fail(){		$this->load->view("admin/course_work_data_fail");	}	public function course_work_data_approved(){		$this->load->view("admin/course_work_data_approved");	}	public function s_pending_for_course_work(){		$this->load->view('admin/s_pending_for_course_work');	}	public function s_print_admin_transcript(){		$data['transcript'] = $this->Separate_student_certificate_model->get_print_transcript($this->uri->segment(2));		// echo "<pre>";print_r($data['transcript']);exit;	    $this->load->view('admin/print_transcript_separate',$data);	}	//letters seperate student 25 july	public function student_apply_bonafide_cer(){		$this->form_validation->set_rules('enrollment_no','Enrollment No','required');		if($this->form_validation->run() === FALSE){			$data['single'] = $this->Separate_student_certificate_model->get_single_bona_application();			$this->load->view('admin/blended_student_apply_bonafide_cer',$data);		}else{			$res = $this->Separate_student_certificate_model->student_apply_bonafide_cer();			if($res == 0){				$this->session->set_flashdata("success","Bonafide Certificate application submitted successfully!");			}			else{			      $this->session->set_flashdata('sucess', 'Bonafide Certificate application updated successfully!!');			}				redirect ('blended_student_req_bonafide_cer');		}	}	public function student_req_bonafide_cer(){		$data['application'] = $this->Separate_student_certificate_model->get_all_bona_application();		// echo"<pre>";print_r($data['application']);exit();		$this->load->view('admin/blended_student_req_bonafide_cer',$data);	}	public function approve_bona_application(){		$result = $this->Separate_student_certificate_model->approve_bona_application();		$this->session->set_flashdata("success","Bonafid Certificate application approved successfully");		redirect('blended_student_approved_bonafide_cer');	}	public function update_payment_bonafide(){		$this->form_validation->set_rules('transaction_id','Transaction ID','required');		if($this->form_validation->run() === FALSE){     	    $data['single'] = $this->Separate_student_certificate_model->get_single_bona_application_new(); 			$data['signature'] = $this->Separate_student_certificate_model->get_all_signature();			$data['amount'] = $this->Separate_student_certificate_model->get_certificate_fees('4');    		$this->load->view("admin/blended_approve_bona_application",$data);		}else{		    $result = $this->Separate_student_certificate_model->update_payment_bonafide();		    $this->session->set_flashdata("success","Payment details updated successfully");		    redirect('blended_student_req_bonafide_cer');		} 	} 	public function disapprove_bona_application(){		$this->form_validation->set_rules('remark','Remark','required');		if($this->form_validation->run() === FALSE){     	    $data['single'] = $this->Separate_student_certificate_model->get_single_bona_application_new();     		$this->load->view("admin/blended_disapprove_bona_application",$data);		}else{		    $result = $this->Separate_student_certificate_model->disapprove_bona_application();		    $this->session->set_flashdata("success","Bonafid Certificate application disapproved successfully");		    redirect('blended_student_req_bonafide_cer');		} 	} 	public function student_approved_bonafide_cer(){		$data['application'] = $this->Separate_student_certificate_model->student_approved_bonafide_cer();		$this->load->view('admin/blended_student_approved_bonafide_cer',$data);	}	public function print_bonafide_cer(){		$data['single'] = $this->Separate_student_certificate_model->get_single_bona_application_print();		$this->load->view('admin/blended_print_bonafide_cer',$data);	}	public function student_apply_inst_medium_letter(){		$this->form_validation->set_rules('enrollment_no','Enrollment No','required');		if($this->form_validation->run() === FALSE){			$data['single'] = $this->Separate_student_certificate_model->get_single_inst_medium_letter_application();			$this->load->view('admin/blended_student_apply_inst_medium_letter',$data);		}else{			$res = $this->Separate_student_certificate_model->student_apply_inst_medium_letter();			if($res == 0){				$this->session->set_flashdata("success","Medium of Instruction Letter application submitted successfully!");			}			else{			      $this->session->set_flashdata('sucess', 'Medium of Instruction Letter application updated successfully!!');			}				redirect ('blended_student_req_inst_medium_letter');		}	}	public function student_req_inst_medium_letter(){		$data['application'] = $this->Separate_student_certificate_model->get_all_inst_medium_application();		$this->load->view('admin/blended_student_req_inst_medium_letter',$data);	}	public function approve_inst_medium_application(){		$result = $this->Separate_student_certificate_model->approve_inst_medium_application();		$this->session->set_flashdata("success","Medium of Instruction letter application approved successfully");		redirect('blended_student_approved_inst_medium_letter');	}	public function update_payment_inst_medium(){		$this->form_validation->set_rules('transaction_id','Transaction ID','required');		if($this->form_validation->run() === FALSE){     	    $data['single'] = $this->Separate_student_certificate_model->get_single_inst_medium_letter_application_new(); 			$data['signature'] = $this->Separate_student_certificate_model->get_all_signature();			$data['amount'] = $this->Separate_student_certificate_model->get_certificate_fees('5');    		$this->load->view("admin/blended_approve_inst_medium_application",$data);		}else{		    $result = $this->Separate_student_certificate_model->update_payment_inst_medium();		    $this->session->set_flashdata("success","Payment details updated successfully");		    redirect('blended_student_req_inst_medium_letter');		} 	} 	public function disapprove_inst_medium_application(){		$this->form_validation->set_rules('remark','Remark','required');		if($this->form_validation->run() === FALSE){     	    $data['single'] = $this->Separate_student_certificate_model->get_single_inst_medium_letter_application_new();     		$this->load->view("admin/blended_disapprove_inst_medium_application",$data);		}else{		    $result = $this->Separate_student_certificate_model->disapprove_inst_medium_application();		    $this->session->set_flashdata("success","Medium of Instruction Letter application disapproved successfully");		    redirect('blended_student_req_inst_medium_letter');		} 	} 	public function student_approved_inst_medium_letter(){		$data['application'] = $this->Separate_student_certificate_model->student_approved_inst_medium_letter();		$this->load->view('admin/blended_student_approved_inst_medium_letter',$data);	}	public function print_inst_medium_letter(){		$data['single'] = $this->Separate_student_certificate_model->get_single_inst_medium_print();		$this->load->view('admin/blended_print_inst_medium_letter',$data);	}	public function student_apply_no_backlog_letter(){		$this->form_validation->set_rules('enrollment_no','Enrollment No','required');		if($this->form_validation->run() === FALSE){			$data['single'] = $this->Separate_student_certificate_model->get_single_no_backlog_letter_application();			$this->load->view('admin/blended_student_apply_no_backlog_letter',$data);		}else{			$res = $this->Separate_student_certificate_model->student_apply_no_backlog_letter();			if($res == 0){				$this->session->set_flashdata("success","No Backlog Summary application submitted successfully!");			}			else{			      $this->session->set_flashdata('sucess', 'No Backlog Summary application updated successfully!!');			}				redirect ('blended_student_req_no_backlog_letter');		}	}	public function student_req_no_backlog_letter(){		$data['application'] = $this->Separate_student_certificate_model->get_all_no_backlog_application();		$this->load->view('admin/blended_student_req_no_backlog_letter',$data);	}	public function update_payment_no_backlog(){		$this->form_validation->set_rules('transaction_id','Transaction ID','required');		if($this->form_validation->run() === FALSE){     	    $data['single'] = $this->Separate_student_certificate_model->get_single_no_backlog_application_new(); 			$data['signature'] = $this->Separate_student_certificate_model->get_all_signature();			$data['amount'] = $this->Separate_student_certificate_model->get_certificate_fees('6');    		$this->load->view("admin/blended_approve_no_backlog_application",$data);		}else{		    $result = $this->Separate_student_certificate_model->update_payment_no_backlog();		    $this->session->set_flashdata("success","Payment details updated successfully");		    redirect('blended_student_req_no_backlog_letter');		} 	} 	public function approve_no_backlog_application(){		$result = $this->Separate_student_certificate_model->approve_no_backlog_application();		$this->session->set_flashdata("success","No Backlog Summary application approved successfully");		redirect('blended_student_approved_no_backlog_letter');	} 	public function disapprove_no_backlog_application(){		$this->form_validation->set_rules('remark','Remark','required');		if($this->form_validation->run() === FALSE){     	    $data['single'] = $this->Separate_student_certificate_model->get_single_no_backlog_application_new();     		$this->load->view("admin/blended_disapprove_no_backlog_application",$data);		}else{		    $result = $this->Separate_student_certificate_model->disapprove_no_backlog_application();		    $this->session->set_flashdata("success","No Backlog Summary application disapproved successfully");		    redirect('blended_student_req_no_backlog_letter');		} 	} 	public function student_approved_no_backlog_letter(){		$data['application'] = $this->Separate_student_certificate_model->student_approved_no_backlog_letter();		$this->load->view('admin/blended_student_approved_no_backlog_letter',$data);	}	public function print_no_backlog_letter(){		$data['single'] = $this->Separate_student_certificate_model->get_single_no_backlog_print();		$this->load->view('admin/blended_print_no_backlog_letter',$data);	}	public function student_apply_no_split_letter(){		$this->form_validation->set_rules('enrollment_no','Enrollment No','required');		if($this->form_validation->run() === FALSE){			$data['single'] = $this->Separate_student_certificate_model->get_single_no_split_letter_application();			$this->load->view('admin/blended_student_apply_no_split_letter',$data);		}else{			$res = $this->Separate_student_certificate_model->student_apply_no_split_letter();			if($res == 0){				$this->session->set_flashdata("success","No Split Issue application submitted successfully!");			}			else{			      $this->session->set_flashdata('sucess', 'No Split Issue application updated successfully!!');			}				redirect ('blended_student_req_no_split_letter');		}	}	public function student_req_no_split_letter(){		$data['application'] = $this->Separate_student_certificate_model->get_all_no_split_application();		$this->load->view('admin/blended_student_req_no_split_letter',$data);	}	public function update_payment_no_split(){		$this->form_validation->set_rules('transaction_id','Transaction ID','required');		if($this->form_validation->run() === FALSE){     	    $data['single'] = $this->Separate_student_certificate_model->get_single_no_split_application_new(); 			$data['signature'] = $this->Separate_student_certificate_model->get_all_signature();			$data['amount'] = $this->Separate_student_certificate_model->get_certificate_fees('7');    		$this->load->view("admin/blended_approve_no_split_application",$data);		}else{		    $result = $this->Separate_student_certificate_model->update_payment_no_split();		    $this->session->set_flashdata("success","Payment details updated successfully");		    redirect('blended_student_req_no_split_letter');		} 	} 	public function approve_no_split_application(){		$result = $this->Separate_student_certificate_model->approve_no_split_application();		$this->session->set_flashdata("success","No Split Issue application approved successfully");		redirect('blended_student_approved_no_split_letter');	} 	public function disapprove_no_split_application(){		$this->form_validation->set_rules('remark','Remark','required');		if($this->form_validation->run() === FALSE){     	    $data['single'] = $this->Separate_student_certificate_model->get_single_no_split_application_new();     		$this->load->view("admin/blended_disapprove_no_split_application",$data);		}else{		    $result = $this->Separate_student_certificate_model->disapprove_no_split_application();		    $this->session->set_flashdata("success","No Split Issue application disapproved successfully");		    redirect('blended_student_req_no_split_letter');		} 	} 	public function student_approved_no_split_letter(){		$data['application'] = $this->Separate_student_certificate_model->student_approved_no_split_letter();		$this->load->view('admin/blended_student_approved_no_split_letter',$data);	}	public function print_no_split_letter(){		$data['single'] = $this->Separate_student_certificate_model->get_single_no_split_print();		$this->load->view('admin/blended_print_no_split_letter',$data);	}	public function student_apply_reccom_letter(){		$this->form_validation->set_rules('enrollment_no','Enrollment No','required');		if($this->form_validation->run() === FALSE){			$data['single'] = $this->Separate_student_certificate_model->get_single_reccom_letter_application();			$this->load->view('admin/blended_student_apply_reccom_letter',$data);		}else{			$res = $this->Separate_student_certificate_model->student_apply_reccom_letter();			if($res == 0){				$this->session->set_flashdata("success","Recommendation Letter application submitted successfully!");			}			else{			      $this->session->set_flashdata('sucess', 'Recommendation Letter application updated successfully!!');			}				redirect ('blended_student_req_reccom_letter');		}	}	public function student_req_reccom_letter(){		$data['application'] = $this->Separate_student_certificate_model->get_all_reccom_application();		$this->load->view('admin/blended_student_req_reccom_letter',$data);	}	public function update_payment_reccom(){		$this->form_validation->set_rules('transaction_id','Transaction ID','required');		if($this->form_validation->run() === FALSE){     	    $data['single'] = $this->Separate_student_certificate_model->get_single_reccom_application_new(); 			$data['signature'] = $this->Separate_student_certificate_model->get_all_signature();			$data['amount'] = $this->Separate_student_certificate_model->get_certificate_fees('9');    		$this->load->view("admin/blended_update_payment_reccom",$data);		}else{		    $result = $this->Separate_student_certificate_model->update_payment_reccom();		    $this->session->set_flashdata("success","Payment details updated successfully");		    redirect('blended_student_req_reccom_letter');		} 	} 	public function approve_reccom_application(){		$result = $this->Separate_student_certificate_model->approve_reccom_application();		$this->session->set_flashdata("success","Recommendation Letter application approved successfully");		redirect('blended_student_approved_reccom_letter');	} 	public function disapprove_reccom_application(){		$this->form_validation->set_rules('remark','Remark','required');		if($this->form_validation->run() === FALSE){     	    $data['single'] = $this->Separate_student_certificate_model->get_single_reccom_application_new();     		$this->load->view("admin/blended_disapprove_reccom_application",$data);		}else{		    $result = $this->Separate_student_certificate_model->disapprove_reccom_application();		    $this->session->set_flashdata("success","Recommendation Letter application disapproved successfully");		    redirect('blended_student_req_reccom_letter');		} 	} 	public function student_approved_reccom_letter(){		$data['application'] = $this->Separate_student_certificate_model->student_approved_reccom_letter();		// echo "<pre>"; print_r($data['application']); exit();		$this->load->view('admin/blended_student_approved_reccom_letter',$data);	}	public function print_reccom_letter(){		$data['single'] = $this->Separate_student_certificate_model->get_single_reccom_print();		$this->load->view('admin/blended_print_reccom_letter',$data);	}//character certificate 	public function student_apply_character_certificate(){		$this->form_validation->set_rules('enrollment_no','Enrollment No','required');		if($this->form_validation->run() === FALSE){			$data['single'] = $this->Separate_student_certificate_model->get_single_character_certificate();			$data['amount'] = $this->Separate_student_certificate_model->get_certificate_fees('10');			$this->load->view('admin/blended_student_apply_character_certificate',$data);		}else{			$res = $this->Separate_student_certificate_model->student_apply_character_certificate();			if($res == 0){				$this->session->set_flashdata("success","Character certificate submitted successfully!");			}			else{			      $this->session->set_flashdata('success', 'Character certificate updated successfully!!');			}				redirect ('blended_student_req_character_certificate');		}	}	public function student_req_character_certificate(){		$data['application'] = $this->Separate_student_certificate_model->get_all_character_certificate();		$this->load->view('admin/blended_student_req_character_certificate',$data);	}	public function update_payment_character_certificate(){		$this->form_validation->set_rules('transaction_id','Transaction ID','required');		if($this->form_validation->run() === FALSE){     	    $data['single'] = $this->Separate_student_certificate_model->get_single_character_certificate_new();			$data['signature'] = $this->Separate_student_certificate_model->get_all_signature(); 			$data['amount'] = $this->Separate_student_certificate_model->get_certificate_fees('10');    		$this->load->view("admin/blended_update_payment_character_certificate",$data);		}else{		    $result = $this->Separate_student_certificate_model->update_payment_character_certificate();		    $this->session->set_flashdata("success","Payment details updated successfully");		    redirect('blended_student_req_character_certificate');		} 	} 	public function approve_character_certificate(){		$result = $this->Separate_student_certificate_model->approve_character_certificate();		$this->session->set_flashdata("success","Character certificate approved successfully");		redirect('blended_student_approved_character_certificate');	} 	public function disapprove_character_certificate(){		$this->form_validation->set_rules('remark','Remark','required');		if($this->form_validation->run() === FALSE){     	    $data['single'] = $this->Separate_student_certificate_model->get_single_character_certificate_new();     		$this->load->view("admin/blended_disapprove_character_certificate",$data);		}else{		    $result = $this->Separate_student_certificate_model->disapprove_character_certificate();		    $this->session->set_flashdata("success","Character certificate disapproved successfully");		    redirect('blended_student_req_character_certificate');		} 	} 	public function student_approved_character_certificate(){		$data['application'] = $this->Separate_student_certificate_model->student_approved_character_certificate();		$this->load->view('admin/blended_student_approved_character_certificate',$data);	}	public function print_character_certificate(){		$data['single'] = $this->Separate_student_certificate_model->get_single_character_certificate_print();		$this->load->view('admin/blended_print_character_certificate',$data);	}	public function apply_separate_synopsis_list(){		if($this->input->post("next") == "Next"){			$result = $this->Separate_student_certificate_model->get_synopsis_certificate_details();			if(!empty($result)){				redirect('apply_separate_synopsis_list/'.$result->enrollment_number);			}else{				$this->session->set_flashdata("message","Please enter valid enrollment_number");				redirect('apply_separate_synopsis_list');			}		}		$this->form_validation->set_rules("enrollment_number","enrollment number","required");		$data['single'] = $this->Separate_student_certificate_model->get_synopsis_certificate_details_single();		// echo "<pre>";print_r($data['single']);exit;		$data['signature'] = $this->Separate_student_certificate_model->get_all_signature();		// echo "<pre>";print_r($data['signature']);exit;		if($this->form_validation->run() === FALSE){			$this->load->view("admin/apply_separate_synopsis_list",$data);		}else{			$this->Separate_student_certificate_model->set_separate_synopsis_certificate();			$this->session->set_flashdata("success","Application added successfully");			redirect('apply_separate_synopsis_list');		}	}	public function print_separate_synopsis(){ 		$id = $this->uri->segment(2);		$data['single'] = $this->Separate_student_certificate_model->get_print_synopsis($id);		$this->load->view('admin/print_separate_synopsis',$data);	}}